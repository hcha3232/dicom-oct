{
  "version": 3,
  "sources": ["browser-external:zlib", "webpack://dicomParser/webpack/universalModuleDefinition", "webpack://dicomParser/external%20%22zlib%22", "webpack://dicomParser/util/util.js", "webpack://dicomParser/util/parseTM.js", "webpack://dicomParser/util/parseDA.js", "webpack://dicomParser/util/elementToString.js", "webpack://dicomParser/util/dataSetToJS.js", "webpack://dicomParser/util/createJPEGBasicOffsetTable.js", "webpack://dicomParser/readTag.js", "webpack://dicomParser/findEndOfEncapsulatedPixelData.js", "webpack://dicomParser/findAndSetUNElementLength.js", "webpack://dicomParser/byteArrayParser.js", "webpack://dicomParser/dataSet.js", "webpack://dicomParser/findItemDelimitationItem.js", "webpack://dicomParser/readDicomElementImplicit.js", "webpack://dicomParser/readSequenceItem.js", "webpack://dicomParser/readSequenceElementImplicit.js", "webpack://dicomParser/readSequenceElementExplicit.js", "webpack://dicomParser/readDicomElementExplicit.js", "webpack://dicomParser/parseDicomDataSet.js", "webpack://dicomParser/alloc.js", "webpack://dicomParser/version.js", "webpack://dicomParser/bigEndianByteArrayParser.js", "webpack://dicomParser/sharedCopy.js", "webpack://dicomParser/byteStream.js", "webpack://dicomParser/littleEndianByteArrayParser.js", "webpack://dicomParser/readPart10Header.js", "webpack://dicomParser/parseDicom.js", "webpack://dicomParser/readEncapsulatedPixelDataFromFragments.js", "webpack://dicomParser/readEncapsulatedImageFrame.js", "webpack://dicomParser/readEncapsulatedPixelData.js", "webpack://dicomParser/index.js", "webpack://dicomParser/webpack/bootstrap", "browser-external:fs", "browser-external:path", "../../node_modules/@cornerstonejs/codec-libjpeg-turbo-8bit/dist/libjpegturbowasm_decode.js", "../../node_modules/@cornerstonejs/codec-charls/dist/charlswasm_decode.js", "../../node_modules/@cornerstonejs/codec-openjpeg/dist/openjpegwasm_decode.js", "../../node_modules/@cornerstonejs/codec-openjph/dist/openjphjs.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/colorSpaceConverters/convertRGBColorByPixel.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/colorSpaceConverters/convertRGBColorByPlane.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/colorSpaceConverters/convertYBRFullByPixel.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/colorSpaceConverters/convertYBRFullByPlane.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/colorSpaceConverters/convertYBRFull422ByPixel.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/colorSpaceConverters/convertPALETTECOLOR.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/metaData/getImagePixelModule.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/metaData/getLUTs.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/metaData/getModalityLUTOutputPixelRepresentation.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/metaData/getNumberValues.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/metaData/metaDataProvider.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/parseImageId.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/dataSetCacheManager.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/internal/options.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/internal/xhrRequest.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadors/findIndexOfString.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadors/extractMultipart.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadors/getImageQualityStatus.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/internal/streamRequest.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/internal/index.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/dataset-from-partial-content.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/combineFrameInstanceDataset.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/loadedDataSets.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/retrieveMultiframeDataset.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/metaData/getOverlayPlaneModule.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/isNMReconstructable.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/metaData/extractPositioningFromDataset.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/getInstanceModule.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/metaData/USHelpers.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/fileManager.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/getEncapsulatedImageFrame.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/unpackBinaryFrame.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/getUncompressedImageFrame.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/loadFileRequest.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/getPixelData.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/shared/getMinMax.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/convertColorSpace.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/isColorConversionRequired.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/decodeJPEGBaseline8BitColor.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/decodeImageFrame.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/getImageFrame.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/getScalingParameters.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/shared/isColorImage.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/removeAFromRGBA.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/isModalityLutForDisplay.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/shared/getPixelDataTypeFromMinMax.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/setPixelDataType.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/createImage.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/loadImage.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/register.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadouri/index.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadors/metaData/getValue.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadors/metaData/getNumberString.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadors/metaData/getNumberValue.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadors/metaData/getNumberValues.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadors/metaData/metaDataProvider.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadors/metaData/getOverlayPlaneModule.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/imageIdToURI.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadors/getTagValue.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadors/combineFrameInstance.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadors/metaDataManager.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadors/metaData/NMHelpers.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadors/metaData/extractPositioningFromMetadata.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadors/metaData/getFirstNumberValue.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadors/metaData/getSequenceItems.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadors/metaData/USHelpers.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/internal/rangeRequest.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadors/getPixelData.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadors/loadImage.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadors/register.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/wadors/index.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/registerLoaders.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/init.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/imageLoader/isJPEGBaseline8BitColor.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/constants/index.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/constants/transferSyntaxes.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/shared/scaling/bilinear.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/shared/scaling/replicate.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/shared/decoders/decodeLittleEndian.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/shared/decoders/decodeBigEndian.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/shared/decoders/decodeRLE.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/shared/decoders/decodeJPEGBaseline8Bit.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/shared/decoders/decodeJPEGBaseline12Bit-js.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/shared/decoders/decodeJPEGLossless.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/shared/decoders/decodeJPEGLS.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/shared/decoders/decodeJPEG2000.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/shared/decoders/decodeHTJ2K.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/shared/scaling/scaleArray.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/decodeImageFrameWorker.js", "../../node_modules/@cornerstonejs/dicom-image-loader/dist/esm/index.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"zlib\" has been externalized for browser compatibility. Cannot access \"zlib.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"zlib\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"dicom-parser\", [\"zlib\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dicom-parser\"] = factory(require(\"zlib\"));\n\telse\n\t\troot[\"dicomParser\"] = factory(root[\"zlib\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn ", "module.exports = __WEBPACK_EXTERNAL_MODULE__0__;", "const stringVrs = {\n  AE: true,\n  AS: true,\n  AT: false,\n  CS: true,\n  DA: true,\n  DS: true,\n  DT: true,\n  FL: false,\n  FD: false,\n  IS: true,\n  LO: true,\n  LT: true,\n  OB: false,\n  OD: false,\n  OF: false,\n  OW: false,\n  PN: true,\n  SH: true,\n  SL: false,\n  SQ: false,\n  SS: false,\n  ST: true,\n  TM: true,\n  UI: true,\n  UL: false,\n  UN: undefined, // dunno\n  UR: true,\n  US: false,\n  UT: true\n};\n\n/**\n * Tests to see if vr is a string or not.\n * @param vr\n * @returns true if string, false it not string, undefined if unknown vr or UN type\n */\nconst isStringVr = (vr) => stringVrs[vr];\n\n/**\n * Tests to see if a given tag in the format xggggeeee is a private tag or not\n * @param tag\n * @returns {boolean}\n * @throws error if fourth character cannot be parsed\n */\nconst isPrivateTag = (tag) => {\n  const lastGroupDigit = parseInt(tag[4], 16);\n  if (isNaN(lastGroupDigit)) {\n    throw 'dicomParser.isPrivateTag: cannot parse last character of group';\n  }\n  const groupIsOdd = (lastGroupDigit % 2) === 1;\n\n  return groupIsOdd;\n};\n\n/**\n * Parses a PN formatted string into a javascript object with properties for givenName, familyName, middleName, prefix and suffix\n * @param personName a string in the PN VR format\n * @param index\n * @returns {*} javascript object with properties for givenName, familyName, middleName, prefix and suffix or undefined if no element or data\n */\nconst parsePN = (personName) => {\n  if (personName === undefined) {\n    return undefined;\n  }\n  const stringValues = personName.split('^');\n\n\n  return {\n    familyName: stringValues[0],\n    givenName: stringValues[1],\n    middleName: stringValues[2],\n    prefix: stringValues[3],\n    suffix: stringValues[4]\n  };\n};\n\nexport {\n  isStringVr,\n  isPrivateTag,\n  parsePN\n};\n", "/**\n * Parses a TM formatted string into a javascript object with properties for hours, minutes, seconds and fractionalSeconds\n * @param {string} time - a string in the TM VR format\n * @param {boolean} [validate] - true if an exception should be thrown if the date is invalid\n * @returns {*} javascript object with properties for hours, minutes, seconds and fractionalSeconds or undefined if no element or data.  Missing fields are set to undefined\n */\nexport default function parseTM (time, validate) {\n  if (time.length >= 2) { // must at least have HH\n    // 0123456789\n    // HHMMSS.FFFFFF\n    const hh = parseInt(time.substring(0, 2), 10);\n    const mm = time.length >= 4 ? parseInt(time.substring(2, 4), 10) : undefined;\n    const ss = time.length >= 6 ? parseInt(time.substring(4, 6), 10) : undefined;\n\n    const fractionalStr = time.length >= 8 ? time.substring(7, 13) : undefined;\n    const ffffff = fractionalStr ? (parseInt(fractionalStr, 10) * Math.pow(10, 6 - fractionalStr.length)) : undefined;\n\n    if (validate) {\n      if ((isNaN(hh)) ||\n        (mm !== undefined && isNaN(mm)) ||\n        (ss !== undefined && isNaN(ss)) ||\n        (ffffff !== undefined && isNaN(ffffff)) ||\n        (hh < 0 || hh > 23) ||\n        (mm && (mm < 0 || mm > 59)) ||\n        (ss && (ss < 0 || ss > 59)) ||\n        (ffffff && (ffffff < 0 || ffffff > 999999))) {\n        throw `invalid TM '${time}'`;\n      }\n    }\n\n    return {\n      hours: hh,\n      minutes: mm,\n      seconds: ss,\n      fractionalSeconds: ffffff\n    };\n  }\n\n  if (validate) {\n    throw `invalid TM '${time}'`;\n  }\n\n  return undefined;\n}\n", "// algorithm based on http://stackoverflow.com/questions/1433030/validate-number-of-days-in-a-given-month\nfunction daysInMonth (m, y) { // m is 0 indexed: 0-11\n  switch (m) {\n  case 2 :\n    return (y % 4 == 0 && y % 100) || y % 400 == 0 ? 29 : 28;\n  case 9 : case 4 : case 6 : case 11 :\n    return 30;\n  default :\n    return 31;\n  }\n}\n\nfunction isValidDate (d, m, y) {\n  // make year is a number\n  if (isNaN(y)) {\n    return false;\n  }\n\n  return m > 0 && m <= 12 && d > 0 && d <= daysInMonth(m, y);\n}\n\n\n/**\n * Parses a DA formatted string into a Javascript object\n * @param {string} date a string in the DA VR format\n * @param {boolean} [validate] - true if an exception should be thrown if the date is invalid\n * @returns {*} Javascript object with properties year, month and day or undefined if not present or not 8 bytes long\n */\nexport default function parseDA (date, validate) {\n  if (date && date.length === 8) {\n    var yyyy = parseInt(date.substring(0, 4), 10);\n    var mm = parseInt(date.substring(4, 6), 10);\n    var dd = parseInt(date.substring(6, 8), 10);\n\n    if (validate) {\n      if (isValidDate(dd, mm, yyyy) !== true) {\n        throw `invalid DA '${date}'`;\n      }\n    }\n\n    return {\n      year: yyyy,\n      month: mm,\n      day: dd\n    };\n  }\n  if (validate) {\n    throw `invalid DA '${date}'`;\n  }\n\n  return undefined;\n}\n", "import * as util from './util.js';\n\n/**\n * Converts an explicit VR element to a string or undefined if it is not possible to convert.\n * Throws an error if an implicit element is supplied\n * @param dataSet\n * @param element\n * @returns {*}\n */\nexport default function explicitElementToString (dataSet, element) {\n  if (dataSet === undefined || element === undefined) {\n    throw 'dicomParser.explicitElementToString: missing required parameters';\n  }\n  if (element.vr === undefined) {\n    throw 'dicomParser.explicitElementToString: cannot convert implicit element to string';\n  }\n  var vr = element.vr;\n  var tag = element.tag;\n\n  var textResult;\n\n  function multiElementToString (numItems, func) {\n    var result = '';\n\n    for (var i = 0; i < numItems; i++) {\n      if (i !== 0) {\n        result += '/';\n      }\n      result += func.call(dataSet, tag, i).toString();\n    }\n\n    return result;\n  }\n\n  if (util.isStringVr(vr) === true) {\n    textResult = dataSet.string(tag);\n  } else if (vr === 'AT') {\n    var num = dataSet.uint32(tag);\n\n    if (num === undefined) {\n      return undefined;\n    }\n    if (num < 0) {\n      num = 0xFFFFFFFF + num + 1;\n    }\n\n    return `x${num.toString(16).toUpperCase()}`;\n  } else if (vr === 'US') {\n    textResult = multiElementToString(element.length / 2, dataSet.uint16);\n  } else if (vr === 'SS') {\n    textResult = multiElementToString(element.length / 2, dataSet.int16);\n  } else if (vr === 'UL') {\n    textResult = multiElementToString(element.length / 4, dataSet.uint32);\n  } else if (vr === 'SL') {\n    textResult = multiElementToString(element.length / 4, dataSet.int32);\n  } else if (vr === 'FD') {\n    textResult = multiElementToString(element.length / 8, dataSet.double);\n  } else if (vr === 'FL') {\n    textResult = multiElementToString(element.length / 4, dataSet.float);\n  }\n\n  return textResult;\n}\n", "import explicitElementToString from './elementToString.js';\nimport * as util from './util.js';\n\n/**\n * converts an explicit dataSet to a javascript object\n * @param dataSet\n * @param options\n */\nexport default function explicitDataSetToJS (dataSet, options) {\n  if (dataSet === undefined) {\n    throw 'dicomParser.explicitDataSetToJS: missing required parameter dataSet';\n  }\n\n  options = options || {\n    omitPrivateAttibutes: true, // true if private elements should be omitted\n    maxElementLength: 128 // maximum element length to try and convert to string format\n  };\n\n  var result = {\n\n  };\n\n  for (var tag in dataSet.elements) {\n    var element = dataSet.elements[tag];\n\n    // skip this element if it a private element and our options specify that we should\n    if (options.omitPrivateAttibutes === true && util.isPrivateTag(tag)) {\n      continue;\n    }\n\n    if (element.items) {\n      // handle sequences\n      var sequenceItems = [];\n\n      for (var i = 0; i < element.items.length; i++) {\n        sequenceItems.push(explicitDataSetToJS(element.items[i].dataSet, options));\n      }\n      result[tag] = sequenceItems;\n    } else {\n      var asString;\n\n      asString = undefined;\n      if (element.length < options.maxElementLength) {\n        asString = explicitElementToString(dataSet, element);\n      }\n\n      if (asString !== undefined) {\n        result[tag] = asString;\n      } else {\n        result[tag] = {\n          dataOffset: element.dataOffset,\n          length: element.length\n        };\n      }\n    }\n  }\n\n  return result;\n}\n", "// Each JPEG image has an end of image marker 0xFFD9\nfunction isEndOfImageMarker (dataSet, position) {\n  return (dataSet.byteArray[position] === 0xFF &&\n  dataSet.byteArray[position + 1] === 0xD9);\n}\n\nfunction isFragmentEndOfImage (dataSet, pixelDataElement, fragmentIndex) {\n  var fragment = pixelDataElement.fragments[fragmentIndex];\n  // Need to check the last two bytes and the last three bytes for marker since odd length\n  // fragments are zero padded\n\n  if (isEndOfImageMarker(dataSet, fragment.position + fragment.length - 2) ||\n    isEndOfImageMarker(dataSet, fragment.position + fragment.length - 3)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction findLastImageFrameFragmentIndex (dataSet, pixelDataElement, startFragment) {\n  for (var fragmentIndex = startFragment; fragmentIndex < pixelDataElement.fragments.length; fragmentIndex++) {\n    if (isFragmentEndOfImage(dataSet, pixelDataElement, fragmentIndex)) {\n      return fragmentIndex;\n    }\n  }\n}\n\n/**\n * Creates a basic offset table by scanning fragments for JPEG start of image and end Of Image markers\n * @param {object} dataSet - the parsed dicom dataset\n * @param {object} pixelDataElement - the pixel data element\n * @param [fragments] - optional array of objects describing each fragment (offset, position, length)\n * @returns {Array} basic offset table (array of offsets to beginning of each frame)\n */\nexport default function createJPEGBasicOffsetTable (dataSet, pixelDataElement, fragments) {\n  // Validate parameters\n  if (dataSet === undefined) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: missing required parameter dataSet';\n  }\n  if (pixelDataElement === undefined) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: missing required parameter pixelDataElement';\n  }\n  if (pixelDataElement.tag !== 'x7fe00010') {\n    throw 'dicomParser.createJPEGBasicOffsetTable: parameter \\'pixelDataElement\\' refers to non pixel data tag (expected tag = x7fe00010\\'';\n  }\n  if (pixelDataElement.encapsulatedPixelData !== true) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.hadUndefinedLength !== true) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.basicOffsetTable === undefined) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.fragments === undefined) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.fragments.length <= 0) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (fragments && fragments.length <= 0) {\n    throw 'dicomParser.createJPEGBasicOffsetTable: parameter \\'fragments\\' must not be zero length';\n  }\n\n  // Default values\n  fragments = fragments || pixelDataElement.fragments;\n\n  var basicOffsetTable = [];\n\n  var startFragmentIndex = 0;\n\n  while (true) {\n    // Add the offset for the start fragment\n    basicOffsetTable.push(pixelDataElement.fragments[startFragmentIndex].offset);\n    var endFragmentIndex = findLastImageFrameFragmentIndex(dataSet, pixelDataElement, startFragmentIndex);\n\n    if (endFragmentIndex === undefined || endFragmentIndex === pixelDataElement.fragments.length - 1) {\n      return basicOffsetTable;\n    }\n    startFragmentIndex = endFragmentIndex + 1;\n  }\n}\n", "/**\n * Internal helper functions for parsing DICOM elements\n */\n\n/**\n * Reads a tag (group number and element number) from a byteStream\n * @param byteStream the byte stream to read from\n * @returns {string} the tag in format xggggeeee where gggg is the lowercase hex value of the group number\n * and eeee is the lower case hex value of the element number\n */\nexport default function readTag (byteStream) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.readTag: missing required parameter \\'byteStream\\'';\n  }\n\n  const groupNumber = byteStream.readUint16() * 256 * 256;\n  const elementNumber = byteStream.readUint16();\n  const tag = `x${(`00000000${(groupNumber + elementNumber).toString(16)}`).substr(-8)}`;\n\n  return tag;\n}\n", "import readTag from './readTag.js';\n\n/**\n * Internal helper functions for parsing DICOM elements\n */\n\n/**\n * Reads an encapsulated pixel data element and adds an array of fragments to the element\n * containing the offset and length of each fragment and any offsets from the basic offset\n * table\n * @param byteStream\n * @param element\n */\nexport default function findEndOfEncapsulatedElement (byteStream, element, warnings) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.findEndOfEncapsulatedElement: missing required parameter \\'byteStream\\'';\n  }\n\n  if (element === undefined) {\n    throw 'dicomParser.findEndOfEncapsulatedElement: missing required parameter \\'element\\'';\n  }\n\n  element.encapsulatedPixelData = true;\n  element.basicOffsetTable = [];\n  element.fragments = [];\n\n  const basicOffsetTableItemTag = readTag(byteStream);\n\n  if (basicOffsetTableItemTag !== 'xfffee000') {\n    throw 'dicomParser.findEndOfEncapsulatedElement: basic offset table not found';\n  }\n\n  const basicOffsetTableItemlength = byteStream.readUint32();\n  const numFragments = basicOffsetTableItemlength / 4;\n\n  // Bad idea to not include the basic offset table, as it means writing the data out is inconsistent with reading it\n  // but leave this for now.  To fix later.\n  for (let i = 0; i < numFragments; i++) {\n    const offset = byteStream.readUint32();\n\n    element.basicOffsetTable.push(offset);\n  }\n\n  const baseOffset = byteStream.position;\n\n  while (byteStream.position < byteStream.byteArray.length) {\n    const tag = readTag(byteStream);\n    let length = byteStream.readUint32();\n\n    if (tag === 'xfffee0dd') {\n      byteStream.seek(length);\n      element.length = byteStream.position - element.dataOffset;\n\n      return;\n    } else if (tag === 'xfffee000') {\n      element.fragments.push({\n        offset: byteStream.position - baseOffset - 8,\n        position: byteStream.position,\n        length\n      });\n    } else {\n      if (warnings) {\n        warnings.push(`unexpected tag ${tag} while searching for end of pixel data element with undefined length`);\n      }\n\n      if (length > byteStream.byteArray.length - byteStream.position) {\n        // fix length\n        length = byteStream.byteArray.length - byteStream.position;\n      }\n\n      element.fragments.push({\n        offset: byteStream.position - baseOffset - 8,\n        position: byteStream.position,\n        length\n      });\n\n      byteStream.seek(length);\n      element.length = byteStream.position - element.dataOffset;\n\n      return;\n    }\n\n    byteStream.seek(length);\n  }\n\n  if (warnings) {\n    warnings.push(`pixel data element ${element.tag} missing sequence delimiter tag xfffee0dd`);\n  }\n}\n", "/**\n * Internal helper functions for parsing DICOM elements\n */\n\n/**\n * reads from the byte stream until it finds the magic number for the Sequence Delimitation\n * Item item and then sets the length of the element\n * @param byteStream\n * @param element\n */\nexport default function findAndSetUNElementLength (byteStream, element) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.findAndSetUNElementLength: missing required parameter \\'byteStream\\'';\n  }\n\n  // group, element, length\n  const itemDelimitationItemLength = 8;\n  const maxPosition = byteStream.byteArray.length - itemDelimitationItemLength;\n\n  while (byteStream.position <= maxPosition) {\n    const groupNumber = byteStream.readUint16();\n\n    if (groupNumber === 0xfffe) {\n      const elementNumber = byteStream.readUint16();\n\n      if (elementNumber === 0xe0dd) {\n        // NOTE: It would be better to also check for the length to be 0 as part of the check above\n        // but we will just log a warning for now\n        const itemDelimiterLength = byteStream.readUint32();\n\n        if (itemDelimiterLength !== 0) {\n          byteStream.warnings(`encountered non zero length following item delimiter at position ${byteStream.position - 4} while reading element of undefined length with tag ${element.tag}`);\n        }\n        element.length = byteStream.position - element.dataOffset;\n\n        return;\n      }\n    }\n  }\n\n  // No item delimitation item - silently set the length to the end\n  // of the buffer and set the position past the end of the buffer\n  element.length = byteStream.byteArray.length - element.dataOffset;\n  byteStream.seek(byteStream.byteArray.length - byteStream.position);\n}\n", "/**\n * Internal helper functions common to parsing byte arrays of any type\n */\n\n/**\n * Reads a string of 8-bit characters from an array of bytes and advances\n * the position by length bytes.  A null terminator will end the string\n * but will not affect advancement of the position.  Trailing and leading\n * spaces are preserved (not trimmed)\n * @param byteArray the byteArray to read from\n * @param position the position in the byte array to read from\n * @param length the maximum number of bytes to parse\n * @returns {string} the parsed string\n * @throws error if buffer overread would occur\n * @access private\n */\nexport function readFixedString (byteArray, position, length) {\n  if (length < 0) {\n    throw 'dicomParser.readFixedString - length cannot be less than 0';\n  }\n\n  if (position + length > byteArray.length) {\n    throw 'dicomParser.readFixedString: attempt to read past end of buffer';\n  }\n\n  var result = '';\n  var byte;\n\n  for (var i = 0; i < length; i++) {\n    byte = byteArray[position + i];\n    if (byte === 0) {\n      position += length;\n\n      return result;\n    }\n    result += String.fromCharCode(byte);\n  }\n\n  return result;\n}\n", "import { readFixedString } from './byteArrayParser.js';\n\n/**\n *\n * The DataSet class encapsulates a collection of DICOM Elements and provides various functions\n * to access the data in those elements\n *\n * Rules for handling padded spaces:\n * DS = Strip leading and trailing spaces\n * DT = Strip trailing spaces\n * IS = Strip leading and trailing spaces\n * PN = Strip trailing spaces\n * TM = Strip trailing spaces\n * AE = Strip leading and trailing spaces\n * CS = Strip leading and trailing spaces\n * SH = Strip leading and trailing spaces\n * LO = Strip leading and trailing spaces\n * LT = Strip trailing spaces\n * ST = Strip trailing spaces\n * UT = Strip trailing spaces\n *\n */\n\nfunction getByteArrayParser (element, defaultParser) {\n  return (element.parser !== undefined ? element.parser : defaultParser);\n}\n\n/**\n * Constructs a new DataSet given byteArray and collection of elements\n * @param byteArrayParser\n * @param byteArray\n * @param elements\n * @constructor\n */\nexport default class DataSet {\n  constructor (byteArrayParser, byteArray, elements) {\n    this.byteArrayParser = byteArrayParser;\n    this.byteArray = byteArray;\n    this.elements = elements;\n  }\n\n  /**\n     * Finds the element for tag and returns an unsigned int 16 if it exists and has data\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied\n     * @returns {*} unsigned int 16 or undefined if the attribute is not present or has data of length 0\n     */\n  uint16 (tag, index) {\n    var element = this.elements[tag];\n\n    index = (index !== undefined) ? index : 0;\n    if (element && element.length !== 0) {\n      return getByteArrayParser(element, this.byteArrayParser).readUint16(this.byteArray, element.dataOffset + (index * 2));\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Finds the element for tag and returns an signed int 16 if it exists and has data\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied\n     * @returns {*} signed int 16 or undefined if the attribute is not present or has data of length 0\n     */\n  int16 (tag, index) {\n    var element = this.elements[tag];\n\n    index = (index !== undefined) ? index : 0;\n    if (element && element.length !== 0) {\n      return getByteArrayParser(element, this.byteArrayParser).readInt16(this.byteArray, element.dataOffset + (index * 2));\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Finds the element for tag and returns an unsigned int 32 if it exists and has data\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied\n     * @returns {*} unsigned int 32 or undefined if the attribute is not present or has data of length 0\n     */\n  uint32 (tag, index) {\n    var element = this.elements[tag];\n\n    index = (index !== undefined) ? index : 0;\n    if (element && element.length !== 0) {\n      return getByteArrayParser(element, this.byteArrayParser).readUint32(this.byteArray, element.dataOffset + (index * 4));\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Finds the element for tag and returns an signed int 32 if it exists and has data\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied\n     * @returns {*} signed int 32 or undefined if the attribute is not present or has data of length 0\n     */\n  int32 (tag, index) {\n    var element = this.elements[tag];\n\n    index = (index !== undefined) ? index : 0;\n    if (element && element.length !== 0) {\n      return getByteArrayParser(element, this.byteArrayParser).readInt32(this.byteArray, element.dataOffset + (index * 4));\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Finds the element for tag and returns a 32 bit floating point number (VR=FL) if it exists and has data\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied\n     * @returns {*} float or undefined if the attribute is not present or has data of length 0\n     */\n  float (tag, index) {\n    var element = this.elements[tag];\n\n    index = (index !== undefined) ? index : 0;\n    if (element && element.length !== 0) {\n      return getByteArrayParser(element, this.byteArrayParser).readFloat(this.byteArray, element.dataOffset + (index * 4));\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Finds the element for tag and returns a 64 bit floating point number (VR=FD) if it exists and has data\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the value in a multivalued element.  Default is index 0 if not supplied\n     * @returns {*} float or undefined if the attribute is not present or doesn't has data of length 0\n     */\n  double (tag, index) {\n    var element = this.elements[tag];\n\n    index = (index !== undefined) ? index : 0;\n    if (element && element.length !== 0) {\n      return getByteArrayParser(element, this.byteArrayParser).readDouble(this.byteArray, element.dataOffset + (index * 8));\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Returns the number of string values for the element\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @returns {*} the number of string values or undefined if the attribute is not present or has zero length data\n     */\n  numStringValues (tag) {\n    var element = this.elements[tag];\n\n    if (element && element.length > 0) {\n      var fixedString = readFixedString(this.byteArray, element.dataOffset, element.length);\n      var numMatching = fixedString.match(/\\\\/g);\n\n      if (numMatching === null) {\n        return 1;\n      }\n\n      return numMatching.length + 1;\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Returns a string for the element.  If index is provided, the element is assumed to be\n     * multi-valued and will return the component specified by index.  Undefined is returned\n     * if there is no component with the specified index, the element does not exist or is zero length.\n     *\n     * Use this function for VR types of AE, CS, SH and LO\n     *\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the desired value in a multi valued string or undefined for the entire string\n     * @returns {*}\n     */\n  string (tag, index) {\n    var element = this.elements[tag];\n\n    if( element && element.Value ) return element.Value;\n    \n    if (element && element.length > 0) {\n      var fixedString = readFixedString(this.byteArray, element.dataOffset, element.length);\n\n      if (index >= 0) {\n        var values = fixedString.split('\\\\');\n        // trim trailing spaces\n\n        return values[index].trim();\n      }\n      // trim trailing spaces\n      return fixedString.trim();\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Returns a string with the leading spaces preserved and trailing spaces removed.\n     *\n     * Use this function to access data for VRs of type UT, ST and LT\n     *\n     * @param tag\n     * @param index\n     * @returns {*}\n     */\n  text (tag, index) {\n    var element = this.elements[tag];\n\n    if (element && element.length > 0) {\n      var fixedString = readFixedString(this.byteArray, element.dataOffset, element.length);\n\n      if (index >= 0) {\n        var values = fixedString.split('\\\\');\n\n\n        return values[index].replace(/ +$/, '');\n      }\n\n      return fixedString.replace(/ +$/, '');\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Parses a string to a float for the specified index in a multi-valued element.  If index is not specified,\n     * the first value in a multi-valued VR will be parsed if present.\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the desired value in a multi valued string or undefined for the first value\n     * @returns {*} a floating point number or undefined if not present or data not long enough\n     */\n  floatString (tag, index) {\n    var element = this.elements[tag];\n\n    if (element && element.length > 0) {\n      index = (index !== undefined) ? index : 0;\n      var value = this.string(tag, index);\n\n      if (value !== undefined) {\n        return parseFloat(value);\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Parses a string to an integer for the specified index in a multi-valued element.  If index is not specified,\n     * the first value in a multi-valued VR will be parsed if present.\n     * @param tag The DICOM tag in the format xGGGGEEEE\n     * @param index the index of the desired value in a multi valued string or undefined for the first value\n     * @returns {*} an integer or undefined if not present or data not long enough\n     */\n  intString (tag, index) {\n    var element = this.elements[tag];\n\n    if (element && element.length > 0) {\n      index = (index !== undefined) ? index : 0;\n      var value = this.string(tag, index);\n\n      if (value !== undefined) {\n        return parseInt(value);\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n     * Parses an element tag according to the 'AT' VR definition (VR=AT).\n     * @param {String} A DICOM tag with in the format xGGGGEEEE.\n     * @returns {String} A string representation of a data element tag or undefined if the field is not present or data is not long enough.\n     */\n  attributeTag (tag) {\n    const element = this.elements[tag];\n\n    if (element && element.length === 4) {\n      const parser = getByteArrayParser(element, this.byteArrayParser).readUint16;\n      const bytes = this.byteArray;\n      const offset = element.dataOffset;\n\n      return `x${(`00000000${(parser(bytes, offset) * 256 * 256 + parser(bytes, offset + 2)).toString(16)}`).substr(-8)}`;\n    }\n\n    return undefined;\n  }\n}\n", "/**\n * Internal helper functions for parsing DICOM elements\n */\n\n/**\n * reads from the byte stream until it finds the magic numbers for the item delimitation item\n * and then sets the length of the element\n * @param byteStream\n * @param element\n */\nexport default function findItemDelimitationItemAndSetElementLength (byteStream, element) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.readDicomElementImplicit: missing required parameter \\'byteStream\\'';\n  }\n\n  const itemDelimitationItemLength = 8; // group, element, length\n  const maxPosition = byteStream.byteArray.length - itemDelimitationItemLength;\n\n  while (byteStream.position <= maxPosition) {\n    const groupNumber = byteStream.readUint16();\n\n    if (groupNumber === 0xfffe) {\n      const elementNumber = byteStream.readUint16();\n\n      if (elementNumber === 0xe00d) {\n        // NOTE: It would be better to also check for the length to be 0 as part of the check above\n        // but we will just log a warning for now\n        const itemDelimiterLength = byteStream.readUint32(); // the length\n\n        if (itemDelimiterLength !== 0) {\n          byteStream.warnings(`encountered non zero length following item delimiter at position ${byteStream.position - 4} while reading element of undefined length with tag ${element.tag}`);\n        }\n\n        element.length = byteStream.position - element.dataOffset;\n\n        return;\n      }\n    }\n  }\n\n  // No item delimitation item - silently set the length to the end of the buffer and set the position past the end of the buffer\n  element.length = byteStream.byteArray.length - element.dataOffset;\n  byteStream.seek(byteStream.byteArray.length - byteStream.position);\n}\n", "import findItemDelimitationItemAndSetElementLength from './findItemDelimitationItem.js';\nimport readSequenceItemsImplicit from './readSequenceElementImplicit.js';\nimport readTag from './readTag.js';\nimport { isPrivateTag } from './util/util.js';\n\n/**\n * Internal helper functions for for parsing DICOM elements\n */\n\nconst isSequence = (element, byteStream) => {\n  if (element.vr !== undefined) {\n    return (element.vr === 'SQ');\n  }\n\n  if ((byteStream.position + 4) <= byteStream.byteArray.length) {\n    const nextTag = readTag(byteStream);\n\n    byteStream.seek(-4);\n\n    // Item start tag (fffe,e000) or sequence delimiter (i.e. end of sequence) tag (0fffe,e0dd)\n    // These are the tags that could potentially be found directly after a sequence start tag (the delimiter\n    // is found in the case of an empty sequence). This is not 100% safe because a non-sequence item\n    // could have data that has these bytes, but this is how to do it without a data dictionary.\n    return (nextTag === 'xfffee000') || (nextTag === 'xfffee0dd');\n  }\n\n  byteStream.warnings.push('eof encountered before finding sequence item tag or sequence delimiter tag in peeking to determine VR');\n\n  return false;\n};\n\nexport default function readDicomElementImplicit (byteStream, untilTag, vrCallback) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.readDicomElementImplicit: missing required parameter \\'byteStream\\'';\n  }\n\n  const tag = readTag(byteStream);\n\n  const element = {\n    tag,\n    vr: (vrCallback !== undefined ? vrCallback(tag) : undefined),\n    length: byteStream.readUint32(),\n    dataOffset: byteStream.position\n  };\n\n  if (element.length === 4294967295) {\n    element.hadUndefinedLength = true;\n  }\n\n  if (element.tag === untilTag) {\n    return element;\n  }\n\n  // always parse sequences with undefined lengths, since there's no other way to know how long they are.\n  if (isSequence(element, byteStream) && (!isPrivateTag(element.tag) || element.hadUndefinedLength)) {\n    // parse the sequence\n    readSequenceItemsImplicit(byteStream, element, vrCallback);\n\n    if (isPrivateTag(element.tag)) {\n      element.items = undefined;\n    }\n\n    return element;\n  }\n\n  // if element is not a sequence and has undefined length, we have to\n  // scan the data for a magic number to figure out when it ends.\n  if (element.hadUndefinedLength) {\n    findItemDelimitationItemAndSetElementLength(byteStream, element);\n\n    return element;\n  }\n\n  // non sequence element with known length, skip over the data part\n  byteStream.seek(element.length);\n\n  return element;\n}\n", "import readTag from './readTag.js';\n\n/**\n * Internal helper functions for parsing DICOM elements\n */\n\n/**\n * Reads the tag and length of a sequence item and returns them as an object with the following properties\n *  tag : string for the tag of this element in the format xggggeeee\n *  length: the number of bytes in this item or 4294967295 if undefined\n *  dataOffset: the offset into the byteStream of the data for this item\n * @param byteStream the byte\n * @returns {{tag: string, length: integer, dataOffset: integer}}\n */\nexport default function readSequenceItem (byteStream) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.readSequenceItem: missing required parameter \\'byteStream\\'';\n  }\n\n  const element = {\n    tag: readTag(byteStream),\n    length: byteStream.readUint32(),\n    dataOffset: byteStream.position\n  };\n\n  if (element.tag !== 'xfffee000') {\n    throw `dicomParser.readSequenceItem: item tag (FFFE,E000) not found at offset ${byteStream.position}`;\n  }\n\n  return element;\n}\n", "import DataSet from './dataSet.js';\nimport readDicomElementImplicit from './readDicomElementImplicit.js';\nimport readSequenceItem from './readSequenceItem.js';\nimport readTag from './readTag.js';\nimport * as parseDicomDataSet from './parseDicomDataSet.js';\n\n/**\n * Internal helper functions for parsing DICOM elements\n */\n\nfunction readDicomDataSetImplicitUndefinedLength (byteStream, vrCallback) {\n  const elements = {};\n\n  while (byteStream.position < byteStream.byteArray.length) {\n    const element = readDicomElementImplicit(byteStream, undefined, vrCallback);\n\n    elements[element.tag] = element;\n\n    // we hit an item delimiter tag, return the current offset to mark\n    // the end of this sequence item\n    if (element.tag === 'xfffee00d') {\n      return new DataSet(byteStream.byteArrayParser, byteStream.byteArray, elements);\n    }\n  }\n\n  // eof encountered - log a warning and return what we have for the element\n  byteStream.warnings.push('eof encountered before finding sequence item delimiter in sequence item of undefined length');\n\n  return new DataSet(byteStream.byteArrayParser, byteStream.byteArray, elements);\n}\n\nfunction readSequenceItemImplicit (byteStream, vrCallback) {\n  const item = readSequenceItem(byteStream);\n\n  if (item.length === 4294967295) {\n    item.hadUndefinedLength = true;\n    item.dataSet = readDicomDataSetImplicitUndefinedLength(byteStream, vrCallback);\n    item.length = byteStream.position - item.dataOffset;\n  } else {\n    item.dataSet = new DataSet(byteStream.byteArrayParser, byteStream.byteArray, {});\n    parseDicomDataSet.parseDicomDataSetImplicit(item.dataSet, byteStream, byteStream.position + item.length, { vrCallback });\n  }\n\n  return item;\n}\n\nfunction readSQElementUndefinedLengthImplicit (byteStream, element, vrCallback) {\n  while ((byteStream.position + 4) <= byteStream.byteArray.length) {\n    // end reading this sequence if the next tag is the sequence delimitation item\n    const nextTag = readTag(byteStream);\n\n    byteStream.seek(-4);\n\n    if (nextTag === 'xfffee0dd') {\n      // set the correct length\n      element.length = byteStream.position - element.dataOffset;\n      byteStream.seek(8);\n\n      return element;\n    }\n\n    const item = readSequenceItemImplicit(byteStream, vrCallback);\n\n    element.items.push(item);\n  }\n\n  byteStream.warnings.push('eof encountered before finding sequence delimiter in sequence of undefined length');\n  element.length = byteStream.byteArray.length - element.dataOffset;\n}\n\nfunction readSQElementKnownLengthImplicit (byteStream, element, vrCallback) {\n  const maxPosition = element.dataOffset + element.length;\n\n  while (byteStream.position < maxPosition) {\n    const item = readSequenceItemImplicit(byteStream, vrCallback);\n\n    element.items.push(item);\n  }\n}\n\n/**\n * Reads sequence items for an element in an implicit little endian byte stream\n * @param byteStream the implicit little endian byte stream\n * @param element the element to read the sequence items for\n * @param vrCallback an optional method that returns a VR string given a tag\n */\nexport default function readSequenceItemsImplicit (byteStream, element, vrCallback) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.readSequenceItemsImplicit: missing required parameter \\'byteStream\\'';\n  }\n\n  if (element === undefined) {\n    throw 'dicomParser.readSequenceItemsImplicit: missing required parameter \\'element\\'';\n  }\n\n  element.items = [];\n\n  if (element.length === 4294967295) {\n    readSQElementUndefinedLengthImplicit(byteStream, element, vrCallback);\n  } else {\n    readSQElementKnownLengthImplicit(byteStream, element, vrCallback);\n  }\n}\n", "import DataSet from './dataSet.js';\nimport readDicomElementExplicit from './readDicomElementExplicit.js';\nimport readSequenceItem from './readSequenceItem.js';\nimport readTag from './readTag.js';\nimport * as parseDicomDataSet from './parseDicomDataSet.js';\n\n/**\n * Internal helper functions for parsing DICOM elements\n */\n\nfunction readDicomDataSetExplicitUndefinedLength (byteStream, warnings) {\n  const elements = {};\n\n  while (byteStream.position < byteStream.byteArray.length) {\n    const element = readDicomElementExplicit(byteStream, warnings);\n\n    elements[element.tag] = element;\n\n    // we hit an item delimiter tag, return the current offset to mark\n    // the end of this sequence item\n    if (element.tag === 'xfffee00d') {\n      return new DataSet(byteStream.byteArrayParser, byteStream.byteArray, elements);\n    }\n  }\n\n  // eof encountered - log a warning and return what we have for the element\n  warnings.push('eof encountered before finding item delimiter tag while reading sequence item of undefined length');\n\n  return new DataSet(byteStream.byteArrayParser, byteStream.byteArray, elements);\n}\n\nfunction readSequenceItemExplicit (byteStream, warnings) {\n  const item = readSequenceItem(byteStream);\n\n  if (item.length === 4294967295) {\n    item.hadUndefinedLength = true;\n    item.dataSet = readDicomDataSetExplicitUndefinedLength(byteStream, warnings);\n    item.length = byteStream.position - item.dataOffset;\n  } else {\n    item.dataSet = new DataSet(byteStream.byteArrayParser, byteStream.byteArray, {});\n    parseDicomDataSet.parseDicomDataSetExplicit(item.dataSet, byteStream, byteStream.position + item.length);\n  }\n\n  return item;\n}\n\nfunction readSQElementUndefinedLengthExplicit (byteStream, element, warnings) {\n  while ((byteStream.position + 4) <= byteStream.byteArray.length) {\n    // end reading this sequence if the next tag is the sequence delimitation item\n    const nextTag = readTag(byteStream);\n\n    byteStream.seek(-4);\n    if (nextTag === 'xfffee0dd') {\n      // set the correct length\n      element.length = byteStream.position - element.dataOffset;\n      byteStream.seek(8);\n\n      return element;\n    }\n\n    const item = readSequenceItemExplicit(byteStream, warnings);\n\n    element.items.push(item);\n  }\n\n  warnings.push('eof encountered before finding sequence delimitation tag while reading sequence of undefined length');\n  element.length = byteStream.position - element.dataOffset;\n}\n\nfunction readSQElementKnownLengthExplicit (byteStream, element, warnings) {\n  const maxPosition = element.dataOffset + element.length;\n\n  while (byteStream.position < maxPosition) {\n    const item = readSequenceItemExplicit(byteStream, warnings);\n\n    element.items.push(item);\n  }\n}\n\nexport default function readSequenceItemsExplicit (byteStream, element, warnings) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.readSequenceItemsExplicit: missing required parameter \\'byteStream\\'';\n  }\n\n  if (element === undefined) {\n    throw 'dicomParser.readSequenceItemsExplicit: missing required parameter \\'element\\'';\n  }\n\n  element.items = [];\n\n  if (element.length === 4294967295) {\n    readSQElementUndefinedLengthExplicit(byteStream, element, warnings);\n  } else {\n    readSQElementKnownLengthExplicit(byteStream, element, warnings);\n  }\n}\n", "import findEndOfEncapsulatedElement from './findEndOfEncapsulatedPixelData.js';\nimport findAndSetUNElementLength from './findAndSetUNElementLength.js';\nimport readSequenceItemsImplicit  from './readSequenceElementImplicit.js';\nimport readTag from './readTag.js';\nimport findItemDelimitationItemAndSetElementLength from './findItemDelimitationItem.js';\nimport readSequenceItemsExplicit from './readSequenceElementExplicit.js';\n\n/**\n * Internal helper functions for for parsing DICOM elements\n */\n\nconst getDataLengthSizeInBytesForVR = (vr) => {\n  if (vr === 'OB' ||\n      vr === 'OD' ||\n      vr === 'OL' ||\n      vr === 'OW' ||\n      vr === 'SQ' ||\n      vr === 'OF' ||\n      vr === 'UC' ||\n      vr === 'UR' ||\n      vr === 'UT' ||\n      vr === 'UN') {\n    return 4;\n  }\n\n  return 2;\n};\n\nexport default function readDicomElementExplicit (byteStream, warnings, untilTag) {\n  if (byteStream === undefined) {\n    throw 'dicomParser.readDicomElementExplicit: missing required parameter \\'byteStream\\'';\n  }\n\n  const element = {\n    tag: readTag(byteStream),\n    vr: byteStream.readFixedString(2)\n    // length set below based on VR\n    // dataOffset set below based on VR and size of length\n  };\n\n  const dataLengthSizeBytes = getDataLengthSizeInBytesForVR(element.vr);\n\n  if (dataLengthSizeBytes === 2) {\n    element.length = byteStream.readUint16();\n    element.dataOffset = byteStream.position;\n  } else {\n    byteStream.seek(2);\n    element.length = byteStream.readUint32();\n    element.dataOffset = byteStream.position;\n  }\n\n  if (element.length === 4294967295) {\n    element.hadUndefinedLength = true;\n  }\n\n  if (element.tag === untilTag) {\n    return element;\n  }\n\n  // if VR is SQ, parse the sequence items\n  if (element.vr === 'SQ') {\n    readSequenceItemsExplicit(byteStream, element, warnings);\n\n    return element;\n  }\n\n  if (element.length === 4294967295) {\n    if (element.tag === 'x7fe00010') {\n      findEndOfEncapsulatedElement(byteStream, element, warnings);\n\n      return element;\n    } else if (element.vr === 'UN') {\n      readSequenceItemsImplicit(byteStream, element);\n\n      return element;\n    }\n\n    findItemDelimitationItemAndSetElementLength(byteStream, element);\n\n    return element;\n  }\n\n  byteStream.seek(element.length);\n\n  return element;\n}\n", "import readDicomElementExplicit from './readDicomElementExplicit.js';\nimport readDicomElementImplicit from './readDicomElementImplicit.js';\n\n/**\n * Internal helper functions for parsing implicit and explicit DICOM data sets\n */\n\n/**\n * reads an explicit data set\n * @param byteStream the byte stream to read from\n * @param maxPosition the maximum position to read up to (optional - only needed when reading sequence items)\n */\nexport function parseDicomDataSetExplicit (dataSet, byteStream, maxPosition, options = {}) {\n  maxPosition = (maxPosition === undefined) ? byteStream.byteArray.length : maxPosition;\n\n  if (byteStream === undefined) {\n    throw 'dicomParser.parseDicomDataSetExplicit: missing required parameter \\'byteStream\\'';\n  }\n\n  if (maxPosition < byteStream.position || maxPosition > byteStream.byteArray.length) {\n    throw 'dicomParser.parseDicomDataSetExplicit: invalid value for parameter \\'maxP osition\\'';\n  }\n\n  const elements = dataSet.elements;\n\n  while (byteStream.position < maxPosition) {\n    const element = readDicomElementExplicit(byteStream, dataSet.warnings, options.untilTag);\n\n    elements[element.tag] = element;\n    if (element.tag === options.untilTag) {\n      return;\n    }\n  }\n\n  if (byteStream.position > maxPosition) {\n    throw 'dicomParser:parseDicomDataSetExplicit: buffer overrun';\n  }\n}\n\n/**\n * reads an implicit data set\n * @param byteStream the byte stream to read from\n * @param maxPosition the maximum position to read up to (optional - only needed when reading sequence items)\n */\nexport function parseDicomDataSetImplicit (dataSet, byteStream, maxPosition, options = {}) {\n  maxPosition = (maxPosition === undefined) ? dataSet.byteArray.length : maxPosition;\n\n  if (byteStream === undefined) {\n    throw 'dicomParser.parseDicomDataSetImplicit: missing required parameter \\'byteStream\\'';\n  }\n\n  if (maxPosition < byteStream.position || maxPosition > byteStream.byteArray.length) {\n    throw 'dicomParser.parseDicomDataSetImplicit: invalid value for parameter \\'maxPosition\\'';\n  }\n\n  const elements = dataSet.elements;\n\n  while (byteStream.position < maxPosition) {\n    const element = readDicomElementImplicit(byteStream, options.untilTag, options.vrCallback);\n\n    elements[element.tag] = element;\n    if (element.tag === options.untilTag) {\n      return;\n    }\n  }\n}\n", "/**\n * Creates a new byteArray of the same type (Uint8Array or Buffer) of the specified length.\n * @param byteArray the underlying byteArray (either Uint8Array or Buffer)\n * @param length number of bytes of the Byte Array\n * @returns {object} Uint8Array or Buffer depending on the type of byteArray\n */\nexport default function alloc (byteArray, length) {\n  if (typeof Buffer !== 'undefined' && byteArray instanceof Buffer) {\n    return Buffer.alloc(length);\n  } else if (byteArray instanceof Uint8Array) {\n    return new Uint8Array(length);\n  }\n  throw 'dicomParser.alloc: unknown type for byteArray';\n}\n", "export default '1.8.12';\n", "/**\n * Internal helper functions for parsing different types from a big-endian byte array\n */\nexport default {\n\n  /**\n     *\n     * Parses an unsigned int 16 from a big-endian byte array\n     *\n     * @param byteArray the byte array to read from\n     * @param position the position in the byte array to read from\n     * @returns {*} the parsed unsigned int 16\n     * @throws error if buffer overread would occur\n     * @access private\n     */\n  readUint16 (byteArray, position) {\n    if (position < 0) {\n      throw 'bigEndianByteArrayParser.readUint16: position cannot be less than 0';\n    }\n    if (position + 2 > byteArray.length) {\n      throw 'bigEndianByteArrayParser.readUint16: attempt to read past end of buffer';\n    }\n\n    return (byteArray[position] << 8) + byteArray[position + 1];\n  },\n\n  /**\n     *\n     * Parses a signed int 16 from a big-endian byte array\n     *\n     * @param byteArray the byte array to read from\n     * @param position the position in the byte array to read from\n     * @returns {*} the parsed signed int 16\n     * @throws error if buffer overread would occur\n     * @access private\n     */\n  readInt16 (byteArray, position) {\n    if (position < 0) {\n      throw 'bigEndianByteArrayParser.readInt16: position cannot be less than 0';\n    }\n    if (position + 2 > byteArray.length) {\n      throw 'bigEndianByteArrayParser.readInt16: attempt to read past end of buffer';\n    }\n    var int16 = (byteArray[position] << 8) + byteArray[position + 1];\n    // fix sign\n\n    if (int16 & 0x8000) {\n      int16 = int16 - 0xFFFF - 1;\n    }\n\n    return int16;\n  },\n\n  /**\n     * Parses an unsigned int 32 from a big-endian byte array\n     *\n     * @param byteArray the byte array to read from\n     * @param position the position in the byte array to read from\n     * @returns {*} the parsed unsigned int 32\n     * @throws error if buffer overread would occur\n     * @access private\n     */\n  readUint32 (byteArray, position) {\n    if (position < 0) {\n      throw 'bigEndianByteArrayParser.readUint32: position cannot be less than 0';\n    }\n\n    if (position + 4 > byteArray.length) {\n      throw 'bigEndianByteArrayParser.readUint32: attempt to read past end of buffer';\n    }\n\n    var uint32 = (256 * (256 * (256 * byteArray[position] +\n                                          byteArray[position + 1]) +\n                                          byteArray[position + 2]) +\n                                          byteArray[position + 3]);\n\n    return uint32;\n  },\n\n  /**\n     * Parses a signed int 32 from a big-endian byte array\n     *\n     * @param byteArray the byte array to read from\n     * @param position the position in the byte array to read from\n     * @returns {*} the parsed signed int 32\n     * @throws error if buffer overread would occur\n     * @access private\n     */\n  readInt32 (byteArray, position) {\n    if (position < 0) {\n      throw 'bigEndianByteArrayParser.readInt32: position cannot be less than 0';\n    }\n\n    if (position + 4 > byteArray.length) {\n      throw 'bigEndianByteArrayParser.readInt32: attempt to read past end of buffer';\n    }\n\n    var int32 = ((byteArray[position] << 24) +\n                     (byteArray[position + 1] << 16) +\n                     (byteArray[position + 2] << 8) +\n                      byteArray[position + 3]);\n\n    return int32;\n  },\n\n  /**\n     * Parses 32-bit float from a big-endian byte array\n     *\n     * @param byteArray the byte array to read from\n     * @param position the position in the byte array to read from\n     * @returns {*} the parsed 32-bit float\n     * @throws error if buffer overread would occur\n     * @access private\n     */\n  readFloat (byteArray, position) {\n    if (position < 0) {\n      throw 'bigEndianByteArrayParser.readFloat: position cannot be less than 0';\n    }\n\n    if (position + 4 > byteArray.length) {\n      throw 'bigEndianByteArrayParser.readFloat: attempt to read past end of buffer';\n    }\n\n    // I am sure there is a better way than this but this should be safe\n    var byteArrayForParsingFloat = new Uint8Array(4);\n\n    byteArrayForParsingFloat[3] = byteArray[position];\n    byteArrayForParsingFloat[2] = byteArray[position + 1];\n    byteArrayForParsingFloat[1] = byteArray[position + 2];\n    byteArrayForParsingFloat[0] = byteArray[position + 3];\n    var floatArray = new Float32Array(byteArrayForParsingFloat.buffer);\n\n\n    return floatArray[0];\n  },\n\n  /**\n     * Parses 64-bit float from a big-endian byte array\n     *\n     * @param byteArray the byte array to read from\n     * @param position the position in the byte array to read from\n     * @returns {*} the parsed 64-bit float\n     * @throws error if buffer overread would occur\n     * @access private\n     */\n  readDouble (byteArray, position) {\n    if (position < 0) {\n      throw 'bigEndianByteArrayParser.readDouble: position cannot be less than 0';\n    }\n\n    if (position + 8 > byteArray.length) {\n      throw 'bigEndianByteArrayParser.readDouble: attempt to read past end of buffer';\n    }\n\n    // I am sure there is a better way than this but this should be safe\n    var byteArrayForParsingFloat = new Uint8Array(8);\n\n    byteArrayForParsingFloat[7] = byteArray[position];\n    byteArrayForParsingFloat[6] = byteArray[position + 1];\n    byteArrayForParsingFloat[5] = byteArray[position + 2];\n    byteArrayForParsingFloat[4] = byteArray[position + 3];\n    byteArrayForParsingFloat[3] = byteArray[position + 4];\n    byteArrayForParsingFloat[2] = byteArray[position + 5];\n    byteArrayForParsingFloat[1] = byteArray[position + 6];\n    byteArrayForParsingFloat[0] = byteArray[position + 7];\n    var floatArray = new Float64Array(byteArrayForParsingFloat.buffer);\n\n\n    return floatArray[0];\n  }\n};\n", "/**\n *\n * Internal helper function to create a shared copy of a byteArray\n *\n */\n\n/**\n * Creates a view of the underlying byteArray.  The view is of the same type as the byteArray (e.g.\n * Uint8Array or Buffer) and shares the same underlying memory (changing one changes the other)\n * @param byteArray the underlying byteArray (either Uint8Array or Buffer)\n * @param byteOffset offset into the underlying byteArray to create the view of\n * @param length number of bytes in the view\n * @returns {object} Uint8Array or Buffer depending on the type of byteArray\n */\nexport default function sharedCopy (byteArray, byteOffset, length) {\n  if (typeof Buffer !== 'undefined' && byteArray instanceof Buffer) {\n    return byteArray.slice(byteOffset, byteOffset + length);\n  } else if (byteArray instanceof Uint8Array) {\n    return new Uint8Array(byteArray.buffer, byteArray.byteOffset + byteOffset, length);\n  }\n  throw 'dicomParser.from: unknown type for byteArray';\n}\n", "import sharedCopy from './sharedCopy.js';\nimport { readFixedString } from './byteArrayParser.js';\n\n/**\n *\n * Internal helper class to assist with parsing. Supports reading from a byte\n * stream contained in a Uint8Array.  Example usage:\n *\n *  var byteArray = new Uint8Array(32);\n *  var byteStream = new dicomParser.ByteStream(dicomParser.littleEndianByteArrayParser, byteArray);\n *\n * */\n\n/**\n * Constructor for ByteStream objects.\n * @param byteArrayParser a parser for parsing the byte array\n * @param byteArray a Uint8Array containing the byte stream\n * @param position (optional) the position to start reading from.  0 if not specified\n * @constructor\n * @throws will throw an error if the byteArrayParser parameter is not present\n * @throws will throw an error if the byteArray parameter is not present or invalid\n * @throws will throw an error if the position parameter is not inside the byte array\n */\nexport default class ByteStream {\n  constructor (byteArrayParser, byteArray, position) {\n    if (byteArrayParser === undefined) {\n      throw 'dicomParser.ByteStream: missing required parameter \\'byteArrayParser\\'';\n    }\n    if (byteArray === undefined) {\n      throw 'dicomParser.ByteStream: missing required parameter \\'byteArray\\'';\n    }\n    if ((byteArray instanceof Uint8Array) === false &&\n          ((typeof Buffer === 'undefined') ||\n          (byteArray instanceof Buffer) === false)) {\n      throw 'dicomParser.ByteStream: parameter byteArray is not of type Uint8Array or Buffer';\n    }\n    if (position < 0) {\n      throw 'dicomParser.ByteStream: parameter \\'position\\' cannot be less than 0';\n    }\n    if (position >= byteArray.length) {\n      throw 'dicomParser.ByteStream: parameter \\'position\\' cannot be greater than or equal to \\'byteArray\\' length';\n    }\n    this.byteArrayParser = byteArrayParser;\n    this.byteArray = byteArray;\n    this.position = position ? position : 0;\n    this.warnings = []; // array of string warnings encountered while parsing\n  }\n\n  /**\n     * Safely seeks through the byte stream.  Will throw an exception if an attempt\n     * is made to seek outside of the byte array.\n     * @param offset the number of bytes to add to the position\n     * @throws error if seek would cause position to be outside of the byteArray\n     */\n  seek (offset) {\n    if (this.position + offset < 0) {\n      throw 'dicomParser.ByteStream.prototype.seek: cannot seek to position < 0';\n    }\n    this.position += offset;\n  }\n\n  /**\n     * Returns a new ByteStream object from the current position and of the requested number of bytes\n     * @param numBytes the length of the byte array for the ByteStream to contain\n     * @returns {dicomParser.ByteStream}\n     * @throws error if buffer overread would occur\n     */\n  readByteStream (numBytes) {\n    if (this.position + numBytes > this.byteArray.length) {\n      throw 'dicomParser.ByteStream.prototype.readByteStream: readByteStream - buffer overread';\n    }\n    var byteArrayView = sharedCopy(this.byteArray, this.position, numBytes);\n\n    this.position += numBytes;\n\n    return new ByteStream(this.byteArrayParser, byteArrayView);\n  }\n\n  getSize() {\n    return this.byteArray.length;\n  }\n\n  /**\n     *\n     * Parses an unsigned int 16 from a byte array and advances\n     * the position by 2 bytes\n     *\n     * @returns {*} the parsed unsigned int 16\n     * @throws error if buffer overread would occur\n     */\n  readUint16 () {\n    var result = this.byteArrayParser.readUint16(this.byteArray, this.position);\n\n    this.position += 2;\n\n    return result;\n  }\n\n  /**\n     * Parses an unsigned int 32 from a byte array and advances\n     * the position by 2 bytes\n     *\n     * @returns {*} the parse unsigned int 32\n     * @throws error if buffer overread would occur\n     */\n  readUint32 () {\n    var result = this.byteArrayParser.readUint32(this.byteArray, this.position);\n\n    this.position += 4;\n\n    return result;\n  }\n\n  /**\n     * Reads a string of 8-bit characters from an array of bytes and advances\n     * the position by length bytes.  A null terminator will end the string\n     * but will not effect advancement of the position.\n     * @param length the maximum number of bytes to parse\n     * @returns {string} the parsed string\n     * @throws error if buffer overread would occur\n     */\n  readFixedString (length) {\n    var result = readFixedString(this.byteArray, this.position, length);\n\n    this.position += length;\n\n    return result;\n  }\n}\n", "/**\n * Internal helper functions for parsing different types from a little-endian byte array\n */\n\nexport default {\n\n  /**\n   *\n   * Parses an unsigned int 16 from a little-endian byte array\n   *\n   * @param byteArray the byte array to read from\n   * @param position the position in the byte array to read from\n   * @returns {*} the parsed unsigned int 16\n   * @throws error if buffer overread would occur\n   * @access private\n   */\n  readUint16 (byteArray, position) {\n    if (position < 0) {\n      throw 'littleEndianByteArrayParser.readUint16: position cannot be less than 0';\n    }\n\n    if (position + 2 > byteArray.length) {\n      throw 'littleEndianByteArrayParser.readUint16: attempt to read past end of buffer';\n    }\n\n    return byteArray[position] + (byteArray[position + 1] * 256);\n  },\n\n  /**\n   *\n   * Parses a signed int 16 from a little-endian byte array\n   *\n   * @param byteArray the byte array to read from\n   * @param position the position in the byte array to read from\n   * @returns {*} the parsed signed int 16\n   * @throws error if buffer overread would occur\n   * @access private\n   */\n  readInt16 (byteArray, position) {\n    if (position < 0) {\n      throw 'littleEndianByteArrayParser.readInt16: position cannot be less than 0';\n    }\n    if (position + 2 > byteArray.length) {\n      throw 'littleEndianByteArrayParser.readInt16: attempt to read past end of buffer';\n    }\n\n    let int16 = byteArray[position] + (byteArray[position + 1] << 8);\n\n    // fix sign\n    if (int16 & 0x8000) {\n      int16 = int16 - 0xFFFF - 1;\n    }\n\n    return int16;\n  },\n\n\n  /**\n   * Parses an unsigned int 32 from a little-endian byte array\n   *\n   * @param byteArray the byte array to read from\n   * @param position the position in the byte array to read from\n   * @returns {*} the parsed unsigned int 32\n   * @throws error if buffer overread would occur\n   * @access private\n   */\n  readUint32 (byteArray, position) {\n    if (position < 0) {\n      throw 'littleEndianByteArrayParser.readUint32: position cannot be less than 0';\n    }\n\n    if (position + 4 > byteArray.length) {\n      throw 'littleEndianByteArrayParser.readUint32: attempt to read past end of buffer';\n    }\n\n    return (byteArray[position] +\n           (byteArray[position + 1] * 256) +\n           (byteArray[position + 2] * 256 * 256) +\n           (byteArray[position + 3] * 256 * 256 * 256));\n  },\n\n  /**\n * Parses a signed int 32 from a little-endian byte array\n *\n * @param byteArray the byte array to read from\n * @param position the position in the byte array to read from\n   * @returns {*} the parsed unsigned int 32\n   * @throws error if buffer overread would occur\n   * @access private\n   */\n  readInt32 (byteArray, position) {\n    if (position < 0) {\n      throw 'littleEndianByteArrayParser.readInt32: position cannot be less than 0';\n    }\n\n    if (position + 4 > byteArray.length) {\n      throw 'littleEndianByteArrayParser.readInt32: attempt to read past end of buffer';\n    }\n\n    return (byteArray[position] +\n           (byteArray[position + 1] << 8) +\n           (byteArray[position + 2] << 16) +\n           (byteArray[position + 3] << 24));\n  },\n\n  /**\n   * Parses 32-bit float from a little-endian byte array\n   *\n   * @param byteArray the byte array to read from\n   * @param position the position in the byte array to read from\n   * @returns {*} the parsed 32-bit float\n   * @throws error if buffer overread would occur\n   * @access private\n   */\n  readFloat (byteArray, position) {\n    if (position < 0) {\n      throw 'littleEndianByteArrayParser.readFloat: position cannot be less than 0';\n    }\n\n    if (position + 4 > byteArray.length) {\n      throw 'littleEndianByteArrayParser.readFloat: attempt to read past end of buffer';\n    }\n\n    // I am sure there is a better way than this but this should be safe\n    const byteArrayForParsingFloat = new Uint8Array(4);\n\n    byteArrayForParsingFloat[0] = byteArray[position];\n    byteArrayForParsingFloat[1] = byteArray[position + 1];\n    byteArrayForParsingFloat[2] = byteArray[position + 2];\n    byteArrayForParsingFloat[3] = byteArray[position + 3];\n\n    const floatArray = new Float32Array(byteArrayForParsingFloat.buffer);\n\n    return floatArray[0];\n  },\n\n  /**\n   * Parses 64-bit float from a little-endian byte array\n   *\n   * @param byteArray the byte array to read from\n   * @param position the position in the byte array to read from\n   * @returns {*} the parsed 64-bit float\n   * @throws error if buffer overread would occur\n   * @access private\n   */\n  readDouble (byteArray, position) {\n    if (position < 0) {\n      throw 'littleEndianByteArrayParser.readDouble: position cannot be less than 0';\n    }\n\n    if (position + 8 > byteArray.length) {\n      throw 'littleEndianByteArrayParser.readDouble: attempt to read past end of buffer';\n    }\n\n    // I am sure there is a better way than this but this should be safe\n    const byteArrayForParsingFloat = new Uint8Array(8);\n\n    byteArrayForParsingFloat[0] = byteArray[position];\n    byteArrayForParsingFloat[1] = byteArray[position + 1];\n    byteArrayForParsingFloat[2] = byteArray[position + 2];\n    byteArrayForParsingFloat[3] = byteArray[position + 3];\n    byteArrayForParsingFloat[4] = byteArray[position + 4];\n    byteArrayForParsingFloat[5] = byteArray[position + 5];\n    byteArrayForParsingFloat[6] = byteArray[position + 6];\n    byteArrayForParsingFloat[7] = byteArray[position + 7];\n\n    const floatArray = new Float64Array(byteArrayForParsingFloat.buffer);\n\n    return floatArray[0];\n  }\n};\n", "import ByteStream from './byteStream.js';\nimport DataSet from './dataSet.js';\nimport littleEndianByteArrayParser from './littleEndianByteArrayParser.js';\nimport readDicomElementExplicit from './readDicomElementExplicit.js';\n\n/**\n * Parses a DICOM P10 byte array and returns a DataSet object with the parsed elements.  If the options\n * argument is supplied and it contains the untilTag property, parsing will stop once that\n * tag is encoutered.  This can be used to parse partial byte streams.\n *\n * @param byteArray the byte array\n * @param options Optional options values\n *    TransferSyntaxUID: String to specify a default raw transfer syntax UID.\n *        Use the LEI transfer syntax for raw files, or the provided one for SCP transfers.\n * @returns {DataSet}\n * @throws error if an error occurs while parsing.  The exception object will contain a property dataSet with the\n *         elements successfully parsed before the error.\n */\n\nexport default function readPart10Header (byteArray, options = {}) {\n  if (byteArray === undefined) {\n    throw 'dicomParser.readPart10Header: missing required parameter \\'byteArray\\'';\n  }\n\n  const { TransferSyntaxUID } = options;\n  const littleEndianByteStream = new ByteStream(littleEndianByteArrayParser, byteArray);\n\n  function readPrefix() {\n    if (littleEndianByteStream.getSize() <= 132 && TransferSyntaxUID) {\n      return false;\n    }\n    littleEndianByteStream.seek(128);\n    const prefix = littleEndianByteStream.readFixedString(4);\n\n    if (prefix !== 'DICM') {\n      const { TransferSyntaxUID } = options || {};\n      if (!TransferSyntaxUID) {\n        throw 'dicomParser.readPart10Header: DICM prefix not found at location 132 - this is not a valid DICOM P10 file.';\n      }\n      littleEndianByteStream.seek(0);\n      return false;\n    }\n    return true;\n  }\n\n  // main function here\n  function readTheHeader() {\n    // Per the DICOM standard, the header is always encoded in Explicit VR Little Endian (see PS3.10, section 7.1)\n    // so use littleEndianByteStream throughout this method regardless of the transfer syntax\n    const isPart10 = readPrefix();\n\n    const warnings = [];\n    const elements = {};\n\n    if (!isPart10) {\n      littleEndianByteStream.position = 0;\n      const metaHeaderDataSet = {\n        elements: { x00020010: { tag: 'x00020010', vr: 'UI', Value: TransferSyntaxUID } },\n        warnings,\n      };\n      // console.log('Returning metaHeaderDataSet', metaHeaderDataSet);\n      return metaHeaderDataSet;\n    }\n\n    while (littleEndianByteStream.position < littleEndianByteStream.byteArray.length) {\n      const position = littleEndianByteStream.position;\n      const element = readDicomElementExplicit(littleEndianByteStream, warnings);\n\n      if (element.tag > 'x0002ffff') {\n        littleEndianByteStream.position = position;\n        break;\n      }\n      // Cache the littleEndianByteArrayParser for meta header elements, since the rest of the data set may be big endian\n      // and this parser will be needed later if the meta header values are to be read.\n      element.parser = littleEndianByteArrayParser;\n      elements[element.tag] = element;\n    }\n\n    const metaHeaderDataSet = new DataSet(littleEndianByteStream.byteArrayParser, littleEndianByteStream.byteArray, elements);\n\n    metaHeaderDataSet.warnings = littleEndianByteStream.warnings;\n    metaHeaderDataSet.position = littleEndianByteStream.position;\n\n    return metaHeaderDataSet;\n  }\n\n  // This is where we actually start parsing\n  return readTheHeader();\n}\n", "import alloc from './alloc.js';\nimport bigEndianByteArrayParser from './bigEndianByteArrayParser.js';\nimport ByteStream from './byteStream.js';\nimport DataSet from './dataSet.js';\nimport littleEndianByteArrayParser from './littleEndianByteArrayParser.js';\nimport readPart10Header from './readPart10Header.js';\nimport sharedCopy from './sharedCopy.js';\nimport * as byteArrayParser from './byteArrayParser.js';\nimport * as parseDicomDataSet from './parseDicomDataSet.js';\n\n// LEE (Little Endian Explicit) is the transfer syntax used in dimse operations when there is a split\n// between the header and data.\nconst LEE = '1.2.840.10008.1.2.1';\n\n// LEI (Little Endian Implicit) is the transfer syntax in raw files\nconst LEI = '1.2.840.10008.1.2';\n\n// BEI (Big Endian Implicit) is deprecated, but needs special parse handling\nconst BEI = '1.2.840.10008.1.2.2';\n\n/**\n * Parses a DICOM P10 byte array and returns a DataSet object with the parsed elements.\n * If the options argument is supplied and it contains the untilTag property, parsing\n * will stop once that tag is encoutered.  This can be used to parse partial byte streams.\n *\n * @param byteArray the byte array\n * @param options object to control parsing behavior (optional)\n * @returns {DataSet}\n * @throws error if an error occurs while parsing.  The exception object will contain a\n *         property dataSet with the elements successfully parsed before the error.\n */\n\nexport default function parseDicom(byteArray, options = {}) {\n  if (byteArray === undefined) {\n    throw new Error('dicomParser.parseDicom: missing required parameter \\'byteArray\\'');\n  }\n\n  \n  const readTransferSyntax = (metaHeaderDataSet) => {\n    if (metaHeaderDataSet.elements.x00020010 === undefined) {\n      throw new Error('dicomParser.parseDicom: missing required meta header attribute 0002,0010');\n    }\n\n    const transferSyntaxElement = metaHeaderDataSet.elements.x00020010;\n    return transferSyntaxElement && transferSyntaxElement.Value ||\n      byteArrayParser.readFixedString(byteArray, transferSyntaxElement.dataOffset, transferSyntaxElement.length);\n  }\n\n  function isExplicit(transferSyntax) {\n    // implicit little endian\n    if (transferSyntax === '1.2.840.10008.1.2') {\n      return false;\n    }\n\n    // all other transfer syntaxes should be explicit\n    return true;\n  }\n\n  function getDataSetByteStream(transferSyntax, position) {\n    // Detect whether we are inside a browser or Node.js\n    const isNode = (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]');\n\n    if (transferSyntax === '1.2.840.10008.1.2.1.99') {\n      // if an infalter callback is registered, use it\n      if (options && options.inflater) {\n        const fullByteArrayCallback = options.inflater(byteArray, position);\n\n        return new ByteStream(littleEndianByteArrayParser, fullByteArrayCallback, 0);\n      }\n      // if running on node, use the zlib library to inflate\n      // http://stackoverflow.com/questions/4224606/how-to-check-whether-a-script-is-running-under-node-js\n      else if (isNode === true) {\n        // inflate it\n        const zlib = require('zlib');\n        const deflatedBuffer = sharedCopy(byteArray, position, byteArray.length - position);\n        const inflatedBuffer = zlib.inflateRawSync(deflatedBuffer);\n\n        // create a single byte array with the full header bytes and the inflated bytes\n        const fullByteArrayBuffer = alloc(byteArray, inflatedBuffer.length + position);\n\n        byteArray.copy(fullByteArrayBuffer, 0, 0, position);\n        inflatedBuffer.copy(fullByteArrayBuffer, position);\n\n        return new ByteStream(littleEndianByteArrayParser, fullByteArrayBuffer, 0);\n      }\n      // if pako is defined - use it.  This is the web browser path\n      // https://github.com/nodeca/pako\n      else if (typeof pako !== 'undefined') {\n        // inflate it\n        const deflated = byteArray.slice(position);\n        const inflated = pako.inflateRaw(deflated);\n\n        // create a single byte array with the full header bytes and the inflated bytes\n        const fullByteArray = alloc(byteArray, inflated.length + position);\n\n        fullByteArray.set(byteArray.slice(0, position), 0);\n        fullByteArray.set(inflated, position);\n\n        return new ByteStream(littleEndianByteArrayParser, fullByteArray, 0);\n      }\n\n      // throw exception since no inflater is available\n      throw 'dicomParser.parseDicom: no inflater available to handle deflate transfer syntax';\n    }\n\n    // explicit big endian\n    if (transferSyntax === BEI) {\n      return new ByteStream(bigEndianByteArrayParser, byteArray, position);\n    }\n\n    // all other transfer syntaxes are little endian; only the pixel encoding differs\n    // make a new stream so the metaheader warnings don't come along for the ride\n    return new ByteStream(littleEndianByteArrayParser, byteArray, position);\n  }\n\n  function mergeDataSets(metaHeaderDataSet, instanceDataSet) {\n    for (const propertyName in metaHeaderDataSet.elements) {\n      if (metaHeaderDataSet.elements.hasOwnProperty(propertyName)) {\n        instanceDataSet.elements[propertyName] = metaHeaderDataSet.elements[propertyName];\n      }\n    }\n\n    if (metaHeaderDataSet.warnings !== undefined) {\n      instanceDataSet.warnings = metaHeaderDataSet.warnings.concat(instanceDataSet.warnings);\n    }\n\n    return instanceDataSet;\n  }\n\n  function readDataSet(metaHeaderDataSet) {\n    const transferSyntax = readTransferSyntax(metaHeaderDataSet);\n    const explicit = isExplicit(transferSyntax);\n    const dataSetByteStream = getDataSetByteStream(transferSyntax, metaHeaderDataSet.position);\n\n    const elements = {};\n    const dataSet = new DataSet(dataSetByteStream.byteArrayParser, dataSetByteStream.byteArray, elements);\n\n    dataSet.warnings = dataSetByteStream.warnings;\n\n    try {\n      if (explicit) {\n        parseDicomDataSet.parseDicomDataSetExplicit(dataSet, dataSetByteStream, dataSetByteStream.byteArray.length, options);\n      } else {\n        parseDicomDataSet.parseDicomDataSetImplicit(dataSet, dataSetByteStream, dataSetByteStream.byteArray.length, options);\n      }\n    } catch (e) {\n      const ex = {\n        exception: e,\n        dataSet\n      };\n\n      throw ex;\n    }\n\n    return dataSet;\n  }\n\n  // main function here\n  function parseTheByteStream() {\n    const metaHeaderDataSet = readPart10Header(byteArray, options);\n    const dataSet = readDataSet(metaHeaderDataSet);\n\n    return mergeDataSets(metaHeaderDataSet, dataSet);\n  }\n\n  // This is where we actually start parsing\n  return parseTheByteStream();\n}\n\nexport { LEI, LEE, BEI };", "import alloc from './alloc.js';\nimport ByteStream from './byteStream.js';\nimport readSequenceItem from './readSequenceItem.js';\nimport sharedCopy from './sharedCopy.js';\n\n/**\n * Functionality for extracting encapsulated pixel data\n */\n\nconst calculateBufferSize = (fragments, startFragment, numFragments) => {\n  let bufferSize = 0;\n\n  for (let i = startFragment; i < startFragment + numFragments; i++) {\n    bufferSize += fragments[i].length;\n  }\n\n  return bufferSize;\n};\n\n/**\n * Returns the encapsulated pixel data from the specified fragments.  Use this function when you know\n * the fragments you want to extract data from.  See\n *\n * @param dataSet - the dataSet containing the encapsulated pixel data\n * @param pixelDataElement - the pixel data element (x7fe00010) to extract the fragment data from\n * @param startFragmentIndex - zero based index of the first fragment to extract from\n * @param [numFragments] - the number of fragments to extract from, default is 1\n * @param [fragments] - optional array of objects describing each fragment (offset, position, length)\n * @returns {object} byte array with the encapsulated pixel data\n */\nexport default function readEncapsulatedPixelDataFromFragments (dataSet, pixelDataElement, startFragmentIndex, numFragments, fragments) {\n  // default values\n  numFragments = numFragments || 1;\n  fragments = fragments || pixelDataElement.fragments;\n\n  // check parameters\n  if (dataSet === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter \\'dataSet\\'';\n  }\n  if (pixelDataElement === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter \\'pixelDataElement\\'';\n  }\n  if (startFragmentIndex === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter \\'startFragmentIndex\\'';\n  }\n  if (numFragments === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: missing required parameter \\'numFragments\\'';\n  }\n  if (pixelDataElement.tag !== 'x7fe00010') {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'pixelDataElement\\' refers to non pixel data tag (expected tag = x7fe00010';\n  }\n  if (pixelDataElement.encapsulatedPixelData !== true) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.hadUndefinedLength !== true) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.basicOffsetTable === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.fragments === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.fragments.length <= 0) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (startFragmentIndex < 0) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'startFragmentIndex\\' must be >= 0';\n  }\n  if (startFragmentIndex >= pixelDataElement.fragments.length) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'startFragmentIndex\\' must be < number of fragments';\n  }\n  if (numFragments < 1) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'numFragments\\' must be > 0';\n  }\n  if (startFragmentIndex + numFragments > pixelDataElement.fragments.length) {\n    throw 'dicomParser.readEncapsulatedPixelDataFromFragments: parameter \\'startFragment\\' + \\'numFragments\\' < number of fragments';\n  }\n\n  // create byte stream on the data for this pixel data element\n  const byteStream = new ByteStream(dataSet.byteArrayParser, dataSet.byteArray, pixelDataElement.dataOffset);\n\n  // seek past the basic offset table (no need to parse it again since we already have)\n  const basicOffsetTable = readSequenceItem(byteStream);\n\n  if (basicOffsetTable.tag !== 'xfffee000') {\n    throw 'dicomParser.readEncapsulatedPixelData: missing basic offset table xfffee000';\n  }\n\n  byteStream.seek(basicOffsetTable.length);\n\n  const fragmentZeroPosition = byteStream.position;\n\n  // tag + length\n  const fragmentHeaderSize = 8;\n\n  // if there is only one fragment, return a view on this array to avoid copying\n  if (numFragments === 1) {\n    return sharedCopy(byteStream.byteArray, fragmentZeroPosition + fragments[startFragmentIndex].offset + fragmentHeaderSize, fragments[startFragmentIndex].length);\n  }\n\n  // more than one fragment, combine all of the fragments into one buffer\n  const bufferSize = calculateBufferSize(fragments, startFragmentIndex, numFragments);\n  const pixelData = alloc(byteStream.byteArray, bufferSize);\n  let pixelDataIndex = 0;\n\n  for (let i = startFragmentIndex; i < startFragmentIndex + numFragments; i++) {\n    let fragmentOffset = fragmentZeroPosition + fragments[i].offset + fragmentHeaderSize;\n\n    for (let j = 0; j < fragments[i].length; j++) {\n      pixelData[pixelDataIndex++] = byteStream.byteArray[fragmentOffset++];\n    }\n  }\n\n  return pixelData;\n}\n", "import readEncapsulatedPixelDataFromFragments from './readEncapsulatedPixelDataFromFragments.js';\n\n/**\n * Functionality for extracting encapsulated pixel data\n */\n\nconst findFragmentIndexWithOffset = (fragments, offset) => {\n  for (let i = 0; i < fragments.length; i++) {\n    if (fragments[i].offset === offset) {\n      return i;\n    }\n  }\n};\n\nconst calculateNumberOfFragmentsForFrame = (frameIndex, basicOffsetTable, fragments, startFragmentIndex) => {\n  // special case for last frame\n  if (frameIndex === basicOffsetTable.length - 1) {\n    return fragments.length - startFragmentIndex;\n  }\n\n  // iterate through each fragment looking for the one matching the offset for the next frame\n  const nextFrameOffset = basicOffsetTable[frameIndex + 1];\n\n  for (let i = startFragmentIndex + 1; i < fragments.length; i++) {\n    if (fragments[i].offset === nextFrameOffset) {\n      return i - startFragmentIndex;\n    }\n  }\n\n  throw 'dicomParser.calculateNumberOfFragmentsForFrame: could not find fragment with offset matching basic offset table';\n};\n\n/**\n * Returns the pixel data for the specified frame in an encapsulated pixel data element that has a non\n * empty basic offset table.  Note that this function will fail if the basic offset table is empty - in that\n * case you need to determine which fragments map to which frames and read them using\n * readEncapsulatedPixelDataFromFragments().  Also see the function createJEPGBasicOffsetTable() to see\n * how a basic offset table can be created for JPEG images\n *\n * @param dataSet - the dataSet containing the encapsulated pixel data\n * @param pixelDataElement - the pixel data element (x7fe00010) to extract the frame from\n * @param frameIndex - the zero based frame index\n * @param [basicOffsetTable] - optional array of starting offsets for frames\n * @param [fragments] - optional array of objects describing each fragment (offset, position, length)\n * @returns {object} with the encapsulated pixel data\n */\nexport default function readEncapsulatedImageFrame (dataSet, pixelDataElement, frameIndex, basicOffsetTable, fragments) {\n  // default parameters\n  basicOffsetTable = basicOffsetTable || pixelDataElement.basicOffsetTable;\n  fragments = fragments || pixelDataElement.fragments;\n\n  // Validate parameters\n  if (dataSet === undefined) {\n    throw 'dicomParser.readEncapsulatedImageFrame: missing required parameter \\'dataSet\\'';\n  }\n  if (pixelDataElement === undefined) {\n    throw 'dicomParser.readEncapsulatedImageFrame: missing required parameter \\'pixelDataElement\\'';\n  }\n  if (frameIndex === undefined) {\n    throw 'dicomParser.readEncapsulatedImageFrame: missing required parameter \\'frameIndex\\'';\n  }\n  if (basicOffsetTable === undefined) {\n    throw 'dicomParser.readEncapsulatedImageFrame: parameter \\'pixelDataElement\\' does not have basicOffsetTable';\n  }\n  if (pixelDataElement.tag !== 'x7fe00010') {\n    throw 'dicomParser.readEncapsulatedImageFrame: parameter \\'pixelDataElement\\' refers to non pixel data tag (expected tag = x7fe00010)';\n  }\n  if (pixelDataElement.encapsulatedPixelData !== true) {\n    throw 'dicomParser.readEncapsulatedImageFrame: parameter \\'pixelDataElement\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.hadUndefinedLength !== true) {\n    throw 'dicomParser.readEncapsulatedImageFrame: parameter \\'pixelDataElement\\' refers to pixel data element that does not have undefined length';\n  }\n  if (pixelDataElement.fragments === undefined) {\n    throw 'dicomParser.readEncapsulatedImageFrame: parameter \\'pixelDataElement\\' refers to pixel data element that does not have fragments';\n  }\n  if (basicOffsetTable.length === 0) {\n    throw 'dicomParser.readEncapsulatedImageFrame: basicOffsetTable has zero entries';\n  }\n  if (frameIndex < 0) {\n    throw 'dicomParser.readEncapsulatedImageFrame: parameter \\'frameIndex\\' must be >= 0';\n  }\n  if (frameIndex >= basicOffsetTable.length) {\n    throw 'dicomParser.readEncapsulatedImageFrame: parameter \\'frameIndex\\' must be < basicOffsetTable.length';\n  }\n\n  // find starting fragment based on the offset for the frame in the basic offset table\n  const offset = basicOffsetTable[frameIndex];\n  const startFragmentIndex = findFragmentIndexWithOffset(fragments, offset);\n\n  if (startFragmentIndex === undefined) {\n    throw 'dicomParser.readEncapsulatedImageFrame: unable to find fragment that matches basic offset table entry';\n  }\n\n  // calculate the number of fragments for this frame\n  const numFragments = calculateNumberOfFragmentsForFrame(frameIndex, basicOffsetTable, fragments, startFragmentIndex);\n\n  // now extract the frame from the fragments\n  return readEncapsulatedPixelDataFromFragments(dataSet, pixelDataElement, startFragmentIndex, numFragments, fragments);\n}\n", "import readEncapsulatedImageFrame from './readEncapsulatedImageFrame.js';\nimport readEncapsulatedPixelDataFromFragments from './readEncapsulatedPixelDataFromFragments.js';\n\n/**\n * Functionality for extracting encapsulated pixel data\n */\n\nlet deprecatedNoticeLogged = false;\n\n/**\n * Returns the pixel data for the specified frame in an encapsulated pixel data element.  If no basic offset\n * table is present, it assumes that all fragments are for one frame.  Note that this assumption/logic is not\n * valid for multi-frame instances so this function has been deprecated and will eventually be removed.  Code\n * should be updated to use readEncapsulatedPixelDataFromFragments() or readEncapsulatedImageFrame()\n *\n * @deprecated since version 1.6 - use readEncapsulatedPixelDataFromFragments() or readEncapsulatedImageFrame()\n * @param dataSet - the dataSet containing the encapsulated pixel data\n * @param pixelDataElement - the pixel data element (x7fe00010) to extract the frame from\n * @param frame - the zero based frame index\n * @returns {object} with the encapsulated pixel data\n */\nexport default function readEncapsulatedPixelData (dataSet, pixelDataElement, frame) {\n  if (!deprecatedNoticeLogged) {\n    deprecatedNoticeLogged = true;\n\n    if (console && console.log) {\n      console.log('WARNING: dicomParser.readEncapsulatedPixelData() has been deprecated');\n    }\n  }\n\n  if (dataSet === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelData: missing required parameter \\'dataSet\\'';\n  }\n  if (pixelDataElement === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelData: missing required parameter \\'element\\'';\n  }\n  if (frame === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelData: missing required parameter \\'frame\\'';\n  }\n  if (pixelDataElement.tag !== 'x7fe00010') {\n    throw 'dicomParser.readEncapsulatedPixelData: parameter \\'element\\' refers to non pixel data tag (expected tag = x7fe00010)';\n  }\n  if (pixelDataElement.encapsulatedPixelData !== true) {\n    throw 'dicomParser.readEncapsulatedPixelData: parameter \\'element\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.hadUndefinedLength !== true) {\n    throw 'dicomParser.readEncapsulatedPixelData: parameter \\'element\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.basicOffsetTable === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelData: parameter \\'element\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (pixelDataElement.fragments === undefined) {\n    throw 'dicomParser.readEncapsulatedPixelData: parameter \\'element\\' refers to pixel data element that does not have encapsulated pixel data';\n  }\n  if (frame < 0) {\n    throw 'dicomParser.readEncapsulatedPixelData: parameter \\'frame\\' must be >= 0';\n  }\n\n  // If the basic offset table is not empty, we can extract the frame\n  if (pixelDataElement.basicOffsetTable.length !== 0) {\n    return readEncapsulatedImageFrame(dataSet, pixelDataElement, frame);\n  }\n\n  // No basic offset table, assume all fragments are for one frame - NOTE that this is NOT a valid\n  // assumption but is the original behavior so we are keeping it for now\n  return readEncapsulatedPixelDataFromFragments(dataSet, pixelDataElement, 0, pixelDataElement.fragments.length);\n}\n", "import {\n  isStringVr,\n  isPrivateTag,\n  parsePN,\n  parseTM,\n  parseDA,\n  explicitElementToString,\n  explicitDataSetToJS,\n  createJPEGBasicOffsetTable\n} from './util/index.js';\n\nimport { parseDicomDataSetExplicit, parseDicomDataSetImplicit } from './parseDicomDataSet.js';\nimport { readFixedString } from './byteArrayParser.js';\n\nimport alloc from './alloc.js';\nimport version from './version.js';\nimport bigEndianByteArrayParser from './bigEndianByteArrayParser.js';\nimport ByteStream from './byteStream.js';\nimport sharedCopy from './sharedCopy.js';\nimport DataSet from './dataSet.js';\nimport findAndSetUNElementLength from './findAndSetUNElementLength.js';\nimport findEndOfEncapsulatedElement from './findEndOfEncapsulatedPixelData.js';\nimport findItemDelimitationItemAndSetElementLength from './findItemDelimitationItem.js';\nimport littleEndianByteArrayParser from './littleEndianByteArrayParser.js';\nimport parseDicom, { LEI, LEE } from './parseDicom.js';\nimport readDicomElementExplicit from './readDicomElementExplicit.js';\nimport readDicomElementImplicit from './readDicomElementImplicit.js';\nimport readEncapsulatedImageFrame from './readEncapsulatedImageFrame.js';\nimport readEncapsulatedPixelData from './readEncapsulatedPixelData.js';\nimport readEncapsulatedPixelDataFromFragments from './readEncapsulatedPixelDataFromFragments.js';\nimport readPart10Header from './readPart10Header.js';\nimport readSequenceItemsExplicit from './readSequenceElementExplicit.js';\nimport readSequenceItemsImplicit from './readSequenceElementImplicit.js';\nimport readSequenceItem from './readSequenceItem.js';\nimport readTag from './readTag.js';\n\nconst dicomParser = {\n  isStringVr,\n  isPrivateTag,\n  parsePN,\n  parseTM,\n  parseDA,\n  explicitElementToString,\n  explicitDataSetToJS,\n  createJPEGBasicOffsetTable,\n  parseDicomDataSetExplicit,\n  parseDicomDataSetImplicit,\n  readFixedString,\n  alloc,\n  version,\n  bigEndianByteArrayParser,\n  ByteStream,\n  sharedCopy,\n  DataSet,\n  findAndSetUNElementLength,\n  findEndOfEncapsulatedElement,\n  findItemDelimitationItemAndSetElementLength,\n  littleEndianByteArrayParser,\n  parseDicom,\n  readDicomElementExplicit,\n  readDicomElementImplicit,\n  readEncapsulatedImageFrame,\n  readEncapsulatedPixelData,\n  readEncapsulatedPixelDataFromFragments,\n  readPart10Header,\n  readSequenceItemsExplicit,\n  readSequenceItemsImplicit,\n  readSequenceItem,\n  readTag,\n  LEI,\n  LEE,\n};\n\nexport {\n  isStringVr,\n  isPrivateTag,\n  parsePN,\n  parseTM,\n  parseDA,\n  explicitElementToString,\n  explicitDataSetToJS,\n  createJPEGBasicOffsetTable,\n  parseDicomDataSetExplicit,\n  parseDicomDataSetImplicit,\n  readFixedString,\n  alloc,\n  version,\n  bigEndianByteArrayParser,\n  ByteStream,\n  sharedCopy,\n  DataSet,\n  findAndSetUNElementLength,\n  findEndOfEncapsulatedElement,\n  findItemDelimitationItemAndSetElementLength,\n  littleEndianByteArrayParser,\n  parseDicom,\n  readDicomElementExplicit,\n  readDicomElementImplicit,\n  readEncapsulatedImageFrame,\n  readEncapsulatedPixelData,\n  readEncapsulatedPixelDataFromFragments,\n  readPart10Header,\n  readSequenceItemsExplicit,\n  readSequenceItemsImplicit,\n  readSequenceItem,\n  readTag\n};\n\nexport default dicomParser;\n", " \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"path\" has been externalized for browser compatibility. Cannot access \"path.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "\nvar libjpegturbowasm_decode = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(libjpegturbowasm_decode) {\n  libjpegturbowasm_decode = libjpegturbowasm_decode || {};\n\nvar Module=typeof libjpegturbowasm_decode!=\"undefined\"?libjpegturbowasm_decode:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}if(ENVIRONMENT_IS_NODE){var fs=require(\"fs\");var nodePath=require(\"path\");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=(status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||52428800;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function keepRuntimeAlive(){return noExitRuntime}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"libjpegturbowasm_decode.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"K\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"M\"];addOnInit(Module[\"asm\"][\"L\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}instantiateAsync().catch(readyPromiseReject);return{}}function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24;this.set_type=function(type){HEAPU32[this.ptr+4>>2]=type};this.get_type=function(){return HEAPU32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAPU32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAPU32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;return prev===1};this.set_adjusted_ptr=function(adjustedPtr){HEAPU32[this.ptr+16>>2]=adjustedPtr};this.get_adjusted_ptr=function(){return HEAPU32[this.ptr+16>>2]};this.get_exception_ptr=function(){var isPointer=___cxa_is_pointer_type(this.get_type());if(isPointer){return HEAPU32[this.excPtr>>2]}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.excPtr}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}var structRegistrations={};function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAP32[pointer>>2])}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}return name}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((dt,i)=>{if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function __embind_finalize_value_object(structType){var reg=structRegistrations[structType];delete structRegistrations[structType];var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;var fieldRecords=reg.fields;var fieldTypes=fieldRecords.map(field=>field.getterReturnType).concat(fieldRecords.map(field=>field.setterArgumentType));whenDependentTypesAreResolved([structType],fieldTypes,fieldTypes=>{var fields={};fieldRecords.forEach((field,i)=>{var fieldName=field.fieldName;var getterReturnType=fieldTypes[i];var getter=field.getter;var getterContext=field.getterContext;var setterArgumentType=fieldTypes[i+fieldRecords.length];var setter=field.setter;var setterContext=field.setterContext;fields[fieldName]={read:ptr=>{return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))},write:(ptr,o)=>{var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)}}});return[{name:reg.name,\"fromWireType\":function(ptr){var rv={};for(var i in fields){rv[i]=fields[i].read(ptr)}rawDestructor(ptr);return rv},\"toWireType\":function(destructors,o){for(var fieldName in fields){if(!(fieldName in o)){throw new TypeError('Missing field:  \"'+fieldName+'\"')}}var ptr=rawConstructor();for(fieldName in fields){fields[fieldName].write(ptr,o[fieldName])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}]})}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}var finalizationRegistry=false;function detachFinalizer(handle){}function runDestructor($$){if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function releaseClassHandle($$){$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}var registeredPointers={};function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}var delayFunction=undefined;function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record}}))}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function attachFinalizer(handle){if(\"undefined\"===typeof FinalizationRegistry){attachFinalizer=handle=>handle;return handle}finalizationRegistry=new FinalizationRegistry(info=>{releaseClassHandle(info.$$)});attachFinalizer=handle=>{var $$=handle.$$;var hasSmartPtr=!!$$.smartPtr;if(hasSmartPtr){var info={$$:$$};finalizationRegistry.register(handle,info,handle)}return handle};detachFinalizer=handle=>finalizationRegistry.unregister(handle);return attachFinalizer(handle)}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+embindRepr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+embindRepr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,Emval.toHandle(function(){clonedHandle[\"delete\"]()}));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+embindRepr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function dynCall(sig,ptr,args){if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}var rtn=getWasmTableEntry(ptr).apply(null,args);return rtn}function getDynCaller(sig,ptr){var argCache=[];return function(){argCache.length=0;Object.assign(argCache,arguments);return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!=\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAPU32[firstElement+i*4>>2])}return array}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){assert(argCount>0);var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=()=>{throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){argTypes.splice(1,0,null);classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor);return[]});return[]})}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:value=>{switch(value){case undefined:return 1;case null:return 2;case true:return 3;case false:return 4;default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function embindRepr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=()=>HEAPU16;shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=()=>HEAPU32;shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value==\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_value_object(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){structRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]}}function __embind_register_value_object_field(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){structRegistrations[structType].fields.push({fieldName:readLatin1String(fieldName),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function __emscripten_throw_longjmp(){throw Infinity}var emval_symbols={};function getStringOrSymbol(address){var symbol=emval_symbols[address];if(symbol===undefined){return readLatin1String(address)}return symbol}function emval_get_global(){if(typeof globalThis==\"object\"){return globalThis}return function(){return Function}()(\"return this\")()}function __emval_get_global(name){if(name===0){return Emval.toHandle(emval_get_global())}else{name=getStringOrSymbol(name);return Emval.toHandle(emval_get_global()[name])}}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function craftEmvalAllocator(argCount){var argsList=\"\";for(var i=0;i<argCount;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i}var getMemory=()=>HEAPU32;var functionBody=\"return function emval_allocator_\"+argCount+\"(constructor, argTypes, args) {\\n\"+\"  var HEAPU32 = getMemory();\\n\";for(var i=0;i<argCount;++i){functionBody+=\"var argType\"+i+\" = requireRegisteredType(HEAPU32[((argTypes)>>2)], 'parameter \"+i+\"');\\n\"+\"var arg\"+i+\" = argType\"+i+\".readValueFromPointer(args);\\n\"+\"args += argType\"+i+\"['argPackAdvance'];\\n\"+\"argTypes += 4;\\n\"}functionBody+=\"var obj = new constructor(\"+argsList+\");\\n\"+\"return valueToHandle(obj);\\n\"+\"}\\n\";return new Function(\"requireRegisteredType\",\"Module\",\"valueToHandle\",\"getMemory\",functionBody)(requireRegisteredType,Module,Emval.toHandle,getMemory)}var emval_newers={};function __emval_new(handle,argCount,argTypes,args){handle=Emval.toValue(handle);var newer=emval_newers[argCount];if(!newer){newer=craftEmvalAllocator(argCount);emval_newers[argCount]=newer}return newer(handle,argTypes,args)}function __emval_take_value(type,arg){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](arg);return Emval.toHandle(v)}function _abort(){abort(\"\")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function getHeapMax(){return 2147483648}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var ENV={};function getExecutableName(){return thisProgram||\"./this.program\"}function getEnvStrings(){if(!getEnvStrings.strings){var lang=(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={\"USER\":\"web_user\",\"LOGNAME\":\"web_user\",\"PATH\":\"/\",\"PWD\":\"/\",\"HOME\":\"/home/web_user\",\"LANG\":lang,\"_\":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(x+\"=\"+env[x])}getEnvStrings.strings=strings}return getEnvStrings.strings}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var SYSCALLS={varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret}};function _environ_get(__environ,environ_buf){var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAPU32[__environ+i*4>>2]=ptr;writeAsciiToMemory(string,ptr);bufSize+=string.length+1});return 0}function _environ_sizes_get(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAPU32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1});HEAPU32[penviron_buf_size>>2]=bufSize;return 0}function _proc_exit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}function exitJS(status,implicit){EXITSTATUS=status;_proc_exit(status)}var _exit=exitJS;function _fd_close(fd){return 52}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){return 70}var printCharBuffers=[null,[],[]];function printChar(stream,curr){var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j])}num+=len}HEAPU32[pnum>>2]=num;return 0}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");init_ClassHandle();init_embind();init_RegisteredPointer();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();var asmLibraryArg={\"g\":___cxa_throw,\"A\":__embind_finalize_value_object,\"w\":__embind_register_bigint,\"F\":__embind_register_bool,\"u\":__embind_register_class,\"t\":__embind_register_class_constructor,\"c\":__embind_register_class_function,\"E\":__embind_register_emval,\"m\":__embind_register_float,\"b\":__embind_register_integer,\"a\":__embind_register_memory_view,\"l\":__embind_register_std_string,\"h\":__embind_register_std_wstring,\"J\":__embind_register_value_object,\"d\":__embind_register_value_object_field,\"G\":__embind_register_void,\"x\":__emscripten_throw_longjmp,\"i\":__emval_decref,\"r\":__emval_get_global,\"p\":__emval_incref,\"q\":__emval_new,\"s\":__emval_take_value,\"j\":_abort,\"D\":_emscripten_memcpy_big,\"y\":_emscripten_resize_heap,\"z\":_environ_get,\"B\":_environ_sizes_get,\"I\":_exit,\"C\":_fd_close,\"v\":_fd_seek,\"k\":_fd_write,\"o\":invoke_ii,\"n\":invoke_iii,\"H\":invoke_iiii,\"f\":invoke_vi,\"e\":invoke_viii};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"L\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"N\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"O\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"P\"]).apply(null,arguments)};var __embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=function(){return(__embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=Module[\"asm\"][\"Q\"]).apply(null,arguments)};var _setThrew=Module[\"_setThrew\"]=function(){return(_setThrew=Module[\"_setThrew\"]=Module[\"asm\"][\"R\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"S\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"T\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"U\"]).apply(null,arguments)};var ___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=function(){return(___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=Module[\"asm\"][\"V\"]).apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return(dynCall_jiji=Module[\"dynCall_jiji\"]=Module[\"asm\"][\"W\"]).apply(null,arguments)};function invoke_vi(index,a1){var sp=stackSave();try{getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_ii(index,a1){var sp=stackSave();try{return getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viii(index,a1,a2,a3){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiii(index,a1,a2,a3){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iii(index,a1,a2){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}Module[\"ccall\"]=ccall;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return libjpegturbowasm_decode.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = libjpegturbowasm_decode;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return libjpegturbowasm_decode; });\nelse if (typeof exports === 'object')\n  exports[\"libjpegturbowasm_decode\"] = libjpegturbowasm_decode;\n", "\nvar CharLSWASM = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(CharLSWASM) {\n  CharLSWASM = CharLSWASM || {};\n\nvar Module=typeof CharLSWASM!=\"undefined\"?CharLSWASM:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}if(ENVIRONMENT_IS_NODE){var fs=require(\"fs\");var nodePath=require(\"path\");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=(status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||52428800;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function keepRuntimeAlive(){return noExitRuntime}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"charlswasm_decode.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"z\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"C\"];addOnInit(Module[\"asm\"][\"A\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}instantiateAsync().catch(readyPromiseReject);return{}}function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24;this.set_type=function(type){HEAPU32[this.ptr+4>>2]=type};this.get_type=function(){return HEAPU32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAPU32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAPU32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;return prev===1};this.set_adjusted_ptr=function(adjustedPtr){HEAPU32[this.ptr+16>>2]=adjustedPtr};this.get_adjusted_ptr=function(){return HEAPU32[this.ptr+16>>2]};this.get_exception_ptr=function(){var isPointer=___cxa_is_pointer_type(this.get_type());if(isPointer){return HEAPU32[this.excPtr>>2]}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.excPtr}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}var structRegistrations={};function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAP32[pointer>>2])}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}return name}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((dt,i)=>{if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function __embind_finalize_value_object(structType){var reg=structRegistrations[structType];delete structRegistrations[structType];var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;var fieldRecords=reg.fields;var fieldTypes=fieldRecords.map(field=>field.getterReturnType).concat(fieldRecords.map(field=>field.setterArgumentType));whenDependentTypesAreResolved([structType],fieldTypes,fieldTypes=>{var fields={};fieldRecords.forEach((field,i)=>{var fieldName=field.fieldName;var getterReturnType=fieldTypes[i];var getter=field.getter;var getterContext=field.getterContext;var setterArgumentType=fieldTypes[i+fieldRecords.length];var setter=field.setter;var setterContext=field.setterContext;fields[fieldName]={read:ptr=>{return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))},write:(ptr,o)=>{var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)}}});return[{name:reg.name,\"fromWireType\":function(ptr){var rv={};for(var i in fields){rv[i]=fields[i].read(ptr)}rawDestructor(ptr);return rv},\"toWireType\":function(destructors,o){for(var fieldName in fields){if(!(fieldName in o)){throw new TypeError('Missing field:  \"'+fieldName+'\"')}}var ptr=rawConstructor();for(fieldName in fields){fields[fieldName].write(ptr,o[fieldName])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}]})}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}var finalizationRegistry=false;function detachFinalizer(handle){}function runDestructor($$){if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function releaseClassHandle($$){$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}var registeredPointers={};function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}var delayFunction=undefined;function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record}}))}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function attachFinalizer(handle){if(\"undefined\"===typeof FinalizationRegistry){attachFinalizer=handle=>handle;return handle}finalizationRegistry=new FinalizationRegistry(info=>{releaseClassHandle(info.$$)});attachFinalizer=handle=>{var $$=handle.$$;var hasSmartPtr=!!$$.smartPtr;if(hasSmartPtr){var info={$$:$$};finalizationRegistry.register(handle,info,handle)}return handle};detachFinalizer=handle=>finalizationRegistry.unregister(handle);return attachFinalizer(handle)}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+embindRepr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+embindRepr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,Emval.toHandle(function(){clonedHandle[\"delete\"]()}));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+embindRepr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function dynCall(sig,ptr,args){if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}var rtn=getWasmTableEntry(ptr).apply(null,args);return rtn}function getDynCaller(sig,ptr){var argCache=[];return function(){argCache.length=0;Object.assign(argCache,arguments);return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!=\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAPU32[firstElement+i*4>>2])}return array}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){assert(argCount>0);var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=()=>{throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){argTypes.splice(1,0,null);classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor);return[]});return[]})}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:value=>{switch(value){case undefined:return 1;case null:return 2;case true:return 3;case false:return 4;default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function embindRepr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError(\"Cannot call \"+name+\" due to unbound types\",argTypes)},argCount-1);whenDependentTypesAreResolved([],argTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return[]})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=()=>HEAPU16;shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=()=>HEAPU32;shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value==\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_value_object(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){structRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]}}function __embind_register_value_object_field(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){structRegistrations[structType].fields.push({fieldName:readLatin1String(fieldName),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}var emval_symbols={};function getStringOrSymbol(address){var symbol=emval_symbols[address];if(symbol===undefined){return readLatin1String(address)}return symbol}function emval_get_global(){if(typeof globalThis==\"object\"){return globalThis}return function(){return Function}()(\"return this\")()}function __emval_get_global(name){if(name===0){return Emval.toHandle(emval_get_global())}else{name=getStringOrSymbol(name);return Emval.toHandle(emval_get_global()[name])}}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function craftEmvalAllocator(argCount){var argsList=\"\";for(var i=0;i<argCount;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i}var getMemory=()=>HEAPU32;var functionBody=\"return function emval_allocator_\"+argCount+\"(constructor, argTypes, args) {\\n\"+\"  var HEAPU32 = getMemory();\\n\";for(var i=0;i<argCount;++i){functionBody+=\"var argType\"+i+\" = requireRegisteredType(HEAPU32[((argTypes)>>2)], 'parameter \"+i+\"');\\n\"+\"var arg\"+i+\" = argType\"+i+\".readValueFromPointer(args);\\n\"+\"args += argType\"+i+\"['argPackAdvance'];\\n\"+\"argTypes += 4;\\n\"}functionBody+=\"var obj = new constructor(\"+argsList+\");\\n\"+\"return valueToHandle(obj);\\n\"+\"}\\n\";return new Function(\"requireRegisteredType\",\"Module\",\"valueToHandle\",\"getMemory\",functionBody)(requireRegisteredType,Module,Emval.toHandle,getMemory)}var emval_newers={};function __emval_new(handle,argCount,argTypes,args){handle=Emval.toValue(handle);var newer=emval_newers[argCount];if(!newer){newer=craftEmvalAllocator(argCount);emval_newers[argCount]=newer}return newer(handle,argTypes,args)}function __emval_take_value(type,arg){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](arg);return Emval.toHandle(v)}function _abort(){abort(\"\")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function getHeapMax(){return 2147483648}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");init_ClassHandle();init_embind();init_RegisteredPointer();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();var asmLibraryArg={\"h\":___cxa_throw,\"q\":__embind_finalize_value_object,\"r\":__embind_register_bigint,\"w\":__embind_register_bool,\"p\":__embind_register_class,\"o\":__embind_register_class_constructor,\"c\":__embind_register_class_function,\"v\":__embind_register_emval,\"k\":__embind_register_float,\"e\":__embind_register_function,\"b\":__embind_register_integer,\"a\":__embind_register_memory_view,\"j\":__embind_register_std_string,\"g\":__embind_register_std_wstring,\"u\":__embind_register_value_object,\"d\":__embind_register_value_object_field,\"x\":__embind_register_void,\"i\":__emval_decref,\"m\":__emval_get_global,\"l\":__emval_incref,\"y\":__emval_new,\"n\":__emval_take_value,\"f\":_abort,\"t\":_emscripten_memcpy_big,\"s\":_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"A\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"B\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"D\"]).apply(null,arguments)};var __embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=function(){return(__embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=Module[\"asm\"][\"E\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"F\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"G\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"H\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"I\"]).apply(null,arguments)};var ___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=function(){return(___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=Module[\"asm\"][\"J\"]).apply(null,arguments)};Module[\"ccall\"]=ccall;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return CharLSWASM.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = CharLSWASM;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return CharLSWASM; });\nelse if (typeof exports === 'object')\n  exports[\"CharLSWASM\"] = CharLSWASM;\n", "\nvar OpenJPEGWASM = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(OpenJPEGWASM) {\n  OpenJPEGWASM = OpenJPEGWASM || {};\n\nvar Module=typeof OpenJPEGWASM!=\"undefined\"?OpenJPEGWASM:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}if(ENVIRONMENT_IS_NODE){var fs=require(\"fs\");var nodePath=require(\"path\");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=(status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||52428800;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function keepRuntimeAlive(){return noExitRuntime}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"openjpegwasm_decode.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"E\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"G\"];addOnInit(Module[\"asm\"][\"F\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}instantiateAsync().catch(readyPromiseReject);return{}}function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24;this.set_type=function(type){HEAPU32[this.ptr+4>>2]=type};this.get_type=function(){return HEAPU32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAPU32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAPU32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;return prev===1};this.set_adjusted_ptr=function(adjustedPtr){HEAPU32[this.ptr+16>>2]=adjustedPtr};this.get_adjusted_ptr=function(){return HEAPU32[this.ptr+16>>2]};this.get_exception_ptr=function(){var isPointer=___cxa_is_pointer_type(this.get_type());if(isPointer){return HEAPU32[this.excPtr>>2]}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.excPtr}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}var structRegistrations={};function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAP32[pointer>>2])}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}return name}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((dt,i)=>{if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function __embind_finalize_value_object(structType){var reg=structRegistrations[structType];delete structRegistrations[structType];var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;var fieldRecords=reg.fields;var fieldTypes=fieldRecords.map(field=>field.getterReturnType).concat(fieldRecords.map(field=>field.setterArgumentType));whenDependentTypesAreResolved([structType],fieldTypes,fieldTypes=>{var fields={};fieldRecords.forEach((field,i)=>{var fieldName=field.fieldName;var getterReturnType=fieldTypes[i];var getter=field.getter;var getterContext=field.getterContext;var setterArgumentType=fieldTypes[i+fieldRecords.length];var setter=field.setter;var setterContext=field.setterContext;fields[fieldName]={read:ptr=>{return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))},write:(ptr,o)=>{var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)}}});return[{name:reg.name,\"fromWireType\":function(ptr){var rv={};for(var i in fields){rv[i]=fields[i].read(ptr)}rawDestructor(ptr);return rv},\"toWireType\":function(destructors,o){for(var fieldName in fields){if(!(fieldName in o)){throw new TypeError('Missing field:  \"'+fieldName+'\"')}}var ptr=rawConstructor();for(fieldName in fields){fields[fieldName].write(ptr,o[fieldName])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}]})}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}var finalizationRegistry=false;function detachFinalizer(handle){}function runDestructor($$){if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function releaseClassHandle($$){$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}var registeredPointers={};function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}var delayFunction=undefined;function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record}}))}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function attachFinalizer(handle){if(\"undefined\"===typeof FinalizationRegistry){attachFinalizer=handle=>handle;return handle}finalizationRegistry=new FinalizationRegistry(info=>{releaseClassHandle(info.$$)});attachFinalizer=handle=>{var $$=handle.$$;var hasSmartPtr=!!$$.smartPtr;if(hasSmartPtr){var info={$$:$$};finalizationRegistry.register(handle,info,handle)}return handle};detachFinalizer=handle=>finalizationRegistry.unregister(handle);return attachFinalizer(handle)}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+embindRepr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+embindRepr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,Emval.toHandle(function(){clonedHandle[\"delete\"]()}));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+embindRepr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function dynCall(sig,ptr,args){if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}var rtn=getWasmTableEntry(ptr).apply(null,args);return rtn}function getDynCaller(sig,ptr){var argCache=[];return function(){argCache.length=0;Object.assign(argCache,arguments);return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!=\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAPU32[firstElement+i*4>>2])}return array}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){assert(argCount>0);var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=()=>{throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){argTypes.splice(1,0,null);classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor);return[]});return[]})}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:value=>{switch(value){case undefined:return 1;case null:return 2;case true:return 3;case false:return 4;default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function embindRepr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=()=>HEAPU16;shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=()=>HEAPU32;shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value==\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_value_object(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){structRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]}}function __embind_register_value_object_field(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){structRegistrations[structType].fields.push({fieldName:readLatin1String(fieldName),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}var emval_symbols={};function getStringOrSymbol(address){var symbol=emval_symbols[address];if(symbol===undefined){return readLatin1String(address)}return symbol}function emval_get_global(){if(typeof globalThis==\"object\"){return globalThis}return function(){return Function}()(\"return this\")()}function __emval_get_global(name){if(name===0){return Emval.toHandle(emval_get_global())}else{name=getStringOrSymbol(name);return Emval.toHandle(emval_get_global()[name])}}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function craftEmvalAllocator(argCount){var argsList=\"\";for(var i=0;i<argCount;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i}var getMemory=()=>HEAPU32;var functionBody=\"return function emval_allocator_\"+argCount+\"(constructor, argTypes, args) {\\n\"+\"  var HEAPU32 = getMemory();\\n\";for(var i=0;i<argCount;++i){functionBody+=\"var argType\"+i+\" = requireRegisteredType(HEAPU32[((argTypes)>>2)], 'parameter \"+i+\"');\\n\"+\"var arg\"+i+\" = argType\"+i+\".readValueFromPointer(args);\\n\"+\"args += argType\"+i+\"['argPackAdvance'];\\n\"+\"argTypes += 4;\\n\"}functionBody+=\"var obj = new constructor(\"+argsList+\");\\n\"+\"return valueToHandle(obj);\\n\"+\"}\\n\";return new Function(\"requireRegisteredType\",\"Module\",\"valueToHandle\",\"getMemory\",functionBody)(requireRegisteredType,Module,Emval.toHandle,getMemory)}var emval_newers={};function __emval_new(handle,argCount,argTypes,args){handle=Emval.toValue(handle);var newer=emval_newers[argCount];if(!newer){newer=craftEmvalAllocator(argCount);emval_newers[argCount]=newer}return newer(handle,argTypes,args)}function __emval_take_value(type,arg){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](arg);return Emval.toHandle(v)}function _abort(){abort(\"\")}function getHeapMax(){return 2147483648}function _emscripten_get_heap_max(){return getHeapMax()}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var ENV={};function getExecutableName(){return thisProgram||\"./this.program\"}function getEnvStrings(){if(!getEnvStrings.strings){var lang=(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={\"USER\":\"web_user\",\"LOGNAME\":\"web_user\",\"PATH\":\"/\",\"PWD\":\"/\",\"HOME\":\"/home/web_user\",\"LANG\":lang,\"_\":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(x+\"=\"+env[x])}getEnvStrings.strings=strings}return getEnvStrings.strings}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var SYSCALLS={varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret}};function _environ_get(__environ,environ_buf){var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAPU32[__environ+i*4>>2]=ptr;writeAsciiToMemory(string,ptr);bufSize+=string.length+1});return 0}function _environ_sizes_get(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAPU32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1});HEAPU32[penviron_buf_size>>2]=bufSize;return 0}function _fd_close(fd){return 52}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){return 70}var printCharBuffers=[null,[],[]];function printChar(stream,curr){var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j])}num+=len}HEAPU32[pnum>>2]=num;return 0}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");init_ClassHandle();init_embind();init_RegisteredPointer();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();var asmLibraryArg={\"D\":___cxa_throw,\"e\":__embind_finalize_value_object,\"t\":__embind_register_bigint,\"B\":__embind_register_bool,\"r\":__embind_register_class,\"q\":__embind_register_class_constructor,\"b\":__embind_register_class_function,\"A\":__embind_register_emval,\"l\":__embind_register_float,\"d\":__embind_register_integer,\"a\":__embind_register_memory_view,\"k\":__embind_register_std_string,\"f\":__embind_register_std_wstring,\"g\":__embind_register_value_object,\"c\":__embind_register_value_object_field,\"C\":__embind_register_void,\"h\":__emval_decref,\"o\":__emval_get_global,\"m\":__emval_incref,\"n\":__emval_new,\"p\":__emval_take_value,\"i\":_abort,\"v\":_emscripten_get_heap_max,\"z\":_emscripten_memcpy_big,\"u\":_emscripten_resize_heap,\"w\":_environ_get,\"x\":_environ_sizes_get,\"y\":_fd_close,\"s\":_fd_seek,\"j\":_fd_write};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"F\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"H\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"I\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"J\"]).apply(null,arguments)};var __embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=function(){return(__embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=Module[\"asm\"][\"K\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"L\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"M\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"N\"]).apply(null,arguments)};var ___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=function(){return(___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=Module[\"asm\"][\"O\"]).apply(null,arguments)};var dynCall_iji=Module[\"dynCall_iji\"]=function(){return(dynCall_iji=Module[\"dynCall_iji\"]=Module[\"asm\"][\"P\"]).apply(null,arguments)};var dynCall_jji=Module[\"dynCall_jji\"]=function(){return(dynCall_jji=Module[\"dynCall_jji\"]=Module[\"asm\"][\"Q\"]).apply(null,arguments)};var dynCall_iiji=Module[\"dynCall_iiji\"]=function(){return(dynCall_iiji=Module[\"dynCall_iiji\"]=Module[\"asm\"][\"R\"]).apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return(dynCall_jiji=Module[\"dynCall_jiji\"]=Module[\"asm\"][\"S\"]).apply(null,arguments)};Module[\"ccall\"]=ccall;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return OpenJPEGWASM.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = OpenJPEGWASM;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return OpenJPEGWASM; });\nelse if (typeof exports === 'object')\n  exports[\"OpenJPEGWASM\"] = OpenJPEGWASM;\n", "\nvar Module = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(Module) {\n  Module = Module || {};\n\n\n\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = typeof Module != 'undefined' ? Module : {};\n\n// See https://caniuse.com/mdn-javascript_builtins_object_assign\n\n// See https://caniuse.com/mdn-javascript_builtins_bigint64array\n\n// Set up the promise that indicates the Module is initialized\nvar readyPromiseResolve, readyPromiseReject;\nModule['ready'] = new Promise(function(resolve, reject) {\n  readyPromiseResolve = resolve;\n  readyPromiseReject = reject;\n});\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n// {{PRE_JSES}}\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = (status, toThrow) => {\n  throw toThrow;\n};\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\n// Attempt to auto-detect the environment\nvar ENVIRONMENT_IS_WEB = typeof window == 'object';\nvar ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n// N.b. Electron.js environment is simultaneously a NODE-environment, but\n// also a web environment.\nvar ENVIRONMENT_IS_NODE = typeof process == 'object' && typeof process.versions == 'object' && typeof process.versions.node == 'string';\nvar ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar read_,\n    readAsync,\n    readBinary,\n    setWindowTitle;\n\n// Normally we don't log exceptions but instead let them bubble out the top\n// level where the embedding environment (e.g. the browser) can handle\n// them.\n// However under v8 and node we sometimes exit the process direcly in which case\n// its up to use us to log the exception before exiting.\n// If we fix https://github.com/emscripten-core/emscripten/issues/15080\n// this may no longer be needed under node.\nfunction logExceptionOnExit(e) {\n  if (e instanceof ExitStatus) return;\n  let toLog = e;\n  err('exiting due to exception: ' + toLog);\n}\n\nif (ENVIRONMENT_IS_NODE) {\n  // `require()` is no-op in an ESM module, use `createRequire()` to construct\n  // the require()` function.  This is only necessary for multi-environment\n  // builds, `-sENVIRONMENT=node` emits a static import declaration instead.\n  // TODO: Swap all `require()`'s with `import()`'s?\n  // These modules will usually be used on Node.js. Load them eagerly to avoid\n  // the complexity of lazy-loading.\n  var fs = require('fs');\n  var nodePath = require('path');\n\n  if (ENVIRONMENT_IS_WORKER) {\n    scriptDirectory = nodePath.dirname(scriptDirectory) + '/';\n  } else {\n    scriptDirectory = __dirname + '/';\n  }\n\n// include: node_shell_read.js\n\n\nread_ = (filename, binary) => {\n  // We need to re-wrap `file://` strings to URLs. Normalizing isn't\n  // necessary in that case, the path should already be absolute.\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  return fs.readFileSync(filename, binary ? undefined : 'utf8');\n};\n\nreadBinary = (filename) => {\n  var ret = read_(filename, true);\n  if (!ret.buffer) {\n    ret = new Uint8Array(ret);\n  }\n  return ret;\n};\n\nreadAsync = (filename, onload, onerror) => {\n  // See the comment in the `read_` function.\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  fs.readFile(filename, function(err, data) {\n    if (err) onerror(err);\n    else onload(data.buffer);\n  });\n};\n\n// end include: node_shell_read.js\n  if (process['argv'].length > 1) {\n    thisProgram = process['argv'][1].replace(/\\\\/g, '/');\n  }\n\n  arguments_ = process['argv'].slice(2);\n\n  // MODULARIZE will export the module in the proper place outside, we don't need to export here\n\n  process['on']('uncaughtException', function(ex) {\n    // suppress ExitStatus exceptions from showing an error\n    if (!(ex instanceof ExitStatus)) {\n      throw ex;\n    }\n  });\n\n  // Without this older versions of node (< v15) will log unhandled rejections\n  // but return 0, which is not normally the desired behaviour.  This is\n  // not be needed with node v15 and about because it is now the default\n  // behaviour:\n  // See https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode\n  process['on']('unhandledRejection', function(reason) { throw reason; });\n\n  quit_ = (status, toThrow) => {\n    if (keepRuntimeAlive()) {\n      process['exitCode'] = status;\n      throw toThrow;\n    }\n    logExceptionOnExit(toThrow);\n    process['exit'](status);\n  };\n\n  Module['inspect'] = function () { return '[Emscripten Module object]'; };\n\n} else\n\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n// ENVIRONMENT_IS_NODE.\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\n    scriptDirectory = self.location.href;\n  } else if (typeof document != 'undefined' && document.currentScript) { // web\n    scriptDirectory = document.currentScript.src;\n  }\n  // When MODULARIZE, this JS may be executed later, after document.currentScript\n  // is gone, so we saved it, and we use it here instead of any other info.\n  if (_scriptDir) {\n    scriptDirectory = _scriptDir;\n  }\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n  // otherwise, slice off the final part of the url to find the script directory.\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n  // and scriptDirectory will correctly be replaced with an empty string.\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\n  // they are removed because they could contain a slash.\n  if (scriptDirectory.indexOf('blob:') !== 0) {\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf('/')+1);\n  } else {\n    scriptDirectory = '';\n  }\n\n  // Differentiate the Web Worker from the Node Worker case, as reading must\n  // be done differently.\n  {\n// include: web_or_worker_shell_read.js\n\n\n  read_ = (url) => {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, false);\n      xhr.send(null);\n      return xhr.responseText;\n  }\n\n  if (ENVIRONMENT_IS_WORKER) {\n    readBinary = (url) => {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, false);\n        xhr.responseType = 'arraybuffer';\n        xhr.send(null);\n        return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\n    };\n  }\n\n  readAsync = (url, onload, onerror) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = () => {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n        return;\n      }\n      onerror();\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  }\n\n// end include: web_or_worker_shell_read.js\n  }\n\n  setWindowTitle = (title) => document.title = title;\n} else\n{\n}\n\nvar out = Module['print'] || console.log.bind(console);\nvar err = Module['printErr'] || console.warn.bind(console);\n\n// Merge back in the overrides\nObject.assign(Module, moduleOverrides);\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = null;\n\n// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\n\nif (Module['arguments']) arguments_ = Module['arguments'];\n\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];\n\nif (Module['quit']) quit_ = Module['quit'];\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n\n\n\n\nvar STACK_ALIGN = 16;\nvar POINTER_SIZE = 4;\n\nfunction getNativeTypeSize(type) {\n  switch (type) {\n    case 'i1': case 'i8': case 'u8': return 1;\n    case 'i16': case 'u16': return 2;\n    case 'i32': case 'u32': return 4;\n    case 'i64': case 'u64': return 8;\n    case 'float': return 4;\n    case 'double': return 8;\n    default: {\n      if (type[type.length - 1] === '*') {\n        return POINTER_SIZE;\n      }\n      if (type[0] === 'i') {\n        const bits = Number(type.substr(1));\n        assert(bits % 8 === 0, 'getNativeTypeSize invalid bits ' + bits + ', type ' + type);\n        return bits / 8;\n      }\n      return 0;\n    }\n  }\n}\n\n// include: runtime_debug.js\n\n\n// end include: runtime_debug.js\n\n\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\nvar wasmBinary;\nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\nvar noExitRuntime = Module['noExitRuntime'] || true;\n\nif (typeof WebAssembly != 'object') {\n  abort('no native wasm support detected');\n}\n\n// Wasm globals\n\nvar wasmMemory;\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS;\n\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    // This build was created without ASSERTIONS defined.  `assert()` should not\n    // ever be called in this configuration but in case there are callers in\n    // the wild leave this simple abort() implemenation here for now.\n    abort(text);\n  }\n}\n\n// include: runtime_strings.js\n\n\n// runtime_strings.js: String related runtime functions that are part of both\n// MINIMAL_RUNTIME and regular runtime.\n\nvar UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n\n/**\n * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n * array that contains uint8 values, returns a copy of that string as a\n * Javascript String object.\n * heapOrArray is either a regular array, or a JavaScript typed array view.\n * @param {number} idx\n * @param {number=} maxBytesToRead\n * @return {string}\n */\nfunction UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n  var endIdx = idx + maxBytesToRead;\n  var endPtr = idx;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on\n  // null terminator by itself.  Also, use the length info to avoid running tiny\n  // strings through TextDecoder, since .subarray() allocates garbage.\n  // (As a tiny code save trick, compare endPtr against endIdx using a negation,\n  // so that undefined means Infinity)\n  while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\n  if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n    return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n  }\n  var str = '';\n  // If building with TextDecoder, we have already computed the string length\n  // above, so test loop end condition against that\n  while (idx < endPtr) {\n    // For UTF8 byte structure, see:\n    // http://en.wikipedia.org/wiki/UTF-8#Description\n    // https://www.ietf.org/rfc/rfc2279.txt\n    // https://tools.ietf.org/html/rfc3629\n    var u0 = heapOrArray[idx++];\n    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n    var u1 = heapOrArray[idx++] & 63;\n    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n    var u2 = heapOrArray[idx++] & 63;\n    if ((u0 & 0xF0) == 0xE0) {\n      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n    } else {\n      u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\n    }\n\n    if (u0 < 0x10000) {\n      str += String.fromCharCode(u0);\n    } else {\n      var ch = u0 - 0x10000;\n      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n    }\n  }\n  return str;\n}\n\n/**\n * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n * emscripten HEAP, returns a copy of that string as a Javascript String object.\n *\n * @param {number} ptr\n * @param {number=} maxBytesToRead - An optional length that specifies the\n *   maximum number of bytes to read. You can omit this parameter to scan the\n *   string until the first \\0 byte. If maxBytesToRead is passed, and the string\n *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\n *   string will cut short at that byte index (i.e. maxBytesToRead will not\n *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\n *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\n *   JS JIT optimizations off, so it is worth to consider consistently using one\n * @return {string}\n */\nfunction UTF8ToString(ptr, maxBytesToRead) {\n  return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n}\n\n/**\n * Copies the given Javascript String object 'str' to the given byte array at\n * address 'outIdx', encoded in UTF8 form and null-terminated. The copy will\n * require at most str.length*4+1 bytes of space in the HEAP.  Use the function\n * lengthBytesUTF8 to compute the exact number of bytes (excluding null\n * terminator) that this function will write.\n *\n * @param {string} str - The Javascript string to copy.\n * @param {ArrayBufferView|Array<number>} heap - The array to copy to. Each\n *                                               index in this array is assumed\n *                                               to be one 8-byte element.\n * @param {number} outIdx - The starting offset in the array to begin the copying.\n * @param {number} maxBytesToWrite - The maximum number of bytes this function\n *                                   can write to the array.  This count should\n *                                   include the null terminator, i.e. if\n *                                   maxBytesToWrite=1, only the null terminator\n *                                   will be written and nothing else.\n *                                   maxBytesToWrite=0 does not write any bytes\n *                                   to the output, not even the null\n *                                   terminator.\n * @return {number} The number of bytes written, EXCLUDING the null terminator.\n */\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n  // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\n  // undefined and false each don't write out any bytes.\n  if (!(maxBytesToWrite > 0))\n    return 0;\n\n  var startIdx = outIdx;\n  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n    // unit, not a Unicode code point of the character! So decode\n    // UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\n    // and https://www.ietf.org/rfc/rfc2279.txt\n    // and https://tools.ietf.org/html/rfc3629\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) {\n      var u1 = str.charCodeAt(++i);\n      u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\n    }\n    if (u <= 0x7F) {\n      if (outIdx >= endIdx) break;\n      heap[outIdx++] = u;\n    } else if (u <= 0x7FF) {\n      if (outIdx + 1 >= endIdx) break;\n      heap[outIdx++] = 0xC0 | (u >> 6);\n      heap[outIdx++] = 0x80 | (u & 63);\n    } else if (u <= 0xFFFF) {\n      if (outIdx + 2 >= endIdx) break;\n      heap[outIdx++] = 0xE0 | (u >> 12);\n      heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n      heap[outIdx++] = 0x80 | (u & 63);\n    } else {\n      if (outIdx + 3 >= endIdx) break;\n      heap[outIdx++] = 0xF0 | (u >> 18);\n      heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n      heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n      heap[outIdx++] = 0x80 | (u & 63);\n    }\n  }\n  // Null-terminate the pointer to the buffer.\n  heap[outIdx] = 0;\n  return outIdx - startIdx;\n}\n\n/**\n * Copies the given Javascript String object 'str' to the emscripten HEAP at\n * address 'outPtr', null-terminated and encoded in UTF8 form. The copy will\n * require at most str.length*4+1 bytes of space in the HEAP.\n * Use the function lengthBytesUTF8 to compute the exact number of bytes\n * (excluding null terminator) that this function will write.\n *\n * @return {number} The number of bytes written, EXCLUDING the null terminator.\n */\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\n}\n\n/**\n * Returns the number of bytes the given Javascript string takes if encoded as a\n * UTF8 byte array, EXCLUDING the null terminator byte.\n *\n * @param {string} str - JavaScript string to operator on\n * @return {number} Length, in bytes, of the UTF8 encoded string.\n */\nfunction lengthBytesUTF8(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n    // unit, not a Unicode code point of the character! So decode\n    // UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var c = str.charCodeAt(i); // possibly a lead surrogate\n    if (c <= 0x7F) {\n      len++;\n    } else if (c <= 0x7FF) {\n      len += 2;\n    } else if (c >= 0xD800 && c <= 0xDFFF) {\n      len += 4; ++i;\n    } else {\n      len += 3;\n    }\n  }\n  return len;\n}\n\n// end include: runtime_strings.js\n// Memory management\n\nvar HEAP,\n/** @type {!ArrayBuffer} */\n  buffer,\n/** @type {!Int8Array} */\n  HEAP8,\n/** @type {!Uint8Array} */\n  HEAPU8,\n/** @type {!Int16Array} */\n  HEAP16,\n/** @type {!Uint16Array} */\n  HEAPU16,\n/** @type {!Int32Array} */\n  HEAP32,\n/** @type {!Uint32Array} */\n  HEAPU32,\n/** @type {!Float32Array} */\n  HEAPF32,\n/** @type {!Float64Array} */\n  HEAPF64;\n\nfunction updateGlobalBufferAndViews(buf) {\n  buffer = buf;\n  Module['HEAP8'] = HEAP8 = new Int8Array(buf);\n  Module['HEAP16'] = HEAP16 = new Int16Array(buf);\n  Module['HEAP32'] = HEAP32 = new Int32Array(buf);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buf);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buf);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buf);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(buf);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(buf);\n}\n\nvar STACK_SIZE = 65536;\n\nvar INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 52428800;\n\n// include: runtime_init_table.js\n// In regular non-RELOCATABLE mode the table is exported\n// from the wasm module and this will be assigned once\n// the exports are available.\nvar wasmTable;\n\n// end include: runtime_init_table.js\n// include: runtime_stack_check.js\n\n\n// end include: runtime_stack_check.js\n// include: runtime_assertions.js\n\n\n// end include: runtime_assertions.js\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\n\nfunction keepRuntimeAlive() {\n  return noExitRuntime;\n}\n\nfunction preRun() {\n\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n  runtimeInitialized = true;\n\n  \n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction postRun() {\n\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\n\nfunction addOnExit(cb) {\n}\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\n// include: runtime_math.js\n\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\n\n// end include: runtime_math.js\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\n\nfunction getUniqueRunDependency(id) {\n  return id;\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\n/** @param {string|number=} what */\nfunction abort(what) {\n  if (Module['onAbort']) {\n    Module['onAbort'](what);\n  }\n\n  what = 'Aborted(' + what + ')';\n  // TODO(sbc): Should we remove printing and leave it up to whoever\n  // catches the exception?\n  err(what);\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  what += '. Build with -sASSERTIONS for more info.';\n\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\n  // exception, which means we'd run destructors on it. We need the error to\n  // simply make the program stop.\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n  // a trap or not based on a hidden field within the object. So at the moment\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n  // allows this in the wasm spec.\n\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\n  // defintion for WebAssembly.RuntimeError claims it takes no arguments even\n  // though it can.\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n  /** @suppress {checkTypes} */\n  var e = new WebAssembly.RuntimeError(what);\n\n  readyPromiseReject(e);\n  // Throw the error whether or not MODULARIZE is set because abort is used\n  // in code paths apart from instantiation where an exception is expected\n  // to be thrown when abort is called.\n  throw e;\n}\n\n// {{MEM_INITIALIZER}}\n\n// include: memoryprofiler.js\n\n\n// end include: memoryprofiler.js\n// include: URIUtils.js\n\n\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n// Indicates whether filename is a base64 data URI.\nfunction isDataURI(filename) {\n  // Prefix of data URIs emitted by SINGLE_FILE and related options.\n  return filename.startsWith(dataURIPrefix);\n}\n\n// Indicates whether filename is delivered via file protocol (as opposed to http/https)\nfunction isFileURI(filename) {\n  return filename.startsWith('file://');\n}\n\n// end include: URIUtils.js\nvar wasmBinaryFile;\n  wasmBinaryFile = 'openjphjs.wasm';\n  if (!isDataURI(wasmBinaryFile)) {\n    wasmBinaryFile = locateFile(wasmBinaryFile);\n  }\n\nfunction getBinary(file) {\n  try {\n    if (file == wasmBinaryFile && wasmBinary) {\n      return new Uint8Array(wasmBinary);\n    }\n    if (readBinary) {\n      return readBinary(file);\n    }\n    throw \"both async and sync fetching of the wasm failed\";\n  }\n  catch (err) {\n    abort(err);\n  }\n}\n\nfunction getBinaryPromise() {\n  // If we don't have the binary yet, try to to load it asynchronously.\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\n  // Cordova or Electron apps are typically loaded from a file:// url.\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n    if (typeof fetch == 'function'\n      && !isFileURI(wasmBinaryFile)\n    ) {\n      return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function(response) {\n        if (!response['ok']) {\n          throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n        }\n        return response['arrayBuffer']();\n      }).catch(function () {\n          return getBinary(wasmBinaryFile);\n      });\n    }\n    else {\n      if (readAsync) {\n        // fetch is not available or url is file => try XHR (readAsync uses XHR internally)\n        return new Promise(function(resolve, reject) {\n          readAsync(wasmBinaryFile, function(response) { resolve(new Uint8Array(/** @type{!ArrayBuffer} */(response))) }, reject)\n        });\n      }\n    }\n  }\n\n  // Otherwise, getBinary should be able to get it synchronously\n  return Promise.resolve().then(function() { return getBinary(wasmBinaryFile); });\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm() {\n  // prepare imports\n  var info = {\n    'env': asmLibraryArg,\n    'wasi_snapshot_preview1': asmLibraryArg,\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  /** @param {WebAssembly.Module=} module*/\n  function receiveInstance(instance, module) {\n    var exports = instance.exports;\n\n    Module['asm'] = exports;\n\n    wasmMemory = Module['asm']['memory'];\n    updateGlobalBufferAndViews(wasmMemory.buffer);\n\n    wasmTable = Module['asm']['__indirect_function_table'];\n\n    addOnInit(Module['asm']['__wasm_call_ctors']);\n\n    removeRunDependency('wasm-instantiate');\n\n  }\n  // we can't run yet (except in a pthread, where we have a custom sync instantiator)\n  addRunDependency('wasm-instantiate');\n\n  // Prefer streaming instantiation if available.\n  function receiveInstantiationResult(result) {\n    // 'result' is a ResultObject object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n    // When the regression is fixed, can restore the above USE_PTHREADS-enabled path.\n    receiveInstance(result['instance']);\n  }\n\n  function instantiateArrayBuffer(receiver) {\n    return getBinaryPromise().then(function(binary) {\n      return WebAssembly.instantiate(binary, info);\n    }).then(function (instance) {\n      return instance;\n    }).then(receiver, function(reason) {\n      err('failed to asynchronously prepare wasm: ' + reason);\n\n      abort(reason);\n    });\n  }\n\n  function instantiateAsync() {\n    if (!wasmBinary &&\n        typeof WebAssembly.instantiateStreaming == 'function' &&\n        !isDataURI(wasmBinaryFile) &&\n        // Don't use streaming for file:// delivered objects in a webview, fetch them synchronously.\n        !isFileURI(wasmBinaryFile) &&\n        // Avoid instantiateStreaming() on Node.js environment for now, as while\n        // Node.js v18.1.0 implements it, it does not have a full fetch()\n        // implementation yet.\n        //\n        // Reference:\n        //   https://github.com/emscripten-core/emscripten/pull/16917\n        !ENVIRONMENT_IS_NODE &&\n        typeof fetch == 'function') {\n      return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function(response) {\n        // Suppress closure warning here since the upstream definition for\n        // instantiateStreaming only allows Promise<Repsponse> rather than\n        // an actual Response.\n        // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\n        /** @suppress {checkTypes} */\n        var result = WebAssembly.instantiateStreaming(response, info);\n\n        return result.then(\n          receiveInstantiationResult,\n          function(reason) {\n            // We expect the most common failure cause to be a bad MIME type for the binary,\n            // in which case falling back to ArrayBuffer instantiation should work.\n            err('wasm streaming compile failed: ' + reason);\n            err('falling back to ArrayBuffer instantiation');\n            return instantiateArrayBuffer(receiveInstantiationResult);\n          });\n      });\n    } else {\n      return instantiateArrayBuffer(receiveInstantiationResult);\n    }\n  }\n\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to run the instantiation parallel\n  // to any other async startup actions they are performing.\n  // Also pthreads and wasm workers initialize the wasm instance through this path.\n  if (Module['instantiateWasm']) {\n    try {\n      var exports = Module['instantiateWasm'](info, receiveInstance);\n      return exports;\n    } catch(e) {\n      err('Module.instantiateWasm callback failed with error: ' + e);\n        // If instantiation fails, reject the module ready promise.\n        readyPromiseReject(e);\n    }\n  }\n\n  // If instantiation fails, reject the module ready promise.\n  instantiateAsync().catch(readyPromiseReject);\n  return {}; // no exports yet; we'll fill them in later\n}\n\n// Globals used by JS i64 conversions (see makeSetValue)\nvar tempDouble;\nvar tempI64;\n\n// === Body ===\n\nvar ASM_CONSTS = {\n  \n};\n\n\n\n\n\n  /** @constructor */\n  function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = 'Program terminated with exit(' + status + ')';\n      this.status = status;\n    }\n\n  function callRuntimeCallbacks(callbacks) {\n      while (callbacks.length > 0) {\n        // Pass the module as the first argument.\n        callbacks.shift()(Module);\n      }\n    }\n\n  \n    /**\n     * @param {number} ptr\n     * @param {string} type\n     */\n  function getValue(ptr, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1': return HEAP8[((ptr)>>0)];\n        case 'i8': return HEAP8[((ptr)>>0)];\n        case 'i16': return HEAP16[((ptr)>>1)];\n        case 'i32': return HEAP32[((ptr)>>2)];\n        case 'i64': return HEAP32[((ptr)>>2)];\n        case 'float': return HEAPF32[((ptr)>>2)];\n        case 'double': return HEAPF64[((ptr)>>3)];\n        case '*': return HEAPU32[((ptr)>>2)];\n        default: abort('invalid type for getValue: ' + type);\n      }\n      return null;\n    }\n\n  \n    /**\n     * @param {number} ptr\n     * @param {number} value\n     * @param {string} type\n     */\n  function setValue(ptr, value, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1': HEAP8[((ptr)>>0)] = value; break;\n        case 'i8': HEAP8[((ptr)>>0)] = value; break;\n        case 'i16': HEAP16[((ptr)>>1)] = value; break;\n        case 'i32': HEAP32[((ptr)>>2)] = value; break;\n        case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)] = tempI64[0],HEAP32[(((ptr)+(4))>>2)] = tempI64[1]); break;\n        case 'float': HEAPF32[((ptr)>>2)] = value; break;\n        case 'double': HEAPF64[((ptr)>>3)] = value; break;\n        case '*': HEAPU32[((ptr)>>2)] = value; break;\n        default: abort('invalid type for setValue: ' + type);\n      }\n    }\n\n  function ___assert_fail(condition, filename, line, func) {\n      abort('Assertion failed: ' + UTF8ToString(condition) + ', at: ' + [filename ? UTF8ToString(filename) : 'unknown filename', line, func ? UTF8ToString(func) : 'unknown function']);\n    }\n\n  var exceptionCaught =  [];\n  \n  function exception_addRef(info) {\n      info.add_ref();\n    }\n  \n  var uncaughtExceptionCount = 0;\n  function ___cxa_begin_catch(ptr) {\n      var info = new ExceptionInfo(ptr);\n      if (!info.get_caught()) {\n        info.set_caught(true);\n        uncaughtExceptionCount--;\n      }\n      info.set_rethrown(false);\n      exceptionCaught.push(info);\n      exception_addRef(info);\n      return info.get_exception_ptr();\n    }\n\n  var exceptionLast = 0;\n  \n  var wasmTableMirror = [];\n  function getWasmTableEntry(funcPtr) {\n      var func = wasmTableMirror[funcPtr];\n      if (!func) {\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n      }\n      return func;\n    }\n  function exception_decRef(info) {\n      // A rethrown exception can reach refcount 0; it must not be discarded\n      // Its next handler will clear the rethrown flag and addRef it, prior to\n      // final decRef and destruction here\n      if (info.release_ref() && !info.get_rethrown()) {\n        var destructor = info.get_destructor();\n        if (destructor) {\n          // In Wasm, destructors return 'this' as in ARM\n          getWasmTableEntry(destructor)(info.excPtr);\n        }\n        ___cxa_free_exception(info.excPtr);\n      }\n    }\n  function ___cxa_end_catch() {\n      // Clear state flag.\n      _setThrew(0);\n      // Call destructor if one is registered then clear it.\n      var info = exceptionCaught.pop();\n  \n      exception_decRef(info);\n      exceptionLast = 0; // XXX in decRef?\n    }\n\n  /** @constructor */\n  function ExceptionInfo(excPtr) {\n      this.excPtr = excPtr;\n      this.ptr = excPtr - 24;\n  \n      this.set_type = function(type) {\n        HEAPU32[(((this.ptr)+(4))>>2)] = type;\n      };\n  \n      this.get_type = function() {\n        return HEAPU32[(((this.ptr)+(4))>>2)];\n      };\n  \n      this.set_destructor = function(destructor) {\n        HEAPU32[(((this.ptr)+(8))>>2)] = destructor;\n      };\n  \n      this.get_destructor = function() {\n        return HEAPU32[(((this.ptr)+(8))>>2)];\n      };\n  \n      this.set_refcount = function(refcount) {\n        HEAP32[((this.ptr)>>2)] = refcount;\n      };\n  \n      this.set_caught = function (caught) {\n        caught = caught ? 1 : 0;\n        HEAP8[(((this.ptr)+(12))>>0)] = caught;\n      };\n  \n      this.get_caught = function () {\n        return HEAP8[(((this.ptr)+(12))>>0)] != 0;\n      };\n  \n      this.set_rethrown = function (rethrown) {\n        rethrown = rethrown ? 1 : 0;\n        HEAP8[(((this.ptr)+(13))>>0)] = rethrown;\n      };\n  \n      this.get_rethrown = function () {\n        return HEAP8[(((this.ptr)+(13))>>0)] != 0;\n      };\n  \n      // Initialize native structure fields. Should be called once after allocated.\n      this.init = function(type, destructor) {\n        this.set_adjusted_ptr(0);\n        this.set_type(type);\n        this.set_destructor(destructor);\n        this.set_refcount(0);\n        this.set_caught(false);\n        this.set_rethrown(false);\n      }\n  \n      this.add_ref = function() {\n        var value = HEAP32[((this.ptr)>>2)];\n        HEAP32[((this.ptr)>>2)] = value + 1;\n      };\n  \n      // Returns true if last reference released.\n      this.release_ref = function() {\n        var prev = HEAP32[((this.ptr)>>2)];\n        HEAP32[((this.ptr)>>2)] = prev - 1;\n        return prev === 1;\n      };\n  \n      this.set_adjusted_ptr = function(adjustedPtr) {\n        HEAPU32[(((this.ptr)+(16))>>2)] = adjustedPtr;\n      };\n  \n      this.get_adjusted_ptr = function() {\n        return HEAPU32[(((this.ptr)+(16))>>2)];\n      };\n  \n      // Get pointer which is expected to be received by catch clause in C++ code. It may be adjusted\n      // when the pointer is casted to some of the exception object base classes (e.g. when virtual\n      // inheritance is used). When a pointer is thrown this method should return the thrown pointer\n      // itself.\n      this.get_exception_ptr = function() {\n        // Work around a fastcomp bug, this code is still included for some reason in a build without\n        // exceptions support.\n        var isPointer = ___cxa_is_pointer_type(this.get_type());\n        if (isPointer) {\n          return HEAPU32[((this.excPtr)>>2)];\n        }\n        var adjusted = this.get_adjusted_ptr();\n        if (adjusted !== 0) return adjusted;\n        return this.excPtr;\n      };\n    }\n  \n  function ___resumeException(ptr) {\n      if (!exceptionLast) { exceptionLast = ptr; }\n      throw ptr;\n    }\n  function ___cxa_find_matching_catch_2() {\n      var thrown = exceptionLast;\n      if (!thrown) {\n        // just pass through the null ptr\n        setTempRet0(0);\n        return 0;\n      }\n      var info = new ExceptionInfo(thrown);\n      info.set_adjusted_ptr(thrown);\n      var thrownType = info.get_type();\n      if (!thrownType) {\n        // just pass through the thrown ptr\n        setTempRet0(0);\n        return thrown;\n      }\n  \n      // can_catch receives a **, add indirection\n      // The different catch blocks are denoted by different types.\n      // Due to inheritance, those types may not precisely match the\n      // type of the thrown object. Find one which matches, and\n      // return the type of the catch block which should be called.\n      for (var i = 0; i < arguments.length; i++) {\n        var caughtType = arguments[i];\n        if (caughtType === 0 || caughtType === thrownType) {\n          // Catch all clause matched or exactly the same type is caught\n          break;\n        }\n        var adjusted_ptr_addr = info.ptr + 16;\n        if (___cxa_can_catch(caughtType, thrownType, adjusted_ptr_addr)) {\n          setTempRet0(caughtType);\n          return thrown;\n        }\n      }\n      setTempRet0(thrownType);\n      return thrown;\n    }\n\n  function ___cxa_find_matching_catch_3() {\n      var thrown = exceptionLast;\n      if (!thrown) {\n        // just pass through the null ptr\n        setTempRet0(0);\n        return 0;\n      }\n      var info = new ExceptionInfo(thrown);\n      info.set_adjusted_ptr(thrown);\n      var thrownType = info.get_type();\n      if (!thrownType) {\n        // just pass through the thrown ptr\n        setTempRet0(0);\n        return thrown;\n      }\n  \n      // can_catch receives a **, add indirection\n      // The different catch blocks are denoted by different types.\n      // Due to inheritance, those types may not precisely match the\n      // type of the thrown object. Find one which matches, and\n      // return the type of the catch block which should be called.\n      for (var i = 0; i < arguments.length; i++) {\n        var caughtType = arguments[i];\n        if (caughtType === 0 || caughtType === thrownType) {\n          // Catch all clause matched or exactly the same type is caught\n          break;\n        }\n        var adjusted_ptr_addr = info.ptr + 16;\n        if (___cxa_can_catch(caughtType, thrownType, adjusted_ptr_addr)) {\n          setTempRet0(caughtType);\n          return thrown;\n        }\n      }\n      setTempRet0(thrownType);\n      return thrown;\n    }\n\n  function ___cxa_throw(ptr, type, destructor) {\n      var info = new ExceptionInfo(ptr);\n      // Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.\n      info.init(type, destructor);\n      exceptionLast = ptr;\n      uncaughtExceptionCount++;\n      throw ptr;\n    }\n\n\n  var structRegistrations = {};\n  \n  function runDestructors(destructors) {\n      while (destructors.length) {\n        var ptr = destructors.pop();\n        var del = destructors.pop();\n        del(ptr);\n      }\n    }\n  \n  function simpleReadValueFromPointer(pointer) {\n      return this['fromWireType'](HEAP32[((pointer)>>2)]);\n    }\n  \n  var awaitingDependencies = {};\n  \n  var registeredTypes = {};\n  \n  var typeDependencies = {};\n  \n  var char_0 = 48;\n  \n  var char_9 = 57;\n  function makeLegalFunctionName(name) {\n      if (undefined === name) {\n        return '_unknown';\n      }\n      name = name.replace(/[^a-zA-Z0-9_]/g, '$');\n      var f = name.charCodeAt(0);\n      if (f >= char_0 && f <= char_9) {\n        return '_' + name;\n      }\n      return name;\n    }\n  function createNamedFunction(name, body) {\n      name = makeLegalFunctionName(name);\n      /*jshint evil:true*/\n      return new Function(\n          \"body\",\n          \"return function \" + name + \"() {\\n\" +\n          \"    \\\"use strict\\\";\" +\n          \"    return body.apply(this, arguments);\\n\" +\n          \"};\\n\"\n      )(body);\n    }\n  function extendError(baseErrorType, errorName) {\n      var errorClass = createNamedFunction(errorName, function(message) {\n        this.name = errorName;\n        this.message = message;\n  \n        var stack = (new Error(message)).stack;\n        if (stack !== undefined) {\n          this.stack = this.toString() + '\\n' +\n              stack.replace(/^Error(:[^\\n]*)?\\n/, '');\n        }\n      });\n      errorClass.prototype = Object.create(baseErrorType.prototype);\n      errorClass.prototype.constructor = errorClass;\n      errorClass.prototype.toString = function() {\n        if (this.message === undefined) {\n          return this.name;\n        } else {\n          return this.name + ': ' + this.message;\n        }\n      };\n  \n      return errorClass;\n    }\n  var InternalError = undefined;\n  function throwInternalError(message) {\n      throw new InternalError(message);\n    }\n  function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n      myTypes.forEach(function(type) {\n          typeDependencies[type] = dependentTypes;\n      });\n  \n      function onComplete(typeConverters) {\n          var myTypeConverters = getTypeConverters(typeConverters);\n          if (myTypeConverters.length !== myTypes.length) {\n              throwInternalError('Mismatched type converter count');\n          }\n          for (var i = 0; i < myTypes.length; ++i) {\n              registerType(myTypes[i], myTypeConverters[i]);\n          }\n      }\n  \n      var typeConverters = new Array(dependentTypes.length);\n      var unregisteredTypes = [];\n      var registered = 0;\n      dependentTypes.forEach((dt, i) => {\n        if (registeredTypes.hasOwnProperty(dt)) {\n          typeConverters[i] = registeredTypes[dt];\n        } else {\n          unregisteredTypes.push(dt);\n          if (!awaitingDependencies.hasOwnProperty(dt)) {\n            awaitingDependencies[dt] = [];\n          }\n          awaitingDependencies[dt].push(() => {\n            typeConverters[i] = registeredTypes[dt];\n            ++registered;\n            if (registered === unregisteredTypes.length) {\n              onComplete(typeConverters);\n            }\n          });\n        }\n      });\n      if (0 === unregisteredTypes.length) {\n        onComplete(typeConverters);\n      }\n    }\n  function __embind_finalize_value_object(structType) {\n      var reg = structRegistrations[structType];\n      delete structRegistrations[structType];\n  \n      var rawConstructor = reg.rawConstructor;\n      var rawDestructor = reg.rawDestructor;\n      var fieldRecords = reg.fields;\n      var fieldTypes = fieldRecords.map((field) => field.getterReturnType).\n                concat(fieldRecords.map((field) => field.setterArgumentType));\n      whenDependentTypesAreResolved([structType], fieldTypes, (fieldTypes) => {\n        var fields = {};\n        fieldRecords.forEach((field, i) => {\n          var fieldName = field.fieldName;\n          var getterReturnType = fieldTypes[i];\n          var getter = field.getter;\n          var getterContext = field.getterContext;\n          var setterArgumentType = fieldTypes[i + fieldRecords.length];\n          var setter = field.setter;\n          var setterContext = field.setterContext;\n          fields[fieldName] = {\n            read: (ptr) => {\n              return getterReturnType['fromWireType'](\n                  getter(getterContext, ptr));\n            },\n            write: (ptr, o) => {\n              var destructors = [];\n              setter(setterContext, ptr, setterArgumentType['toWireType'](destructors, o));\n              runDestructors(destructors);\n            }\n          };\n        });\n  \n        return [{\n          name: reg.name,\n          'fromWireType': function(ptr) {\n            var rv = {};\n            for (var i in fields) {\n              rv[i] = fields[i].read(ptr);\n            }\n            rawDestructor(ptr);\n            return rv;\n          },\n          'toWireType': function(destructors, o) {\n            // todo: Here we have an opportunity for -O3 level \"unsafe\" optimizations:\n            // assume all fields are present without checking.\n            for (var fieldName in fields) {\n              if (!(fieldName in o)) {\n                throw new TypeError('Missing field:  \"' + fieldName + '\"');\n              }\n            }\n            var ptr = rawConstructor();\n            for (fieldName in fields) {\n              fields[fieldName].write(ptr, o[fieldName]);\n            }\n            if (destructors !== null) {\n              destructors.push(rawDestructor, ptr);\n            }\n            return ptr;\n          },\n          'argPackAdvance': 8,\n          'readValueFromPointer': simpleReadValueFromPointer,\n          destructorFunction: rawDestructor,\n        }];\n      });\n    }\n\n  function __embind_register_bigint(primitiveType, name, size, minRange, maxRange) {}\n\n  function getShiftFromSize(size) {\n      switch (size) {\n          case 1: return 0;\n          case 2: return 1;\n          case 4: return 2;\n          case 8: return 3;\n          default:\n              throw new TypeError('Unknown type size: ' + size);\n      }\n    }\n  \n  function embind_init_charCodes() {\n      var codes = new Array(256);\n      for (var i = 0; i < 256; ++i) {\n          codes[i] = String.fromCharCode(i);\n      }\n      embind_charCodes = codes;\n    }\n  var embind_charCodes = undefined;\n  function readLatin1String(ptr) {\n      var ret = \"\";\n      var c = ptr;\n      while (HEAPU8[c]) {\n          ret += embind_charCodes[HEAPU8[c++]];\n      }\n      return ret;\n    }\n  \n  var BindingError = undefined;\n  function throwBindingError(message) {\n      throw new BindingError(message);\n    }\n  /** @param {Object=} options */\n  function registerType(rawType, registeredInstance, options = {}) {\n      if (!('argPackAdvance' in registeredInstance)) {\n          throw new TypeError('registerType registeredInstance requires argPackAdvance');\n      }\n  \n      var name = registeredInstance.name;\n      if (!rawType) {\n          throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\n      }\n      if (registeredTypes.hasOwnProperty(rawType)) {\n          if (options.ignoreDuplicateRegistrations) {\n              return;\n          } else {\n              throwBindingError(\"Cannot register type '\" + name + \"' twice\");\n          }\n      }\n  \n      registeredTypes[rawType] = registeredInstance;\n      delete typeDependencies[rawType];\n  \n      if (awaitingDependencies.hasOwnProperty(rawType)) {\n        var callbacks = awaitingDependencies[rawType];\n        delete awaitingDependencies[rawType];\n        callbacks.forEach((cb) => cb());\n      }\n    }\n  function __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n      var shift = getShiftFromSize(size);\n  \n      name = readLatin1String(name);\n      registerType(rawType, {\n          name: name,\n          'fromWireType': function(wt) {\n              // ambiguous emscripten ABI: sometimes return values are\n              // true or false, and sometimes integers (0 or 1)\n              return !!wt;\n          },\n          'toWireType': function(destructors, o) {\n              return o ? trueValue : falseValue;\n          },\n          'argPackAdvance': 8,\n          'readValueFromPointer': function(pointer) {\n              // TODO: if heap is fixed (like in asm.js) this could be executed outside\n              var heap;\n              if (size === 1) {\n                  heap = HEAP8;\n              } else if (size === 2) {\n                  heap = HEAP16;\n              } else if (size === 4) {\n                  heap = HEAP32;\n              } else {\n                  throw new TypeError(\"Unknown boolean type size: \" + name);\n              }\n              return this['fromWireType'](heap[pointer >> shift]);\n          },\n          destructorFunction: null, // This type does not need a destructor\n      });\n    }\n\n  function ClassHandle_isAliasOf(other) {\n      if (!(this instanceof ClassHandle)) {\n        return false;\n      }\n      if (!(other instanceof ClassHandle)) {\n        return false;\n      }\n  \n      var leftClass = this.$$.ptrType.registeredClass;\n      var left = this.$$.ptr;\n      var rightClass = other.$$.ptrType.registeredClass;\n      var right = other.$$.ptr;\n  \n      while (leftClass.baseClass) {\n        left = leftClass.upcast(left);\n        leftClass = leftClass.baseClass;\n      }\n  \n      while (rightClass.baseClass) {\n        right = rightClass.upcast(right);\n        rightClass = rightClass.baseClass;\n      }\n  \n      return leftClass === rightClass && left === right;\n    }\n  \n  function shallowCopyInternalPointer(o) {\n      return {\n        count: o.count,\n        deleteScheduled: o.deleteScheduled,\n        preservePointerOnDelete: o.preservePointerOnDelete,\n        ptr: o.ptr,\n        ptrType: o.ptrType,\n        smartPtr: o.smartPtr,\n        smartPtrType: o.smartPtrType,\n      };\n    }\n  \n  function throwInstanceAlreadyDeleted(obj) {\n      function getInstanceTypeName(handle) {\n        return handle.$$.ptrType.registeredClass.name;\n      }\n      throwBindingError(getInstanceTypeName(obj) + ' instance already deleted');\n    }\n  \n  var finalizationRegistry = false;\n  \n  function detachFinalizer(handle) {}\n  \n  function runDestructor($$) {\n      if ($$.smartPtr) {\n        $$.smartPtrType.rawDestructor($$.smartPtr);\n      } else {\n        $$.ptrType.registeredClass.rawDestructor($$.ptr);\n      }\n    }\n  function releaseClassHandle($$) {\n      $$.count.value -= 1;\n      var toDelete = 0 === $$.count.value;\n      if (toDelete) {\n        runDestructor($$);\n      }\n    }\n  \n  function downcastPointer(ptr, ptrClass, desiredClass) {\n      if (ptrClass === desiredClass) {\n        return ptr;\n      }\n      if (undefined === desiredClass.baseClass) {\n        return null; // no conversion\n      }\n  \n      var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n      if (rv === null) {\n        return null;\n      }\n      return desiredClass.downcast(rv);\n    }\n  \n  var registeredPointers = {};\n  \n  function getInheritedInstanceCount() {\n      return Object.keys(registeredInstances).length;\n    }\n  \n  function getLiveInheritedInstances() {\n      var rv = [];\n      for (var k in registeredInstances) {\n        if (registeredInstances.hasOwnProperty(k)) {\n          rv.push(registeredInstances[k]);\n        }\n      }\n      return rv;\n    }\n  \n  var deletionQueue = [];\n  function flushPendingDeletes() {\n      while (deletionQueue.length) {\n        var obj = deletionQueue.pop();\n        obj.$$.deleteScheduled = false;\n        obj['delete']();\n      }\n    }\n  \n  var delayFunction = undefined;\n  function setDelayFunction(fn) {\n      delayFunction = fn;\n      if (deletionQueue.length && delayFunction) {\n        delayFunction(flushPendingDeletes);\n      }\n    }\n  function init_embind() {\n      Module['getInheritedInstanceCount'] = getInheritedInstanceCount;\n      Module['getLiveInheritedInstances'] = getLiveInheritedInstances;\n      Module['flushPendingDeletes'] = flushPendingDeletes;\n      Module['setDelayFunction'] = setDelayFunction;\n    }\n  var registeredInstances = {};\n  \n  function getBasestPointer(class_, ptr) {\n      if (ptr === undefined) {\n          throwBindingError('ptr should not be undefined');\n      }\n      while (class_.baseClass) {\n          ptr = class_.upcast(ptr);\n          class_ = class_.baseClass;\n      }\n      return ptr;\n    }\n  function getInheritedInstance(class_, ptr) {\n      ptr = getBasestPointer(class_, ptr);\n      return registeredInstances[ptr];\n    }\n  \n  function makeClassHandle(prototype, record) {\n      if (!record.ptrType || !record.ptr) {\n        throwInternalError('makeClassHandle requires ptr and ptrType');\n      }\n      var hasSmartPtrType = !!record.smartPtrType;\n      var hasSmartPtr = !!record.smartPtr;\n      if (hasSmartPtrType !== hasSmartPtr) {\n        throwInternalError('Both smartPtrType and smartPtr must be specified');\n      }\n      record.count = { value: 1 };\n      return attachFinalizer(Object.create(prototype, {\n        $$: {\n            value: record,\n        },\n      }));\n    }\n  function RegisteredPointer_fromWireType(ptr) {\n      // ptr is a raw pointer (or a raw smartpointer)\n  \n      // rawPointer is a maybe-null raw pointer\n      var rawPointer = this.getPointee(ptr);\n      if (!rawPointer) {\n        this.destructor(ptr);\n        return null;\n      }\n  \n      var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n      if (undefined !== registeredInstance) {\n        // JS object has been neutered, time to repopulate it\n        if (0 === registeredInstance.$$.count.value) {\n          registeredInstance.$$.ptr = rawPointer;\n          registeredInstance.$$.smartPtr = ptr;\n          return registeredInstance['clone']();\n        } else {\n          // else, just increment reference count on existing object\n          // it already has a reference to the smart pointer\n          var rv = registeredInstance['clone']();\n          this.destructor(ptr);\n          return rv;\n        }\n      }\n  \n      function makeDefaultHandle() {\n        if (this.isSmartPointer) {\n          return makeClassHandle(this.registeredClass.instancePrototype, {\n            ptrType: this.pointeeType,\n            ptr: rawPointer,\n            smartPtrType: this,\n            smartPtr: ptr,\n          });\n        } else {\n          return makeClassHandle(this.registeredClass.instancePrototype, {\n            ptrType: this,\n            ptr: ptr,\n          });\n        }\n      }\n  \n      var actualType = this.registeredClass.getActualType(rawPointer);\n      var registeredPointerRecord = registeredPointers[actualType];\n      if (!registeredPointerRecord) {\n        return makeDefaultHandle.call(this);\n      }\n  \n      var toType;\n      if (this.isConst) {\n        toType = registeredPointerRecord.constPointerType;\n      } else {\n        toType = registeredPointerRecord.pointerType;\n      }\n      var dp = downcastPointer(\n          rawPointer,\n          this.registeredClass,\n          toType.registeredClass);\n      if (dp === null) {\n        return makeDefaultHandle.call(this);\n      }\n      if (this.isSmartPointer) {\n        return makeClassHandle(toType.registeredClass.instancePrototype, {\n          ptrType: toType,\n          ptr: dp,\n          smartPtrType: this,\n          smartPtr: ptr,\n        });\n      } else {\n        return makeClassHandle(toType.registeredClass.instancePrototype, {\n          ptrType: toType,\n          ptr: dp,\n        });\n      }\n    }\n  function attachFinalizer(handle) {\n      if ('undefined' === typeof FinalizationRegistry) {\n        attachFinalizer = (handle) => handle;\n        return handle;\n      }\n      // If the running environment has a FinalizationRegistry (see\n      // https://github.com/tc39/proposal-weakrefs), then attach finalizers\n      // for class handles.  We check for the presence of FinalizationRegistry\n      // at run-time, not build-time.\n      finalizationRegistry = new FinalizationRegistry((info) => {\n        releaseClassHandle(info.$$);\n      });\n      attachFinalizer = (handle) => {\n        var $$ = handle.$$;\n        var hasSmartPtr = !!$$.smartPtr;\n        if (hasSmartPtr) {\n          // We should not call the destructor on raw pointers in case other code expects the pointee to live\n          var info = { $$: $$ };\n          finalizationRegistry.register(handle, info, handle);\n        }\n        return handle;\n      };\n      detachFinalizer = (handle) => finalizationRegistry.unregister(handle);\n      return attachFinalizer(handle);\n    }\n  function ClassHandle_clone() {\n      if (!this.$$.ptr) {\n        throwInstanceAlreadyDeleted(this);\n      }\n  \n      if (this.$$.preservePointerOnDelete) {\n        this.$$.count.value += 1;\n        return this;\n      } else {\n        var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {\n          $$: {\n            value: shallowCopyInternalPointer(this.$$),\n          }\n        }));\n  \n        clone.$$.count.value += 1;\n        clone.$$.deleteScheduled = false;\n        return clone;\n      }\n    }\n  \n  function ClassHandle_delete() {\n      if (!this.$$.ptr) {\n        throwInstanceAlreadyDeleted(this);\n      }\n  \n      if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n        throwBindingError('Object already scheduled for deletion');\n      }\n  \n      detachFinalizer(this);\n      releaseClassHandle(this.$$);\n  \n      if (!this.$$.preservePointerOnDelete) {\n        this.$$.smartPtr = undefined;\n        this.$$.ptr = undefined;\n      }\n    }\n  \n  function ClassHandle_isDeleted() {\n      return !this.$$.ptr;\n    }\n  \n  function ClassHandle_deleteLater() {\n      if (!this.$$.ptr) {\n        throwInstanceAlreadyDeleted(this);\n      }\n      if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n        throwBindingError('Object already scheduled for deletion');\n      }\n      deletionQueue.push(this);\n      if (deletionQueue.length === 1 && delayFunction) {\n        delayFunction(flushPendingDeletes);\n      }\n      this.$$.deleteScheduled = true;\n      return this;\n    }\n  function init_ClassHandle() {\n      ClassHandle.prototype['isAliasOf'] = ClassHandle_isAliasOf;\n      ClassHandle.prototype['clone'] = ClassHandle_clone;\n      ClassHandle.prototype['delete'] = ClassHandle_delete;\n      ClassHandle.prototype['isDeleted'] = ClassHandle_isDeleted;\n      ClassHandle.prototype['deleteLater'] = ClassHandle_deleteLater;\n    }\n  function ClassHandle() {\n    }\n  \n  function ensureOverloadTable(proto, methodName, humanName) {\n      if (undefined === proto[methodName].overloadTable) {\n        var prevFunc = proto[methodName];\n        // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.\n        proto[methodName] = function() {\n          // TODO This check can be removed in -O3 level \"unsafe\" optimizations.\n          if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n              throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n          }\n          return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n        };\n        // Move the previous function into the overload table.\n        proto[methodName].overloadTable = [];\n        proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n      }\n    }\n  /** @param {number=} numArguments */\n  function exposePublicSymbol(name, value, numArguments) {\n      if (Module.hasOwnProperty(name)) {\n        if (undefined === numArguments || (undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments])) {\n          throwBindingError(\"Cannot register public name '\" + name + \"' twice\");\n        }\n  \n        // We are exposing a function with the same name as an existing function. Create an overload table and a function selector\n        // that routes between the two.\n        ensureOverloadTable(Module, name, name);\n        if (Module.hasOwnProperty(numArguments)) {\n            throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n        }\n        // Add the new function into the overload table.\n        Module[name].overloadTable[numArguments] = value;\n      }\n      else {\n        Module[name] = value;\n        if (undefined !== numArguments) {\n          Module[name].numArguments = numArguments;\n        }\n      }\n    }\n  \n  /** @constructor */\n  function RegisteredClass(name,\n                               constructor,\n                               instancePrototype,\n                               rawDestructor,\n                               baseClass,\n                               getActualType,\n                               upcast,\n                               downcast) {\n      this.name = name;\n      this.constructor = constructor;\n      this.instancePrototype = instancePrototype;\n      this.rawDestructor = rawDestructor;\n      this.baseClass = baseClass;\n      this.getActualType = getActualType;\n      this.upcast = upcast;\n      this.downcast = downcast;\n      this.pureVirtualFunctions = [];\n    }\n  \n  function upcastPointer(ptr, ptrClass, desiredClass) {\n      while (ptrClass !== desiredClass) {\n        if (!ptrClass.upcast) {\n          throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\n        }\n        ptr = ptrClass.upcast(ptr);\n        ptrClass = ptrClass.baseClass;\n      }\n      return ptr;\n    }\n  function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError('null is not a valid ' + this.name);\n        }\n        return 0;\n      }\n  \n      if (!handle.$$) {\n        throwBindingError('Cannot pass \"' + embindRepr(handle) + '\" as a ' + this.name);\n      }\n      if (!handle.$$.ptr) {\n        throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);\n      }\n      var handleClass = handle.$$.ptrType.registeredClass;\n      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n      return ptr;\n    }\n  \n  function genericPointerToWireType(destructors, handle) {\n      var ptr;\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError('null is not a valid ' + this.name);\n        }\n  \n        if (this.isSmartPointer) {\n          ptr = this.rawConstructor();\n          if (destructors !== null) {\n            destructors.push(this.rawDestructor, ptr);\n          }\n          return ptr;\n        } else {\n          return 0;\n        }\n      }\n  \n      if (!handle.$$) {\n        throwBindingError('Cannot pass \"' + embindRepr(handle) + '\" as a ' + this.name);\n      }\n      if (!handle.$$.ptr) {\n        throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);\n      }\n      if (!this.isConst && handle.$$.ptrType.isConst) {\n        throwBindingError('Cannot convert argument of type ' + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + ' to parameter type ' + this.name);\n      }\n      var handleClass = handle.$$.ptrType.registeredClass;\n      ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n  \n      if (this.isSmartPointer) {\n        // TODO: this is not strictly true\n        // We could support BY_EMVAL conversions from raw pointers to smart pointers\n        // because the smart pointer can hold a reference to the handle\n        if (undefined === handle.$$.smartPtr) {\n          throwBindingError('Passing raw pointer to smart pointer is illegal');\n        }\n  \n        switch (this.sharingPolicy) {\n          case 0: // NONE\n            // no upcasting\n            if (handle.$$.smartPtrType === this) {\n              ptr = handle.$$.smartPtr;\n            } else {\n              throwBindingError('Cannot convert argument of type ' + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + ' to parameter type ' + this.name);\n            }\n            break;\n  \n          case 1: // INTRUSIVE\n            ptr = handle.$$.smartPtr;\n            break;\n  \n          case 2: // BY_EMVAL\n            if (handle.$$.smartPtrType === this) {\n              ptr = handle.$$.smartPtr;\n            } else {\n              var clonedHandle = handle['clone']();\n              ptr = this.rawShare(\n                ptr,\n                Emval.toHandle(function() {\n                  clonedHandle['delete']();\n                })\n              );\n              if (destructors !== null) {\n                destructors.push(this.rawDestructor, ptr);\n              }\n            }\n            break;\n  \n          default:\n            throwBindingError('Unsupporting sharing policy');\n        }\n      }\n      return ptr;\n    }\n  \n  function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError('null is not a valid ' + this.name);\n        }\n        return 0;\n      }\n  \n      if (!handle.$$) {\n        throwBindingError('Cannot pass \"' + embindRepr(handle) + '\" as a ' + this.name);\n      }\n      if (!handle.$$.ptr) {\n        throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);\n      }\n      if (handle.$$.ptrType.isConst) {\n          throwBindingError('Cannot convert argument of type ' + handle.$$.ptrType.name + ' to parameter type ' + this.name);\n      }\n      var handleClass = handle.$$.ptrType.registeredClass;\n      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n      return ptr;\n    }\n  \n  function RegisteredPointer_getPointee(ptr) {\n      if (this.rawGetPointee) {\n        ptr = this.rawGetPointee(ptr);\n      }\n      return ptr;\n    }\n  \n  function RegisteredPointer_destructor(ptr) {\n      if (this.rawDestructor) {\n        this.rawDestructor(ptr);\n      }\n    }\n  \n  function RegisteredPointer_deleteObject(handle) {\n      if (handle !== null) {\n        handle['delete']();\n      }\n    }\n  function init_RegisteredPointer() {\n      RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n      RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n      RegisteredPointer.prototype['argPackAdvance'] = 8;\n      RegisteredPointer.prototype['readValueFromPointer'] = simpleReadValueFromPointer;\n      RegisteredPointer.prototype['deleteObject'] = RegisteredPointer_deleteObject;\n      RegisteredPointer.prototype['fromWireType'] = RegisteredPointer_fromWireType;\n    }\n  /** @constructor\n      @param {*=} pointeeType,\n      @param {*=} sharingPolicy,\n      @param {*=} rawGetPointee,\n      @param {*=} rawConstructor,\n      @param {*=} rawShare,\n      @param {*=} rawDestructor,\n       */\n  function RegisteredPointer(\n      name,\n      registeredClass,\n      isReference,\n      isConst,\n  \n      // smart pointer properties\n      isSmartPointer,\n      pointeeType,\n      sharingPolicy,\n      rawGetPointee,\n      rawConstructor,\n      rawShare,\n      rawDestructor\n    ) {\n      this.name = name;\n      this.registeredClass = registeredClass;\n      this.isReference = isReference;\n      this.isConst = isConst;\n  \n      // smart pointer properties\n      this.isSmartPointer = isSmartPointer;\n      this.pointeeType = pointeeType;\n      this.sharingPolicy = sharingPolicy;\n      this.rawGetPointee = rawGetPointee;\n      this.rawConstructor = rawConstructor;\n      this.rawShare = rawShare;\n      this.rawDestructor = rawDestructor;\n  \n      if (!isSmartPointer && registeredClass.baseClass === undefined) {\n        if (isConst) {\n          this['toWireType'] = constNoSmartPtrRawPointerToWireType;\n          this.destructorFunction = null;\n        } else {\n          this['toWireType'] = nonConstNoSmartPtrRawPointerToWireType;\n          this.destructorFunction = null;\n        }\n      } else {\n        this['toWireType'] = genericPointerToWireType;\n        // Here we must leave this.destructorFunction undefined, since whether genericPointerToWireType returns\n        // a pointer that needs to be freed up is runtime-dependent, and cannot be evaluated at registration time.\n        // TODO: Create an alternative mechanism that allows removing the use of var destructors = []; array in\n        //       craftInvokerFunction altogether.\n      }\n    }\n  \n  /** @param {number=} numArguments */\n  function replacePublicSymbol(name, value, numArguments) {\n      if (!Module.hasOwnProperty(name)) {\n        throwInternalError('Replacing nonexistant public symbol');\n      }\n      // If there's an overload table for this symbol, replace the symbol in the overload table instead.\n      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n        Module[name].overloadTable[numArguments] = value;\n      }\n      else {\n        Module[name] = value;\n        Module[name].argCount = numArguments;\n      }\n    }\n  \n  function dynCallLegacy(sig, ptr, args) {\n      var f = Module['dynCall_' + sig];\n      return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\n    }\n  /** @param {Object=} args */\n  function dynCall(sig, ptr, args) {\n      // Without WASM_BIGINT support we cannot directly call function with i64 as\n      // part of thier signature, so we rely the dynCall functions generated by\n      // wasm-emscripten-finalize\n      if (sig.includes('j')) {\n        return dynCallLegacy(sig, ptr, args);\n      }\n      var rtn = getWasmTableEntry(ptr).apply(null, args);\n      return rtn;\n    }\n  function getDynCaller(sig, ptr) {\n      var argCache = [];\n      return function() {\n        argCache.length = 0;\n        Object.assign(argCache, arguments);\n        return dynCall(sig, ptr, argCache);\n      };\n    }\n  function embind__requireFunction(signature, rawFunction) {\n      signature = readLatin1String(signature);\n  \n      function makeDynCaller() {\n        if (signature.includes('j')) {\n          return getDynCaller(signature, rawFunction);\n        }\n        return getWasmTableEntry(rawFunction);\n      }\n  \n      var fp = makeDynCaller();\n      if (typeof fp != \"function\") {\n          throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n      }\n      return fp;\n    }\n  \n  var UnboundTypeError = undefined;\n  \n  function getTypeName(type) {\n      var ptr = ___getTypeName(type);\n      var rv = readLatin1String(ptr);\n      _free(ptr);\n      return rv;\n    }\n  function throwUnboundTypeError(message, types) {\n      var unboundTypes = [];\n      var seen = {};\n      function visit(type) {\n        if (seen[type]) {\n          return;\n        }\n        if (registeredTypes[type]) {\n          return;\n        }\n        if (typeDependencies[type]) {\n          typeDependencies[type].forEach(visit);\n          return;\n        }\n        unboundTypes.push(type);\n        seen[type] = true;\n      }\n      types.forEach(visit);\n  \n      throw new UnboundTypeError(message + ': ' + unboundTypes.map(getTypeName).join([', ']));\n    }\n  function __embind_register_class(rawType,\n                                     rawPointerType,\n                                     rawConstPointerType,\n                                     baseClassRawType,\n                                     getActualTypeSignature,\n                                     getActualType,\n                                     upcastSignature,\n                                     upcast,\n                                     downcastSignature,\n                                     downcast,\n                                     name,\n                                     destructorSignature,\n                                     rawDestructor) {\n      name = readLatin1String(name);\n      getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n      if (upcast) {\n        upcast = embind__requireFunction(upcastSignature, upcast);\n      }\n      if (downcast) {\n        downcast = embind__requireFunction(downcastSignature, downcast);\n      }\n      rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n      var legalFunctionName = makeLegalFunctionName(name);\n  \n      exposePublicSymbol(legalFunctionName, function() {\n        // this code cannot run if baseClassRawType is zero\n        throwUnboundTypeError('Cannot construct ' + name + ' due to unbound types', [baseClassRawType]);\n      });\n  \n      whenDependentTypesAreResolved(\n        [rawType, rawPointerType, rawConstPointerType],\n        baseClassRawType ? [baseClassRawType] : [],\n        function(base) {\n          base = base[0];\n  \n          var baseClass;\n          var basePrototype;\n          if (baseClassRawType) {\n            baseClass = base.registeredClass;\n            basePrototype = baseClass.instancePrototype;\n          } else {\n            basePrototype = ClassHandle.prototype;\n          }\n  \n          var constructor = createNamedFunction(legalFunctionName, function() {\n            if (Object.getPrototypeOf(this) !== instancePrototype) {\n              throw new BindingError(\"Use 'new' to construct \" + name);\n            }\n            if (undefined === registeredClass.constructor_body) {\n              throw new BindingError(name + \" has no accessible constructor\");\n            }\n            var body = registeredClass.constructor_body[arguments.length];\n            if (undefined === body) {\n              throw new BindingError(\"Tried to invoke ctor of \" + name + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\n            }\n            return body.apply(this, arguments);\n          });\n  \n          var instancePrototype = Object.create(basePrototype, {\n            constructor: { value: constructor },\n          });\n  \n          constructor.prototype = instancePrototype;\n  \n          var registeredClass = new RegisteredClass(name,\n                                                    constructor,\n                                                    instancePrototype,\n                                                    rawDestructor,\n                                                    baseClass,\n                                                    getActualType,\n                                                    upcast,\n                                                    downcast);\n  \n          var referenceConverter = new RegisteredPointer(name,\n                                                         registeredClass,\n                                                         true,\n                                                         false,\n                                                         false);\n  \n          var pointerConverter = new RegisteredPointer(name + '*',\n                                                       registeredClass,\n                                                       false,\n                                                       false,\n                                                       false);\n  \n          var constPointerConverter = new RegisteredPointer(name + ' const*',\n                                                            registeredClass,\n                                                            false,\n                                                            true,\n                                                            false);\n  \n          registeredPointers[rawType] = {\n            pointerType: pointerConverter,\n            constPointerType: constPointerConverter\n          };\n  \n          replacePublicSymbol(legalFunctionName, constructor);\n  \n          return [referenceConverter, pointerConverter, constPointerConverter];\n        }\n      );\n    }\n\n  function heap32VectorToArray(count, firstElement) {\n      var array = [];\n      for (var i = 0; i < count; i++) {\n          // TODO(https://github.com/emscripten-core/emscripten/issues/17310):\n          // Find a way to hoist the `>> 2` or `>> 3` out of this loop.\n          array.push(HEAPU32[(((firstElement)+(i * 4))>>2)]);\n      }\n      return array;\n    }\n  \n  function new_(constructor, argumentList) {\n      if (!(constructor instanceof Function)) {\n        throw new TypeError('new_ called with constructor type ' + typeof(constructor) + \" which is not a function\");\n      }\n      /*\n       * Previously, the following line was just:\n       *   function dummy() {};\n       * Unfortunately, Chrome was preserving 'dummy' as the object's name, even\n       * though at creation, the 'dummy' has the correct constructor name.  Thus,\n       * objects created with IMVU.new would show up in the debugger as 'dummy',\n       * which isn't very helpful.  Using IMVU.createNamedFunction addresses the\n       * issue.  Doublely-unfortunately, there's no way to write a test for this\n       * behavior.  -NRD 2013.02.22\n       */\n      var dummy = createNamedFunction(constructor.name || 'unknownFunctionName', function(){});\n      dummy.prototype = constructor.prototype;\n      var obj = new dummy;\n  \n      var r = constructor.apply(obj, argumentList);\n      return (r instanceof Object) ? r : obj;\n    }\n  function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n      // humanName: a human-readable string name for the function to be generated.\n      // argTypes: An array that contains the embind type objects for all types in the function signature.\n      //    argTypes[0] is the type object for the function return value.\n      //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.\n      //    argTypes[2...] are the actual function parameters.\n      // classType: The embind type object for the class to be bound, or null if this is not a method of a class.\n      // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.\n      // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.\n      var argCount = argTypes.length;\n  \n      if (argCount < 2) {\n        throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n      }\n  \n      var isClassMethodFunc = (argTypes[1] !== null && classType !== null);\n  \n      // Free functions with signature \"void function()\" do not need an invoker that marshalls between wire types.\n  // TODO: This omits argument count check - enable only at -O3 or similar.\n  //    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == \"void\" && !isClassMethodFunc) {\n  //       return FUNCTION_TABLE[fn];\n  //    }\n  \n      // Determine if we need to use a dynamic stack to store the destructors for the function parameters.\n      // TODO: Remove this completely once all function invokers are being dynamically generated.\n      var needsDestructorStack = false;\n  \n      for (var i = 1; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here.\n        if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) { // The type does not define a destructor function - must use dynamic stack\n          needsDestructorStack = true;\n          break;\n        }\n      }\n  \n      var returns = (argTypes[0].name !== \"void\");\n  \n      var argsList = \"\";\n      var argsListWired = \"\";\n      for (var i = 0; i < argCount - 2; ++i) {\n        argsList += (i!==0?\", \":\"\")+\"arg\"+i;\n        argsListWired += (i!==0?\", \":\"\")+\"arg\"+i+\"Wired\";\n      }\n  \n      var invokerFnBody =\n          \"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\" +\n          \"if (arguments.length !== \"+(argCount - 2)+\") {\\n\" +\n              \"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount - 2)+\" args!');\\n\" +\n          \"}\\n\";\n  \n      if (needsDestructorStack) {\n        invokerFnBody += \"var destructors = [];\\n\";\n      }\n  \n      var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n      var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n      var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n  \n      if (isClassMethodFunc) {\n        invokerFnBody += \"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\";\n      }\n  \n      for (var i = 0; i < argCount - 2; ++i) {\n        invokerFnBody += \"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";\n        args1.push(\"argType\"+i);\n        args2.push(argTypes[i+2]);\n      }\n  \n      if (isClassMethodFunc) {\n        argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n      }\n  \n      invokerFnBody +=\n          (returns?\"var rv = \":\"\") + \"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";\n  \n      if (needsDestructorStack) {\n        invokerFnBody += \"runDestructors(destructors);\\n\";\n      } else {\n        for (var i = isClassMethodFunc?1:2; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.\n          var paramName = (i === 1 ? \"thisWired\" : (\"arg\"+(i - 2)+\"Wired\"));\n          if (argTypes[i].destructorFunction !== null) {\n            invokerFnBody += paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";\n            args1.push(paramName+\"_dtor\");\n            args2.push(argTypes[i].destructorFunction);\n          }\n        }\n      }\n  \n      if (returns) {\n        invokerFnBody += \"var ret = retType.fromWireType(rv);\\n\" +\n                         \"return ret;\\n\";\n      } else {\n      }\n  \n      invokerFnBody += \"}\\n\";\n  \n      args1.push(invokerFnBody);\n  \n      var invokerFunction = new_(Function, args1).apply(null, args2);\n      return invokerFunction;\n    }\n  function __embind_register_class_constructor(\n      rawClassType,\n      argCount,\n      rawArgTypesAddr,\n      invokerSignature,\n      invoker,\n      rawConstructor\n    ) {\n      assert(argCount > 0);\n      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      invoker = embind__requireFunction(invokerSignature, invoker);\n      var args = [rawConstructor];\n      var destructors = [];\n  \n      whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n        classType = classType[0];\n        var humanName = 'constructor ' + classType.name;\n  \n        if (undefined === classType.registeredClass.constructor_body) {\n          classType.registeredClass.constructor_body = [];\n        }\n        if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {\n          throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount-1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n        }\n        classType.registeredClass.constructor_body[argCount - 1] = () => {\n          throwUnboundTypeError('Cannot construct ' + classType.name + ' due to unbound types', rawArgTypes);\n        };\n  \n        whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n          // Insert empty slot for context type (argTypes[1]).\n          argTypes.splice(1, 0, null);\n          classType.registeredClass.constructor_body[argCount - 1] = craftInvokerFunction(humanName, argTypes, null, invoker, rawConstructor);\n          return [];\n        });\n        return [];\n      });\n    }\n\n  function __embind_register_class_function(rawClassType,\n                                              methodName,\n                                              argCount,\n                                              rawArgTypesAddr, // [ReturnType, ThisType, Args...]\n                                              invokerSignature,\n                                              rawInvoker,\n                                              context,\n                                              isPureVirtual) {\n      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      methodName = readLatin1String(methodName);\n      rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n  \n      whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n        classType = classType[0];\n        var humanName = classType.name + '.' + methodName;\n  \n        if (methodName.startsWith(\"@@\")) {\n          methodName = Symbol[methodName.substring(2)];\n        }\n  \n        if (isPureVirtual) {\n          classType.registeredClass.pureVirtualFunctions.push(methodName);\n        }\n  \n        function unboundTypesHandler() {\n          throwUnboundTypeError('Cannot call ' + humanName + ' due to unbound types', rawArgTypes);\n        }\n  \n        var proto = classType.registeredClass.instancePrototype;\n        var method = proto[methodName];\n        if (undefined === method || (undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2)) {\n          // This is the first overload to be registered, OR we are replacing a\n          // function in the base class with a function in the derived class.\n          unboundTypesHandler.argCount = argCount - 2;\n          unboundTypesHandler.className = classType.name;\n          proto[methodName] = unboundTypesHandler;\n        } else {\n          // There was an existing function with the same name registered. Set up\n          // a function overload routing table.\n          ensureOverloadTable(proto, methodName, humanName);\n          proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n        }\n  \n        whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n          var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\n  \n          // Replace the initial unbound-handler-stub function with the appropriate member function, now that all types\n          // are resolved. If multiple overloads are registered for this function, the function goes into an overload table.\n          if (undefined === proto[methodName].overloadTable) {\n            // Set argCount in case an overload is registered later\n            memberFunction.argCount = argCount - 2;\n            proto[methodName] = memberFunction;\n          } else {\n            proto[methodName].overloadTable[argCount - 2] = memberFunction;\n          }\n  \n          return [];\n        });\n        return [];\n      });\n    }\n\n  var emval_free_list = [];\n  \n  var emval_handle_array = [{},{value:undefined},{value:null},{value:true},{value:false}];\n  function __emval_decref(handle) {\n      if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {\n        emval_handle_array[handle] = undefined;\n        emval_free_list.push(handle);\n      }\n    }\n  \n  function count_emval_handles() {\n      var count = 0;\n      for (var i = 5; i < emval_handle_array.length; ++i) {\n        if (emval_handle_array[i] !== undefined) {\n          ++count;\n        }\n      }\n      return count;\n    }\n  \n  function get_first_emval() {\n      for (var i = 5; i < emval_handle_array.length; ++i) {\n        if (emval_handle_array[i] !== undefined) {\n          return emval_handle_array[i];\n        }\n      }\n      return null;\n    }\n  function init_emval() {\n      Module['count_emval_handles'] = count_emval_handles;\n      Module['get_first_emval'] = get_first_emval;\n    }\n  var Emval = {toValue:(handle) => {\n        if (!handle) {\n            throwBindingError('Cannot use deleted val. handle = ' + handle);\n        }\n        return emval_handle_array[handle].value;\n      },toHandle:(value) => {\n        switch (value) {\n          case undefined: return 1;\n          case null: return 2;\n          case true: return 3;\n          case false: return 4;\n          default:{\n            var handle = emval_free_list.length ?\n                emval_free_list.pop() :\n                emval_handle_array.length;\n  \n            emval_handle_array[handle] = {refcount: 1, value: value};\n            return handle;\n          }\n        }\n      }};\n  function __embind_register_emval(rawType, name) {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        'fromWireType': function(handle) {\n          var rv = Emval.toValue(handle);\n          __emval_decref(handle);\n          return rv;\n        },\n        'toWireType': function(destructors, value) {\n          return Emval.toHandle(value);\n        },\n        'argPackAdvance': 8,\n        'readValueFromPointer': simpleReadValueFromPointer,\n        destructorFunction: null, // This type does not need a destructor\n  \n        // TODO: do we need a deleteObject here?  write a test where\n        // emval is passed into JS via an interface\n      });\n    }\n\n  function embindRepr(v) {\n      if (v === null) {\n          return 'null';\n      }\n      var t = typeof v;\n      if (t === 'object' || t === 'array' || t === 'function') {\n          return v.toString();\n      } else {\n          return '' + v;\n      }\n    }\n  \n  function floatReadValueFromPointer(name, shift) {\n      switch (shift) {\n          case 2: return function(pointer) {\n              return this['fromWireType'](HEAPF32[pointer >> 2]);\n          };\n          case 3: return function(pointer) {\n              return this['fromWireType'](HEAPF64[pointer >> 3]);\n          };\n          default:\n              throw new TypeError(\"Unknown float type: \" + name);\n      }\n    }\n  function __embind_register_float(rawType, name, size) {\n      var shift = getShiftFromSize(size);\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        'fromWireType': function(value) {\n           return value;\n        },\n        'toWireType': function(destructors, value) {\n          // The VM will perform JS to Wasm value conversion, according to the spec:\n          // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\n          return value;\n        },\n        'argPackAdvance': 8,\n        'readValueFromPointer': floatReadValueFromPointer(name, shift),\n        destructorFunction: null, // This type does not need a destructor\n      });\n    }\n\n  function __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {\n      var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      name = readLatin1String(name);\n  \n      rawInvoker = embind__requireFunction(signature, rawInvoker);\n  \n      exposePublicSymbol(name, function() {\n        throwUnboundTypeError('Cannot call ' + name + ' due to unbound types', argTypes);\n      }, argCount - 1);\n  \n      whenDependentTypesAreResolved([], argTypes, function(argTypes) {\n        var invokerArgsArray = [argTypes[0] /* return value */, null /* no class 'this'*/].concat(argTypes.slice(1) /* actual params */);\n        replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null /* no class 'this'*/, rawInvoker, fn), argCount - 1);\n        return [];\n      });\n    }\n\n  function integerReadValueFromPointer(name, shift, signed) {\n      // integers are quite common, so generate very specialized functions\n      switch (shift) {\n          case 0: return signed ?\n              function readS8FromPointer(pointer) { return HEAP8[pointer]; } :\n              function readU8FromPointer(pointer) { return HEAPU8[pointer]; };\n          case 1: return signed ?\n              function readS16FromPointer(pointer) { return HEAP16[pointer >> 1]; } :\n              function readU16FromPointer(pointer) { return HEAPU16[pointer >> 1]; };\n          case 2: return signed ?\n              function readS32FromPointer(pointer) { return HEAP32[pointer >> 2]; } :\n              function readU32FromPointer(pointer) { return HEAPU32[pointer >> 2]; };\n          default:\n              throw new TypeError(\"Unknown integer type: \" + name);\n      }\n    }\n  function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n      name = readLatin1String(name);\n      // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come\n      // out as 'i32 -1'. Always treat those as max u32.\n      if (maxRange === -1) {\n          maxRange = 4294967295;\n      }\n  \n      var shift = getShiftFromSize(size);\n  \n      var fromWireType = (value) => value;\n  \n      if (minRange === 0) {\n          var bitshift = 32 - 8*size;\n          fromWireType = (value) => (value << bitshift) >>> bitshift;\n      }\n  \n      var isUnsignedType = (name.includes('unsigned'));\n      var checkAssertions = (value, toTypeName) => {\n      }\n      var toWireType;\n      if (isUnsignedType) {\n        toWireType = function(destructors, value) {\n          checkAssertions(value, this.name);\n          return value >>> 0;\n        }\n      } else {\n        toWireType = function(destructors, value) {\n          checkAssertions(value, this.name);\n          // The VM will perform JS to Wasm value conversion, according to the spec:\n          // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\n          return value;\n        }\n      }\n      registerType(primitiveType, {\n        name: name,\n        'fromWireType': fromWireType,\n        'toWireType': toWireType,\n        'argPackAdvance': 8,\n        'readValueFromPointer': integerReadValueFromPointer(name, shift, minRange !== 0),\n        destructorFunction: null, // This type does not need a destructor\n      });\n    }\n\n  function __embind_register_memory_view(rawType, dataTypeIndex, name) {\n      var typeMapping = [\n        Int8Array,\n        Uint8Array,\n        Int16Array,\n        Uint16Array,\n        Int32Array,\n        Uint32Array,\n        Float32Array,\n        Float64Array,\n      ];\n  \n      var TA = typeMapping[dataTypeIndex];\n  \n      function decodeMemoryView(handle) {\n        handle = handle >> 2;\n        var heap = HEAPU32;\n        var size = heap[handle]; // in elements\n        var data = heap[handle + 1]; // byte offset into emscripten heap\n        return new TA(buffer, data, size);\n      }\n  \n      name = readLatin1String(name);\n      registerType(rawType, {\n        name: name,\n        'fromWireType': decodeMemoryView,\n        'argPackAdvance': 8,\n        'readValueFromPointer': decodeMemoryView,\n      }, {\n        ignoreDuplicateRegistrations: true,\n      });\n    }\n\n  function __embind_register_std_string(rawType, name) {\n      name = readLatin1String(name);\n      var stdStringIsUTF8\n      //process only std::string bindings with UTF8 support, in contrast to e.g. std::basic_string<unsigned char>\n      = (name === \"std::string\");\n  \n      registerType(rawType, {\n        name: name,\n        'fromWireType': function(value) {\n          var length = HEAPU32[((value)>>2)];\n          var payload = value + 4;\n  \n          var str;\n          if (stdStringIsUTF8) {\n            var decodeStartPtr = payload;\n            // Looping here to support possible embedded '0' bytes\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = payload + i;\n              if (i == length || HEAPU8[currentBytePtr] == 0) {\n                var maxRead = currentBytePtr - decodeStartPtr;\n                var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                if (str === undefined) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + 1;\n              }\n            }\n          } else {\n            var a = new Array(length);\n            for (var i = 0; i < length; ++i) {\n              a[i] = String.fromCharCode(HEAPU8[payload + i]);\n            }\n            str = a.join('');\n          }\n  \n          _free(value);\n  \n          return str;\n        },\n        'toWireType': function(destructors, value) {\n          if (value instanceof ArrayBuffer) {\n            value = new Uint8Array(value);\n          }\n  \n          var length;\n          var valueIsOfTypeString = (typeof value == 'string');\n  \n          if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n            throwBindingError('Cannot pass non-string to std::string');\n          }\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            length = lengthBytesUTF8(value);\n          } else {\n            length = value.length;\n          }\n  \n          // assumes 4-byte alignment\n          var base = _malloc(4 + length + 1);\n          var ptr = base + 4;\n          HEAPU32[((base)>>2)] = length;\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            stringToUTF8(value, ptr, length + 1);\n          } else {\n            if (valueIsOfTypeString) {\n              for (var i = 0; i < length; ++i) {\n                var charCode = value.charCodeAt(i);\n                if (charCode > 255) {\n                  _free(ptr);\n                  throwBindingError('String has UTF-16 code units that do not fit in 8 bits');\n                }\n                HEAPU8[ptr + i] = charCode;\n              }\n            } else {\n              for (var i = 0; i < length; ++i) {\n                HEAPU8[ptr + i] = value[i];\n              }\n            }\n          }\n  \n          if (destructors !== null) {\n            destructors.push(_free, base);\n          }\n          return base;\n        },\n        'argPackAdvance': 8,\n        'readValueFromPointer': simpleReadValueFromPointer,\n        destructorFunction: function(ptr) { _free(ptr); },\n      });\n    }\n\n  var UTF16Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf-16le') : undefined;;\n  function UTF16ToString(ptr, maxBytesToRead) {\n      var endPtr = ptr;\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\n      // null terminator by itself.\n      // Also, use the length info to avoid running tiny strings through\n      // TextDecoder, since .subarray() allocates garbage.\n      var idx = endPtr >> 1;\n      var maxIdx = idx + maxBytesToRead / 2;\n      // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n      // will always evaluate to true. This saves on code size.\n      while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\n      endPtr = idx << 1;\n  \n      if (endPtr - ptr > 32 && UTF16Decoder)\n        return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n  \n      // Fallback: decode without UTF16Decoder\n      var str = '';\n  \n      // If maxBytesToRead is not passed explicitly, it will be undefined, and the\n      // for-loop's condition will always evaluate to true. The loop is then\n      // terminated on the first null char.\n      for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n        var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];\n        if (codeUnit == 0) break;\n        // fromCharCode constructs a character from a UTF-16 code unit, so we can\n        // pass the UTF16 string right through.\n        str += String.fromCharCode(codeUnit);\n      }\n  \n      return str;\n    }\n  \n  function stringToUTF16(str, outPtr, maxBytesToWrite) {\n      // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n      if (maxBytesToWrite === undefined) {\n        maxBytesToWrite = 0x7FFFFFFF;\n      }\n      if (maxBytesToWrite < 2) return 0;\n      maxBytesToWrite -= 2; // Null terminator.\n      var startPtr = outPtr;\n      var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;\n      for (var i = 0; i < numCharsToWrite; ++i) {\n        // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\n        var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n        HEAP16[((outPtr)>>1)] = codeUnit;\n        outPtr += 2;\n      }\n      // Null-terminate the pointer to the HEAP.\n      HEAP16[((outPtr)>>1)] = 0;\n      return outPtr - startPtr;\n    }\n  \n  function lengthBytesUTF16(str) {\n      return str.length*2;\n    }\n  \n  function UTF32ToString(ptr, maxBytesToRead) {\n      var i = 0;\n  \n      var str = '';\n      // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n      // will always evaluate to true. This saves on code size.\n      while (!(i >= maxBytesToRead / 4)) {\n        var utf32 = HEAP32[(((ptr)+(i*4))>>2)];\n        if (utf32 == 0) break;\n        ++i;\n        // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        if (utf32 >= 0x10000) {\n          var ch = utf32 - 0x10000;\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n        } else {\n          str += String.fromCharCode(utf32);\n        }\n      }\n      return str;\n    }\n  \n  function stringToUTF32(str, outPtr, maxBytesToWrite) {\n      // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n      if (maxBytesToWrite === undefined) {\n        maxBytesToWrite = 0x7FFFFFFF;\n      }\n      if (maxBytesToWrite < 4) return 0;\n      var startPtr = outPtr;\n      var endPtr = startPtr + maxBytesToWrite - 4;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n        if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\n          var trailSurrogate = str.charCodeAt(++i);\n          codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);\n        }\n        HEAP32[((outPtr)>>2)] = codeUnit;\n        outPtr += 4;\n        if (outPtr + 4 > endPtr) break;\n      }\n      // Null-terminate the pointer to the HEAP.\n      HEAP32[((outPtr)>>2)] = 0;\n      return outPtr - startPtr;\n    }\n  \n  function lengthBytesUTF32(str) {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\n        len += 4;\n      }\n  \n      return len;\n    }\n  function __embind_register_std_wstring(rawType, charSize, name) {\n      name = readLatin1String(name);\n      var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n      if (charSize === 2) {\n        decodeString = UTF16ToString;\n        encodeString = stringToUTF16;\n        lengthBytesUTF = lengthBytesUTF16;\n        getHeap = () => HEAPU16;\n        shift = 1;\n      } else if (charSize === 4) {\n        decodeString = UTF32ToString;\n        encodeString = stringToUTF32;\n        lengthBytesUTF = lengthBytesUTF32;\n        getHeap = () => HEAPU32;\n        shift = 2;\n      }\n      registerType(rawType, {\n        name: name,\n        'fromWireType': function(value) {\n          // Code mostly taken from _embind_register_std_string fromWireType\n          var length = HEAPU32[value >> 2];\n          var HEAP = getHeap();\n          var str;\n  \n          var decodeStartPtr = value + 4;\n          // Looping here to support possible embedded '0' bytes\n          for (var i = 0; i <= length; ++i) {\n            var currentBytePtr = value + 4 + i * charSize;\n            if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n              var maxReadBytes = currentBytePtr - decodeStartPtr;\n              var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n              if (str === undefined) {\n                str = stringSegment;\n              } else {\n                str += String.fromCharCode(0);\n                str += stringSegment;\n              }\n              decodeStartPtr = currentBytePtr + charSize;\n            }\n          }\n  \n          _free(value);\n  \n          return str;\n        },\n        'toWireType': function(destructors, value) {\n          if (!(typeof value == 'string')) {\n            throwBindingError('Cannot pass non-string to C++ string type ' + name);\n          }\n  \n          // assumes 4-byte alignment\n          var length = lengthBytesUTF(value);\n          var ptr = _malloc(4 + length + charSize);\n          HEAPU32[ptr >> 2] = length >> shift;\n  \n          encodeString(value, ptr + 4, length + charSize);\n  \n          if (destructors !== null) {\n            destructors.push(_free, ptr);\n          }\n          return ptr;\n        },\n        'argPackAdvance': 8,\n        'readValueFromPointer': simpleReadValueFromPointer,\n        destructorFunction: function(ptr) { _free(ptr); },\n      });\n    }\n\n  function __embind_register_value_object(\n      rawType,\n      name,\n      constructorSignature,\n      rawConstructor,\n      destructorSignature,\n      rawDestructor\n    ) {\n      structRegistrations[rawType] = {\n        name: readLatin1String(name),\n        rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),\n        rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),\n        fields: [],\n      };\n    }\n\n  function __embind_register_value_object_field(\n      structType,\n      fieldName,\n      getterReturnType,\n      getterSignature,\n      getter,\n      getterContext,\n      setterArgumentType,\n      setterSignature,\n      setter,\n      setterContext\n    ) {\n      structRegistrations[structType].fields.push({\n        fieldName: readLatin1String(fieldName),\n        getterReturnType: getterReturnType,\n        getter: embind__requireFunction(getterSignature, getter),\n        getterContext: getterContext,\n        setterArgumentType: setterArgumentType,\n        setter: embind__requireFunction(setterSignature, setter),\n        setterContext: setterContext,\n      });\n    }\n\n  function __embind_register_void(rawType, name) {\n      name = readLatin1String(name);\n      registerType(rawType, {\n          isVoid: true, // void return values can be optimized out sometimes\n          name: name,\n          'argPackAdvance': 0,\n          'fromWireType': function() {\n              return undefined;\n          },\n          'toWireType': function(destructors, o) {\n              // TODO: assert if anything else is given?\n              return undefined;\n          },\n      });\n    }\n\n\n  function __emval_incref(handle) {\n      if (handle > 4) {\n        emval_handle_array[handle].refcount += 1;\n      }\n    }\n\n  function requireRegisteredType(rawType, humanName) {\n      var impl = registeredTypes[rawType];\n      if (undefined === impl) {\n          throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n      }\n      return impl;\n    }\n  function __emval_take_value(type, arg) {\n      type = requireRegisteredType(type, '_emval_take_value');\n      var v = type['readValueFromPointer'](arg);\n      return Emval.toHandle(v);\n    }\n\n  function _abort() {\n      abort('');\n    }\n\n  function _emscripten_memcpy_big(dest, src, num) {\n      HEAPU8.copyWithin(dest, src, src + num);\n    }\n\n  function getHeapMax() {\n      // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate\n      // full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side\n      // for any code that deals with heap sizes, which would require special\n      // casing all heap size related code to treat 0 specially.\n      return 2147483648;\n    }\n  \n  function emscripten_realloc_buffer(size) {\n      try {\n        // round size grow request up to wasm page size (fixed 64KB per spec)\n        wasmMemory.grow((size - buffer.byteLength + 65535) >>> 16); // .grow() takes a delta compared to the previous size\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        return 1 /*success*/;\n      } catch(e) {\n      }\n      // implicit 0 return to save code size (caller will cast \"undefined\" into 0\n      // anyhow)\n    }\n  function _emscripten_resize_heap(requestedSize) {\n      var oldSize = HEAPU8.length;\n      requestedSize = requestedSize >>> 0;\n      // With multithreaded builds, races can happen (another thread might increase the size\n      // in between), so return a failure, and let the caller retry.\n  \n      // Memory resize rules:\n      // 1.  Always increase heap size to at least the requested size, rounded up\n      //     to next page multiple.\n      // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap\n      //     geometrically: increase the heap size according to\n      //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most\n      //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).\n      // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap\n      //     linearly: increase the heap size by at least\n      //     MEMORY_GROWTH_LINEAR_STEP bytes.\n      // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by\n      //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest\n      // 4.  If we were unable to allocate as much memory, it may be due to\n      //     over-eager decision to excessively reserve due to (3) above.\n      //     Hence if an allocation fails, cut down on the amount of excess\n      //     growth, in an attempt to succeed to perform a smaller allocation.\n  \n      // A limit is set for how much we can grow. We should not exceed that\n      // (the wasm binary specifies it, so if we tried, we'd fail anyhow).\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n  \n      let alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\n  \n      // Loop through potential heap size increases. If we attempt a too eager\n      // reservation that fails, cut down on the attempted size and reserve a\n      // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown); // ensure geometric growth\n        // but limit overreserving (default to capping at +96MB overgrowth at most)\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296 );\n  \n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n  \n        var replacement = emscripten_realloc_buffer(newSize);\n        if (replacement) {\n  \n          return true;\n        }\n      }\n      return false;\n    }\n\n  var SYSCALLS = {varargs:undefined,get:function() {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\n        return ret;\n      },getStr:function(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      }};\n  function _fd_close(fd) {\n      return 52;\n    }\n\n  function convertI32PairToI53Checked(lo, hi) {\n      return ((hi + 0x200000) >>> 0 < 0x400001 - !!lo) ? (lo >>> 0) + hi * 4294967296 : NaN;\n    }\n  function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n      return 70;\n    }\n\n  var printCharBuffers = [null,[],[]];\n  function printChar(stream, curr) {\n      var buffer = printCharBuffers[stream];\n      if (curr === 0 || curr === 10) {\n        (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n        buffer.length = 0;\n      } else {\n        buffer.push(curr);\n      }\n    }\n  function flush_NO_FILESYSTEM() {\n      // flush anything remaining in the buffers during shutdown\n      if (printCharBuffers[1].length) printChar(1, 10);\n      if (printCharBuffers[2].length) printChar(2, 10);\n    }\n  function _fd_write(fd, iov, iovcnt, pnum) {\n      // hack to support printf in SYSCALLS_REQUIRE_FILESYSTEM=0\n      var num = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[((iov)>>2)];\n        var len = HEAPU32[(((iov)+(4))>>2)];\n        iov += 8;\n        for (var j = 0; j < len; j++) {\n          printChar(fd, HEAPU8[ptr+j]);\n        }\n        num += len;\n      }\n      HEAPU32[((pnum)>>2)] = num;\n      return 0;\n    }\n\n  function _llvm_eh_typeid_for(type) {\n      return type;\n    }\n\n\n  function getCFunc(ident) {\n      var func = Module['_' + ident]; // closure exported function\n      return func;\n    }\n  \n  function writeArrayToMemory(array, buffer) {\n      HEAP8.set(array, buffer);\n    }\n  \n    /**\n     * @param {string|null=} returnType\n     * @param {Array=} argTypes\n     * @param {Arguments|Array=} args\n     * @param {Object=} opts\n     */\n  function ccall(ident, returnType, argTypes, args, opts) {\n      // For fast lookup of conversion functions\n      var toC = {\n        'string': (str) => {\n          var ret = 0;\n          if (str !== null && str !== undefined && str !== 0) { // null string\n            // at most 4 bytes per UTF-8 code point, +1 for the trailing '\\0'\n            var len = (str.length << 2) + 1;\n            ret = stackAlloc(len);\n            stringToUTF8(str, ret, len);\n          }\n          return ret;\n        },\n        'array': (arr) => {\n          var ret = stackAlloc(arr.length);\n          writeArrayToMemory(arr, ret);\n          return ret;\n        }\n      };\n  \n      function convertReturnValue(ret) {\n        if (returnType === 'string') {\n          \n          return UTF8ToString(ret);\n        }\n        if (returnType === 'boolean') return Boolean(ret);\n        return ret;\n      }\n  \n      var func = getCFunc(ident);\n      var cArgs = [];\n      var stack = 0;\n      if (args) {\n        for (var i = 0; i < args.length; i++) {\n          var converter = toC[argTypes[i]];\n          if (converter) {\n            if (stack === 0) stack = stackSave();\n            cArgs[i] = converter(args[i]);\n          } else {\n            cArgs[i] = args[i];\n          }\n        }\n      }\n      var ret = func.apply(null, cArgs);\n      function onDone(ret) {\n        if (stack !== 0) stackRestore(stack);\n        return convertReturnValue(ret);\n      }\n  \n      ret = onDone(ret);\n      return ret;\n    }\nInternalError = Module['InternalError'] = extendError(Error, 'InternalError');;\nembind_init_charCodes();\nBindingError = Module['BindingError'] = extendError(Error, 'BindingError');;\ninit_ClassHandle();\ninit_embind();;\ninit_RegisteredPointer();\nUnboundTypeError = Module['UnboundTypeError'] = extendError(Error, 'UnboundTypeError');;\ninit_emval();;\nvar ASSERTIONS = false;\n\nvar asmLibraryArg = {\n  \"__assert_fail\": ___assert_fail,\n  \"__cxa_begin_catch\": ___cxa_begin_catch,\n  \"__cxa_end_catch\": ___cxa_end_catch,\n  \"__cxa_find_matching_catch_2\": ___cxa_find_matching_catch_2,\n  \"__cxa_find_matching_catch_3\": ___cxa_find_matching_catch_3,\n  \"__cxa_throw\": ___cxa_throw,\n  \"__resumeException\": ___resumeException,\n  \"_embind_finalize_value_object\": __embind_finalize_value_object,\n  \"_embind_register_bigint\": __embind_register_bigint,\n  \"_embind_register_bool\": __embind_register_bool,\n  \"_embind_register_class\": __embind_register_class,\n  \"_embind_register_class_constructor\": __embind_register_class_constructor,\n  \"_embind_register_class_function\": __embind_register_class_function,\n  \"_embind_register_emval\": __embind_register_emval,\n  \"_embind_register_float\": __embind_register_float,\n  \"_embind_register_function\": __embind_register_function,\n  \"_embind_register_integer\": __embind_register_integer,\n  \"_embind_register_memory_view\": __embind_register_memory_view,\n  \"_embind_register_std_string\": __embind_register_std_string,\n  \"_embind_register_std_wstring\": __embind_register_std_wstring,\n  \"_embind_register_value_object\": __embind_register_value_object,\n  \"_embind_register_value_object_field\": __embind_register_value_object_field,\n  \"_embind_register_void\": __embind_register_void,\n  \"_emval_decref\": __emval_decref,\n  \"_emval_incref\": __emval_incref,\n  \"_emval_take_value\": __emval_take_value,\n  \"abort\": _abort,\n  \"emscripten_memcpy_big\": _emscripten_memcpy_big,\n  \"emscripten_resize_heap\": _emscripten_resize_heap,\n  \"fd_close\": _fd_close,\n  \"fd_seek\": _fd_seek,\n  \"fd_write\": _fd_write,\n  \"invoke_i\": invoke_i,\n  \"invoke_ii\": invoke_ii,\n  \"invoke_iii\": invoke_iii,\n  \"invoke_iiii\": invoke_iiii,\n  \"invoke_v\": invoke_v,\n  \"invoke_vi\": invoke_vi,\n  \"invoke_viiii\": invoke_viiii,\n  \"invoke_viiiiii\": invoke_viiiiii,\n  \"llvm_eh_typeid_for\": _llvm_eh_typeid_for\n};\nvar asm = createWasm();\n/** @type {function(...*):?} */\nvar ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\n  return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _malloc = Module[\"_malloc\"] = function() {\n  return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"malloc\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _free = Module[\"_free\"] = function() {\n  return (_free = Module[\"_free\"] = Module[\"asm\"][\"free\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar ___cxa_free_exception = Module[\"___cxa_free_exception\"] = function() {\n  return (___cxa_free_exception = Module[\"___cxa_free_exception\"] = Module[\"asm\"][\"__cxa_free_exception\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar ___getTypeName = Module[\"___getTypeName\"] = function() {\n  return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"__getTypeName\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar __embind_initialize_bindings = Module[\"__embind_initialize_bindings\"] = function() {\n  return (__embind_initialize_bindings = Module[\"__embind_initialize_bindings\"] = Module[\"asm\"][\"_embind_initialize_bindings\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar ___errno_location = Module[\"___errno_location\"] = function() {\n  return (___errno_location = Module[\"___errno_location\"] = Module[\"asm\"][\"__errno_location\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar setTempRet0 = Module[\"setTempRet0\"] = function() {\n  return (setTempRet0 = Module[\"setTempRet0\"] = Module[\"asm\"][\"setTempRet0\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar stackSave = Module[\"stackSave\"] = function() {\n  return (stackSave = Module[\"stackSave\"] = Module[\"asm\"][\"stackSave\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar stackRestore = Module[\"stackRestore\"] = function() {\n  return (stackRestore = Module[\"stackRestore\"] = Module[\"asm\"][\"stackRestore\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar stackAlloc = Module[\"stackAlloc\"] = function() {\n  return (stackAlloc = Module[\"stackAlloc\"] = Module[\"asm\"][\"stackAlloc\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar ___cxa_can_catch = Module[\"___cxa_can_catch\"] = function() {\n  return (___cxa_can_catch = Module[\"___cxa_can_catch\"] = Module[\"asm\"][\"__cxa_can_catch\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar ___cxa_is_pointer_type = Module[\"___cxa_is_pointer_type\"] = function() {\n  return (___cxa_is_pointer_type = Module[\"___cxa_is_pointer_type\"] = Module[\"asm\"][\"__cxa_is_pointer_type\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_ji = Module[\"dynCall_ji\"] = function() {\n  return (dynCall_ji = Module[\"dynCall_ji\"] = Module[\"asm\"][\"dynCall_ji\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_iiji = Module[\"dynCall_iiji\"] = function() {\n  return (dynCall_iiji = Module[\"dynCall_iiji\"] = Module[\"asm\"][\"dynCall_iiji\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\n  return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"dynCall_jiji\"]).apply(null, arguments);\n};\n\n\nfunction invoke_ii(index,a1) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_vi(index,a1) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiii(index,a1,a2,a3,a4) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1,a2,a3,a4);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_v(index) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)();\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiii(index,a1,a2,a3) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2,a3);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_i(index) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)();\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iii(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\n\n\n\n// === Auto-generated postamble setup entry stuff ===\n\nModule[\"ccall\"] = ccall;\n\n\nvar calledRun;\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!calledRun) run();\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n};\n\n/** @type {function(Array=)} */\nfunction run(args) {\n  args = args || arguments_;\n\n  if (runDependencies > 0) {\n    return;\n  }\n\n  preRun();\n\n  // a preRun added a dependency, run will be called later\n  if (runDependencies > 0) {\n    return;\n  }\n\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    if (calledRun) return;\n    calledRun = true;\n    Module['calledRun'] = true;\n\n    if (ABORT) return;\n\n    initRuntime();\n\n    readyPromiseResolve(Module);\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function() {\n      setTimeout(function() {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else\n  {\n    doRun();\n  }\n}\n\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\n\nrun();\n\n\n\n\n\n\n\n  return Module.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = Module;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return Module; });\nelse if (typeof exports === 'object')\n  exports[\"Module\"] = Module;\n", "export default function (imageFrame, colorBuffer, useRGBA) {\n    if (imageFrame === undefined) {\n        throw new Error('decodeRGB: rgbBuffer must be defined');\n    }\n    if (imageFrame.length % 3 !== 0) {\n        throw new Error(`decodeRGB: rgbBuffer length ${imageFrame.length} must be divisible by 3`);\n    }\n    const numPixels = imageFrame.length / 3;\n    let rgbIndex = 0;\n    let bufferIndex = 0;\n    if (useRGBA) {\n        for (let i = 0; i < numPixels; i++) {\n            colorBuffer[bufferIndex++] = imageFrame[rgbIndex++];\n            colorBuffer[bufferIndex++] = imageFrame[rgbIndex++];\n            colorBuffer[bufferIndex++] = imageFrame[rgbIndex++];\n            colorBuffer[bufferIndex++] = 255;\n        }\n        return;\n    }\n    colorBuffer.set(imageFrame);\n}\n", "export default function (imageFrame, colorBuffer, useRGBA) {\n    if (imageFrame === undefined) {\n        throw new Error('decodeRGB: rgbBuffer must be defined');\n    }\n    if (imageFrame.length % 3 !== 0) {\n        throw new Error(`decodeRGB: rgbBuffer length ${imageFrame.length} must be divisible by 3`);\n    }\n    const numPixels = imageFrame.length / 3;\n    let bufferIndex = 0;\n    let rIndex = 0;\n    let gIndex = numPixels;\n    let bIndex = numPixels * 2;\n    if (useRGBA) {\n        for (let i = 0; i < numPixels; i++) {\n            colorBuffer[bufferIndex++] = imageFrame[rIndex++];\n            colorBuffer[bufferIndex++] = imageFrame[gIndex++];\n            colorBuffer[bufferIndex++] = imageFrame[bIndex++];\n            colorBuffer[bufferIndex++] = 255;\n        }\n    }\n    else {\n        for (let i = 0; i < numPixels; i++) {\n            colorBuffer[bufferIndex++] = imageFrame[rIndex++];\n            colorBuffer[bufferIndex++] = imageFrame[gIndex++];\n            colorBuffer[bufferIndex++] = imageFrame[bIndex++];\n        }\n    }\n}\n", "export default function (imageFrame, colorBuffer, useRGBA) {\n    if (imageFrame === undefined) {\n        throw new Error('convertYBRFullByPixel: ybrBuffer must be defined');\n    }\n    if (imageFrame.length % 3 !== 0) {\n        throw new Error(`convertYBRFullByPixel: ybrBuffer length ${imageFrame.length} must be divisible by 3`);\n    }\n    const numPixels = imageFrame.length / 3;\n    let ybrIndex = 0;\n    let bufferIndex = 0;\n    if (useRGBA) {\n        for (let i = 0; i < numPixels; i++) {\n            const y = imageFrame[ybrIndex++];\n            const cb = imageFrame[ybrIndex++];\n            const cr = imageFrame[ybrIndex++];\n            colorBuffer[bufferIndex++] = y + 1.402 * (cr - 128);\n            colorBuffer[bufferIndex++] =\n                y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128);\n            colorBuffer[bufferIndex++] = y + 1.772 * (cb - 128);\n            colorBuffer[bufferIndex++] = 255;\n        }\n        return;\n    }\n    for (let i = 0; i < numPixels; i++) {\n        const y = imageFrame[ybrIndex++];\n        const cb = imageFrame[ybrIndex++];\n        const cr = imageFrame[ybrIndex++];\n        colorBuffer[bufferIndex++] = y + 1.402 * (cr - 128);\n        colorBuffer[bufferIndex++] =\n            y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128);\n        colorBuffer[bufferIndex++] = y + 1.772 * (cb - 128);\n    }\n}\n", "export default function (imageFrame, colorBuffer, useRGBA) {\n    if (imageFrame === undefined) {\n        throw new Error('convertYBRFullByPlane: ybrBuffer must be defined');\n    }\n    if (imageFrame.length % 3 !== 0) {\n        throw new Error(`convertYBRFullByPlane: ybrBuffer length ${imageFrame.length} must be divisible by 3`);\n    }\n    const numPixels = imageFrame.length / 3;\n    let bufferIndex = 0;\n    let yIndex = 0;\n    let cbIndex = numPixels;\n    let crIndex = numPixels * 2;\n    if (useRGBA) {\n        for (let i = 0; i < numPixels; i++) {\n            const y = imageFrame[yIndex++];\n            const cb = imageFrame[cbIndex++];\n            const cr = imageFrame[crIndex++];\n            colorBuffer[bufferIndex++] = y + 1.402 * (cr - 128);\n            colorBuffer[bufferIndex++] =\n                y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128);\n            colorBuffer[bufferIndex++] = y + 1.772 * (cb - 128);\n            colorBuffer[bufferIndex++] = 255;\n        }\n        return;\n    }\n    for (let i = 0; i < numPixels; i++) {\n        const y = imageFrame[yIndex++];\n        const cb = imageFrame[cbIndex++];\n        const cr = imageFrame[crIndex++];\n        colorBuffer[bufferIndex++] = y + 1.402 * (cr - 128);\n        colorBuffer[bufferIndex++] =\n            y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128);\n        colorBuffer[bufferIndex++] = y + 1.772 * (cb - 128);\n    }\n}\n", "export default function (imageFrame, colorBuffer, useRGBA) {\n    if (imageFrame === undefined) {\n        throw new Error('convertYBRFull422ByPixel: ybrBuffer must be defined');\n    }\n    if (imageFrame.length % 2 !== 0) {\n        throw new Error(`convertYBRFull422ByPixel: ybrBuffer length ${imageFrame.length} must be divisible by 2`);\n    }\n    const numPixels = imageFrame.length / 2;\n    let ybrIndex = 0;\n    let bufferIndex = 0;\n    if (useRGBA) {\n        for (let i = 0; i < numPixels; i += 2) {\n            const y1 = imageFrame[ybrIndex++];\n            const y2 = imageFrame[ybrIndex++];\n            const cb = imageFrame[ybrIndex++];\n            const cr = imageFrame[ybrIndex++];\n            colorBuffer[bufferIndex++] = y1 + 1.402 * (cr - 128);\n            colorBuffer[bufferIndex++] =\n                y1 - 0.34414 * (cb - 128) - 0.71414 * (cr - 128);\n            colorBuffer[bufferIndex++] = y1 + 1.772 * (cb - 128);\n            colorBuffer[bufferIndex++] = 255;\n            colorBuffer[bufferIndex++] = y2 + 1.402 * (cr - 128);\n            colorBuffer[bufferIndex++] =\n                y2 - 0.34414 * (cb - 128) - 0.71414 * (cr - 128);\n            colorBuffer[bufferIndex++] = y2 + 1.772 * (cb - 128);\n            colorBuffer[bufferIndex++] = 255;\n        }\n        return;\n    }\n    for (let i = 0; i < numPixels; i += 2) {\n        const y1 = imageFrame[ybrIndex++];\n        const y2 = imageFrame[ybrIndex++];\n        const cb = imageFrame[ybrIndex++];\n        const cr = imageFrame[ybrIndex++];\n        colorBuffer[bufferIndex++] = y1 + 1.402 * (cr - 128);\n        colorBuffer[bufferIndex++] =\n            y1 - 0.34414 * (cb - 128) - 0.71414 * (cr - 128);\n        colorBuffer[bufferIndex++] = y1 + 1.772 * (cb - 128);\n        colorBuffer[bufferIndex++] = y2 + 1.402 * (cr - 128);\n        colorBuffer[bufferIndex++] =\n            y2 - 0.34414 * (cb - 128) - 0.71414 * (cr - 128);\n        colorBuffer[bufferIndex++] = y2 + 1.772 * (cb - 128);\n    }\n}\n", "import { metaData } from '@cornerstonejs/core';\nfunction convertLUTto8Bit(lut, shift) {\n    const numEntries = lut.length;\n    const cleanedLUT = new Uint8ClampedArray(numEntries);\n    for (let i = 0; i < numEntries; ++i) {\n        cleanedLUT[i] = lut[i] >> shift;\n    }\n    return cleanedLUT;\n}\nfunction fetchPaletteData(imageFrame, color, fallback) {\n    const data = imageFrame[`${color}PaletteColorLookupTableData`];\n    if (data) {\n        return Promise.resolve(data);\n    }\n    const result = metaData.get('imagePixelModule', imageFrame.imageId);\n    if (result && typeof result.then === 'function') {\n        return result.then((module) => module ? module[`${color}PaletteColorLookupTableData`] : fallback);\n    }\n    else {\n        return Promise.resolve(result ? result[`${color}PaletteColorLookupTableData`] : fallback);\n    }\n}\nexport default function (imageFrame, colorBuffer, useRGBA) {\n    const numPixels = imageFrame.columns * imageFrame.rows;\n    const pixelData = imageFrame.pixelData;\n    Promise.all([\n        fetchPaletteData(imageFrame, 'red', null),\n        fetchPaletteData(imageFrame, 'green', null),\n        fetchPaletteData(imageFrame, 'blue', null),\n    ]).then(([rData, gData, bData]) => {\n        if (!rData || !gData || !bData) {\n            throw new Error('The image does not have a complete color palette. R, G, and B palette data are required.');\n        }\n        const len = rData.length;\n        let palIndex = 0;\n        let bufferIndex = 0;\n        const start = imageFrame.redPaletteColorLookupTableDescriptor[1];\n        const shift = imageFrame.redPaletteColorLookupTableDescriptor[2] === 8 ? 0 : 8;\n        const rDataCleaned = convertLUTto8Bit(rData, shift);\n        const gDataCleaned = convertLUTto8Bit(gData, shift);\n        const bDataCleaned = convertLUTto8Bit(bData, shift);\n        if (useRGBA) {\n            for (let i = 0; i < numPixels; ++i) {\n                let value = pixelData[palIndex++];\n                if (value < start) {\n                    value = 0;\n                }\n                else if (value > start + len - 1) {\n                    value = len - 1;\n                }\n                else {\n                    value -= start;\n                }\n                colorBuffer[bufferIndex++] = rDataCleaned[value];\n                colorBuffer[bufferIndex++] = gDataCleaned[value];\n                colorBuffer[bufferIndex++] = bDataCleaned[value];\n                colorBuffer[bufferIndex++] = 255;\n            }\n            return;\n        }\n        for (let i = 0; i < numPixels; ++i) {\n            let value = pixelData[palIndex++];\n            if (value < start) {\n                value = 0;\n            }\n            else if (value > start + len - 1) {\n                value = len - 1;\n            }\n            else {\n                value -= start;\n            }\n            colorBuffer[bufferIndex++] = rDataCleaned[value];\n            colorBuffer[bufferIndex++] = gDataCleaned[value];\n            colorBuffer[bufferIndex++] = bDataCleaned[value];\n        }\n    });\n}\n", "function getLutDescriptor(dataSet, tag) {\n    if (!dataSet.elements[tag] || dataSet.elements[tag].length !== 6) {\n        return;\n    }\n    return [\n        dataSet.uint16(tag, 0),\n        dataSet.uint16(tag, 1),\n        dataSet.uint16(tag, 2),\n    ];\n}\nfunction getLutData(lutDataSet, tag, lutDescriptor) {\n    const lut = [];\n    const lutData = lutDataSet.elements[tag];\n    for (let i = 0; i < lutDescriptor[0]; i++) {\n        if (lutDescriptor[2] === 16) {\n            lut[i] = lutDataSet.uint16(tag, i);\n        }\n        else {\n            lut[i] = lutDataSet.byteArray[i + lutData.dataOffset];\n        }\n    }\n    return lut;\n}\nfunction populatePaletteColorLut(dataSet, imagePixelModule) {\n    imagePixelModule.redPaletteColorLookupTableDescriptor = getLutDescriptor(dataSet, 'x00281101');\n    imagePixelModule.greenPaletteColorLookupTableDescriptor = getLutDescriptor(dataSet, 'x00281102');\n    imagePixelModule.bluePaletteColorLookupTableDescriptor = getLutDescriptor(dataSet, 'x00281103');\n    if (imagePixelModule.redPaletteColorLookupTableDescriptor[0] === 0) {\n        imagePixelModule.redPaletteColorLookupTableDescriptor[0] = 65536;\n        imagePixelModule.greenPaletteColorLookupTableDescriptor[0] = 65536;\n        imagePixelModule.bluePaletteColorLookupTableDescriptor[0] = 65536;\n    }\n    const numLutEntries = imagePixelModule.redPaletteColorLookupTableDescriptor[0];\n    const lutData = dataSet.elements.x00281201;\n    const lutBitsAllocated = lutData.length === numLutEntries ? 8 : 16;\n    if (imagePixelModule.redPaletteColorLookupTableDescriptor[2] !==\n        lutBitsAllocated) {\n        imagePixelModule.redPaletteColorLookupTableDescriptor[2] = lutBitsAllocated;\n        imagePixelModule.greenPaletteColorLookupTableDescriptor[2] =\n            lutBitsAllocated;\n        imagePixelModule.bluePaletteColorLookupTableDescriptor[2] =\n            lutBitsAllocated;\n    }\n    imagePixelModule.redPaletteColorLookupTableData = getLutData(dataSet, 'x00281201', imagePixelModule.redPaletteColorLookupTableDescriptor);\n    imagePixelModule.greenPaletteColorLookupTableData = getLutData(dataSet, 'x00281202', imagePixelModule.greenPaletteColorLookupTableDescriptor);\n    imagePixelModule.bluePaletteColorLookupTableData = getLutData(dataSet, 'x00281203', imagePixelModule.bluePaletteColorLookupTableDescriptor);\n}\nfunction populateSmallestLargestPixelValues(dataSet, imagePixelModule) {\n    const pixelRepresentation = dataSet.uint16('x00280103');\n    if (pixelRepresentation === 0) {\n        imagePixelModule.smallestPixelValue = dataSet.uint16('x00280106');\n        imagePixelModule.largestPixelValue = dataSet.uint16('x00280107');\n    }\n    else {\n        imagePixelModule.smallestPixelValue = dataSet.int16('x00280106');\n        imagePixelModule.largestPixelValue = dataSet.int16('x00280107');\n    }\n}\nfunction getImagePixelModule(dataSet) {\n    const imagePixelModule = {\n        samplesPerPixel: dataSet.uint16('x00280002'),\n        photometricInterpretation: dataSet.string('x00280004'),\n        rows: dataSet.uint16('x00280010'),\n        columns: dataSet.uint16('x00280011'),\n        bitsAllocated: dataSet.uint16('x00280100'),\n        bitsStored: dataSet.uint16('x00280101'),\n        highBit: dataSet.uint16('x00280102'),\n        pixelRepresentation: dataSet.uint16('x00280103'),\n        planarConfiguration: dataSet.uint16('x00280006'),\n        pixelAspectRatio: dataSet.string('x00280034'),\n    };\n    populateSmallestLargestPixelValues(dataSet, imagePixelModule);\n    if (imagePixelModule.photometricInterpretation === 'PALETTE COLOR' &&\n        dataSet.elements.x00281101) {\n        populatePaletteColorLut(dataSet, imagePixelModule);\n    }\n    return imagePixelModule;\n}\nexport default getImagePixelModule;\n", "function getLUT(pixelRepresentation, lutDataSet) {\n    let numLUTEntries = lutDataSet.uint16('x00283002', 0);\n    if (numLUTEntries === 0) {\n        numLUTEntries = 65535;\n    }\n    let firstValueMapped = 0;\n    if (pixelRepresentation === 0) {\n        firstValueMapped = lutDataSet.uint16('x00283002', 1);\n    }\n    else {\n        firstValueMapped = lutDataSet.int16('x00283002', 1);\n    }\n    const numBitsPerEntry = lutDataSet.uint16('x00283002', 2);\n    const lut = {\n        id: '1',\n        firstValueMapped,\n        numBitsPerEntry,\n        lut: [],\n    };\n    for (let i = 0; i < numLUTEntries; i++) {\n        if (pixelRepresentation === 0) {\n            lut.lut[i] = lutDataSet.uint16('x00283006', i);\n        }\n        else {\n            lut.lut[i] = lutDataSet.int16('x00283006', i);\n        }\n    }\n    return lut;\n}\nfunction getLUTs(pixelRepresentation, lutSequence) {\n    if (!lutSequence || !lutSequence.items || !lutSequence.items.length) {\n        return;\n    }\n    const luts = [];\n    for (let i = 0; i < lutSequence.items.length; i++) {\n        const lutDataSet = lutSequence.items[i].dataSet;\n        const lut = getLUT(pixelRepresentation, lutDataSet);\n        if (lut) {\n            luts.push(lut);\n        }\n    }\n    return luts;\n}\nexport default getLUTs;\n", "function getMinStoredPixelValue(dataSet) {\n    const pixelRepresentation = dataSet.uint16('x00280103');\n    const bitsStored = dataSet.uint16('x00280101');\n    if (pixelRepresentation === 0) {\n        return 0;\n    }\n    return -1 << (bitsStored - 1);\n}\nfunction getModalityLUTOutputPixelRepresentation(dataSet) {\n    const sopClassUID = dataSet.string('x00080016');\n    if (sopClassUID === '1.2.840.10008.5.1.4.1.1.2' ||\n        sopClassUID === '1.2.840.10008.5.1.4.1.1.2.1') {\n        return 1;\n    }\n    const rescaleIntercept = dataSet.floatString('x00281052');\n    const rescaleSlope = dataSet.floatString('x00281053');\n    if (rescaleIntercept !== undefined && rescaleSlope !== undefined) {\n        const minStoredPixelValue = getMinStoredPixelValue(dataSet);\n        const minModalityLutValue = minStoredPixelValue * rescaleSlope + rescaleIntercept;\n        if (minModalityLutValue < 0) {\n            return 1;\n        }\n        return 0;\n    }\n    if (dataSet.elements.x00283000 && dataSet.elements.x00283000.length > 0) {\n        return 0;\n    }\n    return dataSet.uint16('x00280103');\n}\nexport default getModalityLUTOutputPixelRepresentation;\n", "function getNumberValues(dataSet, tag, minimumLength) {\n    const values = [];\n    const valueAsString = dataSet.string(tag);\n    if (!valueAsString) {\n        return;\n    }\n    const split = valueAsString.split('\\\\');\n    if (minimumLength && split.length < minimumLength) {\n        return;\n    }\n    for (let i = 0; i < split.length; i++) {\n        values.push(parseFloat(split[i]));\n    }\n    return values;\n}\nexport default getNumberValues;\n", "import { Enums } from '@cornerstonejs/core';\nimport * as dicomParser from 'dicom-parser';\nimport getNumberValues from './getNumberValues';\nimport parseImageId from '../parseImageId';\nimport dataSetCacheManager from '../dataSetCacheManager';\nimport getImagePixelModule from './getImagePixelModule';\nimport getOverlayPlaneModule from './getOverlayPlaneModule';\nimport getLUTs from './getLUTs';\nimport getModalityLUTOutputPixelRepresentation from './getModalityLUTOutputPixelRepresentation';\nimport { getDirectFrameInformation } from '../combineFrameInstanceDataset';\nimport multiframeDataset from '../retrieveMultiframeDataset';\nimport { getImageTypeSubItemFromDataset, extractOrientationFromDataset, extractPositionFromDataset, extractSpacingFromDataset, extractSliceThicknessFromDataset, } from './extractPositioningFromDataset';\nimport isNMReconstructable from '../../isNMReconstructable';\nimport { getInstanceModule, instanceModuleNames, } from '../../getInstanceModule';\nimport { getUSEnhancedRegions } from './USHelpers';\nfunction metaDataProvider(type, imageId) {\n    const { MetadataModules } = Enums;\n    if (Array.isArray(imageId)) {\n        return;\n    }\n    const parsedImageId = parseImageId(imageId);\n    if (type === MetadataModules.MULTIFRAME) {\n        const multiframeData = multiframeDataset.retrieveMultiframeDataset(parsedImageId.url);\n        if (!multiframeData.dataSet) {\n            return;\n        }\n        const multiframeInfo = getDirectFrameInformation(multiframeData.dataSet, multiframeData.frame);\n        return multiframeInfo;\n    }\n    let url = parsedImageId.url;\n    if (parsedImageId.frame) {\n        url = `${url}&frame=${parsedImageId.frame}`;\n    }\n    const dataSet = dataSetCacheManager.get(url);\n    if (!dataSet) {\n        return;\n    }\n    return metadataForDataset(type, imageId, dataSet);\n}\nexport function metadataForDataset(type, imageId, dataSet) {\n    const { MetadataModules } = Enums;\n    if (type === MetadataModules.GENERAL_STUDY) {\n        return {\n            studyDescription: dataSet.string('x00081030'),\n            studyDate: dicomParser.parseDA(dataSet.string('x00080020')),\n            studyTime: dicomParser.parseTM(dataSet.string('x00080030') || ''),\n            accessionNumber: dataSet.string('x00080050'),\n        };\n    }\n    if (type === MetadataModules.GENERAL_SERIES) {\n        return {\n            modality: dataSet.string('x00080060'),\n            seriesInstanceUID: dataSet.string('x0020000e'),\n            seriesDescription: dataSet.string('x0008103e'),\n            seriesNumber: dataSet.intString('x00200011'),\n            studyInstanceUID: dataSet.string('x0020000d'),\n            seriesDate: dicomParser.parseDA(dataSet.string('x00080021')),\n            seriesTime: dicomParser.parseTM(dataSet.string('x00080031') || ''),\n            acquisitionDate: dicomParser.parseDA(dataSet.string('x00080022')),\n            acquisitionTime: dicomParser.parseTM(dataSet.string('x00080032') || ''),\n        };\n    }\n    if (type === MetadataModules.GENERAL_IMAGE) {\n        return {\n            sopInstanceUID: dataSet.string('x00080018'),\n            instanceNumber: dataSet.intString('x00200013'),\n            lossyImageCompression: dataSet.string('x00282110'),\n            lossyImageCompressionRatio: dataSet.floatString('x00282112'),\n            lossyImageCompressionMethod: dataSet.string('x00282114'),\n        };\n    }\n    if (type === MetadataModules.PATIENT) {\n        return {\n            patientID: dataSet.string('x00100020'),\n            patientName: dataSet.string('x00100010'),\n        };\n    }\n    if (type === MetadataModules.PATIENT_STUDY) {\n        return {\n            patientAge: dataSet.intString('x00101010'),\n            patientSize: dataSet.floatString('x00101020'),\n            patientSex: dataSet.string('x00100040'),\n            patientWeight: dataSet.floatString('x00101030'),\n        };\n    }\n    if (type === MetadataModules.NM_MULTIFRAME_GEOMETRY) {\n        const modality = dataSet.string('x00080060');\n        const imageSubType = getImageTypeSubItemFromDataset(dataSet, 2);\n        return {\n            modality,\n            imageType: dataSet.string('x00080008'),\n            imageSubType,\n            imageOrientationPatient: extractOrientationFromDataset(dataSet),\n            imagePositionPatient: extractPositionFromDataset(dataSet),\n            sliceThickness: extractSliceThicknessFromDataset(dataSet),\n            pixelSpacing: extractSpacingFromDataset(dataSet),\n            numberOfFrames: dataSet.uint16('x00280008'),\n            isNMReconstructable: isNMReconstructable(imageSubType) && modality.includes('NM'),\n        };\n    }\n    if (type === MetadataModules.IMAGE_PLANE) {\n        const imageOrientationPatient = extractOrientationFromDataset(dataSet);\n        const imagePositionPatient = extractPositionFromDataset(dataSet);\n        const pixelSpacing = extractSpacingFromDataset(dataSet);\n        const sliceThickness = extractSliceThicknessFromDataset(dataSet);\n        let columnPixelSpacing = null;\n        let rowPixelSpacing = null;\n        if (pixelSpacing) {\n            rowPixelSpacing = pixelSpacing[0];\n            columnPixelSpacing = pixelSpacing[1];\n        }\n        let rowCosines = null;\n        let columnCosines = null;\n        if (imageOrientationPatient) {\n            rowCosines = [\n                parseFloat(imageOrientationPatient[0]),\n                parseFloat(imageOrientationPatient[1]),\n                parseFloat(imageOrientationPatient[2]),\n            ];\n            columnCosines = [\n                parseFloat(imageOrientationPatient[3]),\n                parseFloat(imageOrientationPatient[4]),\n                parseFloat(imageOrientationPatient[5]),\n            ];\n        }\n        return {\n            frameOfReferenceUID: dataSet.string('x00200052'),\n            rows: dataSet.uint16('x00280010'),\n            columns: dataSet.uint16('x00280011'),\n            imageOrientationPatient,\n            rowCosines,\n            columnCosines,\n            imagePositionPatient,\n            sliceThickness,\n            sliceLocation: dataSet.floatString('x00201041'),\n            pixelSpacing,\n            rowPixelSpacing,\n            columnPixelSpacing,\n        };\n    }\n    if (type === MetadataModules.CINE) {\n        return {\n            frameTime: dataSet.floatString('x00181063'),\n        };\n    }\n    if (type === MetadataModules.IMAGE_PIXEL) {\n        return getImagePixelModule(dataSet);\n    }\n    if (type === MetadataModules.VOI_LUT) {\n        const modalityLUTOutputPixelRepresentation = getModalityLUTOutputPixelRepresentation(dataSet);\n        return {\n            windowCenter: getNumberValues(dataSet, 'x00281050', 1),\n            windowWidth: getNumberValues(dataSet, 'x00281051', 1),\n            voiLUTSequence: getLUTs(modalityLUTOutputPixelRepresentation, dataSet.elements.x00283010),\n            voiLUTFunction: dataSet.string('x00281056'),\n        };\n    }\n    if (type === MetadataModules.MODALITY_LUT) {\n        return {\n            rescaleIntercept: dataSet.floatString('x00281052'),\n            rescaleSlope: dataSet.floatString('x00281053'),\n            rescaleType: dataSet.string('x00281054'),\n            modalityLUTSequence: getLUTs(dataSet.uint16('x00280103'), dataSet.elements.x00283000),\n        };\n    }\n    if (type === MetadataModules.SOP_COMMON) {\n        return {\n            sopClassUID: dataSet.string('x00080016'),\n            sopInstanceUID: dataSet.string('x00080018'),\n        };\n    }\n    if (type === MetadataModules.PET_ISOTOPE) {\n        const radiopharmaceuticalInfo = dataSet.elements.x00540016;\n        if (radiopharmaceuticalInfo === undefined) {\n            return;\n        }\n        const firstRadiopharmaceuticalInfoDataSet = radiopharmaceuticalInfo.items[0].dataSet;\n        return {\n            radiopharmaceuticalInfo: {\n                radiopharmaceuticalStartTime: dicomParser.parseTM(firstRadiopharmaceuticalInfoDataSet.string('x00181072') || ''),\n                radionuclideTotalDose: firstRadiopharmaceuticalInfoDataSet.floatString('x00181074'),\n                radionuclideHalfLife: firstRadiopharmaceuticalInfoDataSet.floatString('x00181075'),\n            },\n        };\n    }\n    if (type === MetadataModules.OVERLAY_PLANE) {\n        return getOverlayPlaneModule(dataSet);\n    }\n    if (type === 'transferSyntax') {\n        let transferSyntaxUID;\n        try {\n            transferSyntaxUID = dataSet.string('x00020010');\n        }\n        catch (error) {\n        }\n        return {\n            transferSyntaxUID,\n        };\n    }\n    if (type === MetadataModules.PET_SERIES) {\n        return {\n            correctedImage: dataSet.string('x00280051'),\n            units: dataSet.string('x00541001'),\n            decayCorrection: dataSet.string('x00541102'),\n        };\n    }\n    if (type === MetadataModules.PET_IMAGE) {\n        return {\n            frameReferenceTime: dataSet.floatString(dataSet.string('x00541300') || ''),\n            actualFrameDuration: dataSet.intString(dataSet.string('x00181242')),\n        };\n    }\n    if (type === MetadataModules.ULTRASOUND_ENHANCED_REGION) {\n        return getUSEnhancedRegions(dataSet);\n    }\n    if (type === MetadataModules.CALIBRATION) {\n        const modality = dataSet.string('x00080060');\n        if (modality === 'US') {\n            const enhancedRegion = getUSEnhancedRegions(dataSet);\n            return {\n                sequenceOfUltrasoundRegions: enhancedRegion,\n            };\n        }\n    }\n    if (type === 'instance') {\n        return getInstanceModule(imageId, metaDataProvider, instanceModuleNames);\n    }\n}\nexport default metaDataProvider;\n", "function parseImageId(imageId) {\n    const firstColonIndex = imageId.indexOf(':');\n    let url = imageId.substring(firstColonIndex + 1);\n    const frameIndex = url.indexOf('frame=');\n    let frame;\n    if (frameIndex !== -1) {\n        const frameStr = url.substring(frameIndex + 6);\n        frame = parseInt(frameStr, 10);\n        url = url.substring(0, frameIndex - 1);\n    }\n    const scheme = imageId.substring(0, firstColonIndex);\n    const adjustedFrame = frame !== undefined ? frame - 1 : undefined;\n    return {\n        scheme,\n        url,\n        frame,\n        pixelDataFrame: adjustedFrame,\n    };\n}\nexport default parseImageId;\n", "import * as dicomParser from 'dicom-parser';\nimport { xhrRequest } from '../internal/index';\nimport dataSetFromPartialContent from './dataset-from-partial-content';\nimport { combineFrameInstanceDataset } from './combineFrameInstanceDataset';\nimport multiframeDataset from './retrieveMultiframeDataset';\nimport { loadedDataSets, purgeLoadedDataSets } from './loadedDataSets';\nimport { eventTarget, triggerEvent } from '@cornerstonejs/core';\nlet cacheSizeInBytes = 0;\nlet promises = {};\nfunction isLoaded(uri) {\n    return loadedDataSets[uri] !== undefined;\n}\nfunction get(uri) {\n    let dataSet;\n    if (uri.includes('&frame=')) {\n        const { frame, dataSet: multiframeDataSet } = multiframeDataset.retrieveMultiframeDataset(uri);\n        dataSet = combineFrameInstanceDataset(frame, multiframeDataSet);\n    }\n    else if (loadedDataSets[uri]) {\n        dataSet = loadedDataSets[uri].dataSet;\n    }\n    return dataSet;\n}\nfunction update(uri, dataSet) {\n    const loadedDataSet = loadedDataSets[uri];\n    if (!loadedDataSet) {\n        console.error(`No loaded dataSet for uri ${uri}`);\n        return;\n    }\n    cacheSizeInBytes -= loadedDataSet.dataSet.byteArray.length;\n    loadedDataSet.dataSet = dataSet;\n    cacheSizeInBytes += dataSet.byteArray.length;\n    triggerEvent(eventTarget, 'datasetscachechanged', {\n        uri,\n        action: 'updated',\n        cacheInfo: getInfo(),\n    });\n}\nfunction load(uri, loadRequest = xhrRequest, imageId) {\n    if (loadedDataSets[uri]) {\n        return new Promise((resolve) => {\n            loadedDataSets[uri].cacheCount++;\n            resolve(loadedDataSets[uri].dataSet);\n        });\n    }\n    if (promises[uri]) {\n        promises[uri].cacheCount++;\n        return promises[uri];\n    }\n    const loadDICOMPromise = loadRequest(uri, imageId);\n    const promise = new Promise((resolve, reject) => {\n        loadDICOMPromise\n            .then(async function (dicomPart10AsArrayBuffer) {\n            const partialContent = {\n                isPartialContent: false,\n                fileTotalLength: null,\n            };\n            if (!(dicomPart10AsArrayBuffer instanceof ArrayBuffer)) {\n                if (!dicomPart10AsArrayBuffer.arrayBuffer) {\n                    return reject(new Error('If not returning ArrayBuffer, must return object with `arrayBuffer` parameter'));\n                }\n                partialContent.isPartialContent =\n                    dicomPart10AsArrayBuffer.flags.isPartialContent;\n                partialContent.fileTotalLength =\n                    dicomPart10AsArrayBuffer.flags.fileTotalLength;\n                dicomPart10AsArrayBuffer = dicomPart10AsArrayBuffer.arrayBuffer;\n            }\n            const byteArray = new Uint8Array(dicomPart10AsArrayBuffer);\n            let dataSet;\n            try {\n                if (partialContent.isPartialContent) {\n                    dataSet = await dataSetFromPartialContent(byteArray, loadRequest, {\n                        uri,\n                        imageId,\n                        fileTotalLength: partialContent.fileTotalLength,\n                    });\n                }\n                else {\n                    dataSet = dicomParser.parseDicom(byteArray);\n                }\n            }\n            catch (error) {\n                return reject(error);\n            }\n            loadedDataSets[uri] = {\n                dataSet,\n                cacheCount: promise.cacheCount,\n            };\n            cacheSizeInBytes += dataSet.byteArray.length;\n            resolve(dataSet);\n            triggerEvent(eventTarget, 'datasetscachechanged', {\n                uri,\n                action: 'loaded',\n                cacheInfo: getInfo(),\n            });\n        }, reject)\n            .then(() => {\n            delete promises[uri];\n        }, () => {\n            delete promises[uri];\n        });\n    });\n    promise.cacheCount = 1;\n    promises[uri] = promise;\n    return promise;\n}\nfunction unload(uri) {\n    if (loadedDataSets[uri]) {\n        loadedDataSets[uri].cacheCount--;\n        if (loadedDataSets[uri].cacheCount === 0) {\n            cacheSizeInBytes -= loadedDataSets[uri].dataSet.byteArray.length;\n            delete loadedDataSets[uri];\n            triggerEvent(eventTarget, 'datasetscachechanged', {\n                uri,\n                action: 'unloaded',\n                cacheInfo: getInfo(),\n            });\n        }\n    }\n}\nexport function getInfo() {\n    return {\n        cacheSizeInBytes,\n        numberOfDataSetsCached: Object.keys(loadedDataSets).length,\n    };\n}\nfunction purge() {\n    purgeLoadedDataSets();\n    promises = {};\n    cacheSizeInBytes = 0;\n}\nexport default {\n    isLoaded,\n    load,\n    unload,\n    getInfo,\n    purge,\n    get,\n    update,\n};\nexport { loadedDataSets };\n", "let options = {\n    open(xhr, url) {\n        xhr.open('get', url, true);\n    },\n    beforeSend() {\n    },\n    beforeProcessing(xhr) {\n        return Promise.resolve(xhr.response);\n    },\n    imageCreated() {\n    },\n    strict: false,\n};\nexport function setOptions(newOptions) {\n    options = Object.assign(options, newOptions);\n}\nexport function getOptions() {\n    return options;\n}\n", "import { getOptions } from './options';\nimport { triggerEvent, eventTarget } from '@cornerstonejs/core';\nfunction xhrRequest(url, imageId, defaultHeaders = {}, params = {}) {\n    const options = getOptions();\n    const errorInterceptor = (xhr) => {\n        if (typeof options.errorInterceptor === 'function') {\n            const error = new Error('request failed');\n            error.request = xhr;\n            error.response = xhr.response;\n            error.status = xhr.status;\n            options.errorInterceptor(error);\n        }\n    };\n    const xhr = new XMLHttpRequest();\n    const promise = new Promise((resolve, reject) => {\n        options.open(xhr, url, defaultHeaders, params);\n        const beforeSendHeaders = options.beforeSend(xhr, imageId, defaultHeaders, params);\n        xhr.responseType = 'arraybuffer';\n        const headers = Object.assign({}, defaultHeaders, beforeSendHeaders);\n        Object.keys(headers).forEach(function (key) {\n            if (headers[key] === null) {\n                return;\n            }\n            if (key === 'Accept' && url.indexOf('accept=') !== -1) {\n                return;\n            }\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        params.deferred = {\n            resolve,\n            reject,\n        };\n        params.url = url;\n        params.imageId = imageId;\n        xhr.onloadstart = function (event) {\n            if (options.onloadstart) {\n                options.onloadstart(event, params);\n            }\n            const eventData = {\n                url,\n                imageId,\n            };\n            triggerEvent(eventTarget, 'cornerstoneimageloadstart', eventData);\n        };\n        xhr.onloadend = function (event) {\n            if (options.onloadend) {\n                options.onloadend(event, params);\n            }\n            const eventData = {\n                url,\n                imageId,\n            };\n            triggerEvent(eventTarget, 'cornerstoneimageloadend', eventData);\n        };\n        xhr.onreadystatechange = function (event) {\n            if (options.onreadystatechange) {\n                options.onreadystatechange(event, params);\n            }\n            if (xhr.readyState === 4) {\n                if (xhr.status === 200 || xhr.status === 206) {\n                    options\n                        .beforeProcessing(xhr)\n                        .then(resolve)\n                        .catch(() => {\n                        errorInterceptor(xhr);\n                        reject(xhr);\n                    });\n                }\n                else {\n                    errorInterceptor(xhr);\n                    reject(xhr);\n                }\n            }\n        };\n        xhr.onprogress = function (oProgress) {\n            const loaded = oProgress.loaded;\n            let total;\n            let percentComplete;\n            if (oProgress.lengthComputable) {\n                total = oProgress.total;\n                percentComplete = Math.round((loaded / total) * 100);\n            }\n            const eventData = {\n                url,\n                imageId,\n                loaded,\n                total,\n                percentComplete,\n            };\n            triggerEvent(eventTarget, 'cornerstoneimageloadprogress', eventData);\n            if (options.onprogress) {\n                options.onprogress(oProgress, params);\n            }\n        };\n        xhr.onerror = function () {\n            errorInterceptor(xhr);\n            reject(xhr);\n        };\n        xhr.onabort = function () {\n            errorInterceptor(xhr);\n            reject(xhr);\n        };\n        xhr.send();\n    });\n    promise.xhr = xhr;\n    return promise;\n}\nexport default xhrRequest;\n", "function checkToken(token, data, dataOffset) {\n    if (dataOffset + token.length > data.length) {\n        return false;\n    }\n    let endIndex = dataOffset;\n    for (let i = 0; i < token.length; i++) {\n        if (token[i] !== data[endIndex++]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction stringToUint8Array(str) {\n    const uint = new Uint8Array(str.length);\n    for (let i = 0, j = str.length; i < j; i++) {\n        uint[i] = str.charCodeAt(i);\n    }\n    return uint;\n}\nfunction findIndexOfString(data, str, offset) {\n    offset = offset || 0;\n    const token = stringToUint8Array(str);\n    for (let i = offset; i < data.length; i++) {\n        if (token[0] === data[i]) {\n            if (checkToken(token, data, i)) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\nexport default findIndexOfString;\n", "import { Enums } from '@cornerstonejs/core';\nimport findIndexOfString from './findIndexOfString';\nconst { ImageQualityStatus } = Enums;\nexport default function extractMultipart(contentType, imageFrameAsArrayBuffer, options) {\n    options ||= {};\n    const response = new Uint8Array(imageFrameAsArrayBuffer);\n    const isPartial = !!options?.isPartial;\n    if (contentType.indexOf('multipart') === -1) {\n        return {\n            contentType,\n            imageQualityStatus: isPartial\n                ? ImageQualityStatus.SUBRESOLUTION\n                : ImageQualityStatus.FULL_RESOLUTION,\n            pixelData: response,\n        };\n    }\n    let { tokenIndex, responseHeaders, boundary, multipartContentType } = options;\n    tokenIndex ||= findIndexOfString(response, '\\r\\n\\r\\n');\n    if (tokenIndex === -1) {\n        throw new Error('invalid response - no multipart mime header');\n    }\n    if (!boundary) {\n        const header = uint8ArrayToString(response, 0, tokenIndex);\n        responseHeaders = header.split('\\r\\n');\n        boundary = findBoundary(responseHeaders);\n        if (!boundary) {\n            throw new Error('invalid response - no boundary marker');\n        }\n    }\n    const offset = tokenIndex + 4;\n    const endIndex = findIndexOfString(response, boundary, offset);\n    if (endIndex === -1 && !isPartial) {\n        throw new Error('invalid response - terminating boundary not found');\n    }\n    multipartContentType ||= findContentType(responseHeaders);\n    options.tokenIndex = tokenIndex;\n    options.boundary = boundary;\n    options.responseHeaders = responseHeaders;\n    options.multipartContentType = multipartContentType;\n    options.isPartial = endIndex === -1;\n    return {\n        contentType: multipartContentType,\n        extractDone: !isPartial || endIndex !== -1,\n        tokenIndex,\n        responseHeaders,\n        boundary,\n        multipartContentType,\n        pixelData: imageFrameAsArrayBuffer.slice(offset, endIndex - 2),\n    };\n}\nexport function findBoundary(header) {\n    for (let i = 0; i < header.length; i++) {\n        if (header[i].substr(0, 2) === '--') {\n            return header[i];\n        }\n    }\n}\nexport function findContentType(header) {\n    for (let i = 0; i < header.length; i++) {\n        if (header[i].substr(0, 13) === 'Content-Type:') {\n            return header[i].substr(13).trim();\n        }\n    }\n}\nexport function uint8ArrayToString(data, offset, length) {\n    offset = offset || 0;\n    length = length || data.length - offset;\n    let str = '';\n    for (let i = offset; i < offset + length; i++) {\n        str += String.fromCharCode(data[i]);\n    }\n    return str;\n}\n", "import { Enums } from '@cornerstonejs/core';\nconst { ImageQualityStatus } = Enums;\nexport function getImageQualityStatus(retrieveOptions, done = true) {\n    if (!done) {\n        return ImageQualityStatus.SUBRESOLUTION;\n    }\n    return (retrieveOptions.imageQualityStatus ?? ImageQualityStatus.FULL_RESOLUTION);\n}\n", "import { utilities } from '@cornerstonejs/core';\nimport { getOptions } from './options';\nimport extractMultipart from '../wadors/extractMultipart';\nimport { getImageQualityStatus } from '../wadors/getImageQualityStatus';\nconst { ProgressiveIterator } = utilities;\nexport default function streamRequest(url, imageId, defaultHeaders = {}, options = {}) {\n    const globalOptions = getOptions();\n    const { retrieveOptions = {}, streamingData = {}, } = options;\n    const minChunkSize = retrieveOptions.minChunkSize || 128 * 1024;\n    const errorInterceptor = (err) => {\n        if (typeof globalOptions.errorInterceptor === 'function') {\n            const error = new Error('request failed');\n            globalOptions.errorInterceptor(error);\n        }\n    };\n    const loadIterator = new ProgressiveIterator('streamRequest');\n    loadIterator.generate(async (iterator, reject) => {\n        const beforeSendHeaders = globalOptions.beforeSend?.(null, url, defaultHeaders, {});\n        const headers = Object.assign({}, defaultHeaders, beforeSendHeaders);\n        Object.keys(headers).forEach(function (key) {\n            if (headers[key] === null) {\n                headers[key] = undefined;\n            }\n            if (key === 'Accept' && url.indexOf('accept=') !== -1) {\n                headers[key] = undefined;\n            }\n        });\n        try {\n            const response = await fetch(url, {\n                headers,\n                signal: undefined,\n            });\n            if (response.status !== 200) {\n                throw new Error(`Couldn't retrieve ${url} got status ${response.status}`);\n            }\n            const responseReader = response.body.getReader();\n            const responseHeaders = response.headers;\n            const contentType = responseHeaders.get('content-type');\n            const totalBytes = Number(responseHeaders.get('Content-Length'));\n            let readDone = false;\n            let encodedData = streamingData.encodedData;\n            let lastSize = streamingData.lastSize || 0;\n            streamingData.isPartial = true;\n            while (!readDone) {\n                const { done, value } = await responseReader.read();\n                encodedData = appendChunk(encodedData, value);\n                if (!encodedData) {\n                    if (readDone) {\n                        throw new Error(`Done but no image frame available ${imageId}`);\n                    }\n                    continue;\n                }\n                readDone = done || encodedData.byteLength === totalBytes;\n                if (!readDone && encodedData.length < lastSize + minChunkSize) {\n                    continue;\n                }\n                lastSize = encodedData.length;\n                streamingData.isPartial = !done;\n                const extracted = extractMultipart(contentType, encodedData, streamingData);\n                const imageQualityStatus = getImageQualityStatus(retrieveOptions, readDone);\n                const detail = {\n                    url,\n                    imageId,\n                    ...extracted,\n                    percentComplete: done\n                        ? 100\n                        : (extracted.pixelData?.length * 100) / totalBytes,\n                    imageQualityStatus,\n                    done: readDone,\n                };\n                iterator.add(detail, readDone);\n            }\n        }\n        catch (err) {\n            errorInterceptor(err);\n            console.error(err);\n            reject(err);\n        }\n    });\n    return loadIterator.getNextPromise();\n}\nfunction appendChunk(existing, chunk) {\n    if (!existing) {\n        return chunk;\n    }\n    if (!chunk) {\n        return existing;\n    }\n    const newDataArray = new Uint8Array(existing.length + chunk.length);\n    newDataArray.set(existing, 0);\n    newDataArray.set(chunk, existing.length);\n    return newDataArray;\n}\n", "import { default as xhrRequest } from './xhrRequest';\nimport { default as streamRequest } from './streamRequest';\nimport { setOptions, getOptions } from './options';\nconst internal = {\n    xhrRequest,\n    streamRequest,\n    setOptions,\n    getOptions,\n};\nexport { setOptions, getOptions, xhrRequest, internal, streamRequest };\n", "import * as dicomParser from 'dicom-parser';\nfunction fixFragments(dataSet) {\n    const fragments = dataSet.elements.x7fe00010.fragments;\n    const totalLength = dataSet.byteArray.length;\n    for (const fragment of fragments) {\n        const { position, length } = fragment;\n        if (length > totalLength - position) {\n            console.log(`Truncated fragment, changing fragment length from ${fragment.length} to ${totalLength - position}`);\n            fragment.length = totalLength - position;\n        }\n    }\n    return dataSet;\n}\nfunction parsePartialByteArray(byteArray) {\n    let dataSet = dicomParser.parseDicom(byteArray, {\n        untilTag: 'x7fe00010',\n    });\n    if (!dataSet.elements.x7fe00010) {\n        console.warn('Pixel data not found!');\n    }\n    let pixelDataSet;\n    try {\n        pixelDataSet = dicomParser.parseDicom(byteArray);\n    }\n    catch (err) {\n        console.error(err);\n        console.log('pixel data dataset:', err.dataSet);\n        pixelDataSet = err.dataSet;\n    }\n    dataSet.elements.x7fe00010 = pixelDataSet.elements.x7fe00010;\n    dataSet = fixFragments(dataSet);\n    return dataSet;\n}\nexport default async function dataSetFromPartialContent(byteArray, loadRequest, metadata) {\n    const dataSet = parsePartialByteArray(byteArray);\n    const { uri, imageId, fileTotalLength } = metadata;\n    dataSet.fetchMore = async function (fetchOptions) {\n        const _options = Object.assign({\n            uri,\n            imageId,\n            fetchedLength: byteArray.length,\n            lengthToFetch: fileTotalLength - byteArray.length,\n        }, fetchOptions);\n        const { fetchedLength, lengthToFetch } = _options;\n        const { arrayBuffer } = await loadRequest(uri, imageId, {\n            byteRange: `${fetchedLength}-${fetchedLength + lengthToFetch}`,\n        });\n        const byteArrayToAppend = new Uint8Array(arrayBuffer);\n        const combinedByteArray = new Uint8Array(dataSet.byteArray.length + byteArrayToAppend.length);\n        combinedByteArray.set(dataSet.byteArray);\n        combinedByteArray.set(byteArrayToAppend, dataSet.byteArray.length);\n        return dataSetFromPartialContent(combinedByteArray, loadRequest, metadata);\n    };\n    return dataSet;\n}\n", "function getDirectFrameInformation(dataSet, frame) {\n    if (!dataSet) {\n        return;\n    }\n    const { NumberOfFrames, PerFrameFunctionalGroupsSequence, SharedFunctionalGroupsSequence, } = getMultiframeInformation(dataSet);\n    if (PerFrameFunctionalGroupsSequence || NumberOfFrames > 1) {\n        const { shared, perFrame } = getFrameInformation(PerFrameFunctionalGroupsSequence, SharedFunctionalGroupsSequence, frame);\n        return {\n            NumberOfFrames,\n            PerFrameFunctionalInformation: perFrame,\n            SharedFunctionalInformation: shared,\n        };\n    }\n    return {\n        NumberOfFrames,\n    };\n}\nfunction getFrameInformation(PerFrameFunctionalGroupsSequence, SharedFunctionalGroupsSequence, frameNumber) {\n    const shared = {};\n    (SharedFunctionalGroupsSequence\n        ? Object.values(SharedFunctionalGroupsSequence.items[0].dataSet.elements)\n        : [])\n        .map((it) => (shared[it.tag] = it));\n    const perFrame = {};\n    (PerFrameFunctionalGroupsSequence\n        ? Object.values(PerFrameFunctionalGroupsSequence.items[frameNumber - 1].dataSet.elements)\n        : [])\n        .map((it) => (perFrame[it.tag] = it));\n    return {\n        shared,\n        perFrame,\n    };\n}\nfunction getMultiframeInformation(dataSet) {\n    if (!dataSet) {\n        return;\n    }\n    const { elements, ...otherAttributtes } = dataSet;\n    const { x52009230: PerFrameFunctionalGroupsSequence, x52009229: SharedFunctionalGroupsSequence, ...otherElements } = elements;\n    const NumberOfFrames = dataSet.intString('x00280008');\n    return {\n        NumberOfFrames,\n        PerFrameFunctionalGroupsSequence,\n        SharedFunctionalGroupsSequence,\n        otherElements,\n        otherAttributtes,\n    };\n}\nfunction combineFrameInstanceDataset(frameNumber, dataSet) {\n    if (!dataSet) {\n        return;\n    }\n    const { NumberOfFrames, PerFrameFunctionalGroupsSequence, SharedFunctionalGroupsSequence, otherElements, } = getMultiframeInformation(dataSet);\n    if (PerFrameFunctionalGroupsSequence || NumberOfFrames > 1) {\n        const { shared, perFrame } = getFrameInformation(PerFrameFunctionalGroupsSequence, SharedFunctionalGroupsSequence, frameNumber);\n        const newElements = {\n            elements: {\n                ...otherElements,\n                ...shared,\n                ...perFrame,\n            },\n        };\n        const clonedDataset = Object.create(dataSet);\n        const newDataset = Object.assign(clonedDataset, newElements);\n        return newDataset;\n    }\n    return dataSet;\n}\nexport { combineFrameInstanceDataset, getMultiframeInformation, getFrameInformation, getDirectFrameInformation, };\n", "let loadedDataSets = {};\nconst purgeLoadedDataSets = () => {\n    loadedDataSets = {};\n};\nexport { loadedDataSets, purgeLoadedDataSets };\n", "import { loadedDataSets } from './loadedDataSets';\nfunction _get(uri) {\n    if (!loadedDataSets[uri]) {\n        return;\n    }\n    return loadedDataSets[uri];\n}\nfunction isMultiframeDataset(uri) {\n    const dataSet = _get(uri);\n    return _isMultiframeDataset(dataSet);\n}\nfunction _isMultiframeDataset(dataSet) {\n    if (!dataSet) {\n        return false;\n    }\n    const numberOfFrames = dataSet.intString('x00280008');\n    return numberOfFrames && numberOfFrames > 1;\n}\nfunction retrieveFrameParameterIndex(uri) {\n    return uri.indexOf('&frame=');\n}\nfunction retrieveMultiframeDataset(uri) {\n    const frameParameterIndex = retrieveFrameParameterIndex(uri);\n    const multiframeURI = frameParameterIndex === -1 ? uri : uri.slice(0, frameParameterIndex);\n    const frame = parseInt(uri.slice(frameParameterIndex + 7), 10) || 1;\n    let dataSet;\n    if (loadedDataSets[multiframeURI]) {\n        dataSet = loadedDataSets[multiframeURI].dataSet;\n    }\n    else {\n        dataSet = undefined;\n    }\n    return {\n        dataSet,\n        frame,\n    };\n}\nfunction generateMultiframeWADOURIs(uri) {\n    const listWADOURIs = [];\n    const dataSet = _get(uri);\n    if (_isMultiframeDataset(dataSet)) {\n        const numberOfFrames = dataSet.intString('x00280008');\n        for (let i = 1; i <= numberOfFrames; i++) {\n            listWADOURIs.push(`${uri}&frame=${i}`);\n        }\n    }\n    else {\n        listWADOURIs.push(uri);\n    }\n    return listWADOURIs;\n}\nexport default {\n    _get,\n    generateMultiframeWADOURIs,\n    retrieveMultiframeDataset,\n    isMultiframeDataset,\n};\n", "export default function getOverlayPlaneModule(dataSet) {\n    const overlays = [];\n    for (let overlayGroup = 0x00; overlayGroup <= 0x1e; overlayGroup += 0x02) {\n        let groupStr = `x60${overlayGroup.toString(16)}`;\n        if (groupStr.length === 4) {\n            groupStr = `x600${overlayGroup.toString(16)}`;\n        }\n        const data = dataSet.elements[`${groupStr}3000`];\n        if (!data) {\n            continue;\n        }\n        const pixelData = [];\n        for (let i = 0; i < data.length; i++) {\n            for (let k = 0; k < 8; k++) {\n                const byte_as_int = dataSet.byteArray[data.dataOffset + i];\n                pixelData[i * 8 + k] = (byte_as_int >> k) & 0b1;\n            }\n        }\n        overlays.push({\n            rows: dataSet.uint16(`${groupStr}0010`),\n            columns: dataSet.uint16(`${groupStr}0011`),\n            type: dataSet.string(`${groupStr}0040`),\n            x: dataSet.int16(`${groupStr}0050`, 1) - 1,\n            y: dataSet.int16(`${groupStr}0050`, 0) - 1,\n            pixelData,\n            description: dataSet.string(`${groupStr}0022`),\n            label: dataSet.string(`${groupStr}1500`),\n            roiArea: dataSet.string(`${groupStr}1301`),\n            roiMean: dataSet.string(`${groupStr}1302`),\n            roiStandardDeviation: dataSet.string(`${groupStr}1303`),\n        });\n    }\n    return {\n        overlays,\n    };\n}\n", "export default function isNMReconstructable(imageSubType) {\n    return imageSubType === 'RECON TOMO' || imageSubType === 'RECON GATED TOMO';\n}\n", "import getNumberValues from './getNumberValues';\nimport isNMReconstructable from '../../isNMReconstructable';\nfunction getImageTypeSubItemFromDataset(dataSet, index) {\n    const imageType = dataSet.string('x00080008');\n    if (imageType) {\n        const subTypes = imageType.split('\\\\');\n        if (subTypes.length > index) {\n            return subTypes[index];\n        }\n    }\n    return undefined;\n}\nfunction extractOrientationFromNMMultiframeDataset(dataSet) {\n    let imageOrientationPatient;\n    const modality = dataSet.string('x00080060');\n    if (modality?.includes('NM')) {\n        const imageSubType = getImageTypeSubItemFromDataset(dataSet, 2);\n        if (imageSubType && isNMReconstructable(imageSubType)) {\n            if (dataSet.elements.x00540022) {\n                imageOrientationPatient = getNumberValues(dataSet.elements.x00540022.items[0].dataSet, 'x00200037', 6);\n            }\n        }\n    }\n    return imageOrientationPatient;\n}\nfunction extractPositionFromNMMultiframeDataset(dataSet) {\n    let imagePositionPatient;\n    const modality = dataSet.string('x00080060');\n    if (modality?.includes('NM')) {\n        const imageSubType = getImageTypeSubItemFromDataset(dataSet, 2);\n        if (imageSubType && isNMReconstructable(imageSubType)) {\n            if (dataSet.elements.x00540022) {\n                imagePositionPatient = getNumberValues(dataSet.elements.x00540022.items[0].dataSet, 'x00200032', 3);\n            }\n        }\n    }\n    return imagePositionPatient;\n}\nfunction extractOrientationFromDataset(dataSet) {\n    let imageOrientationPatient = getNumberValues(dataSet, 'x00200037', 6);\n    if (!imageOrientationPatient && dataSet.elements.x00209116) {\n        imageOrientationPatient = getNumberValues(dataSet.elements.x00209116.items[0].dataSet, 'x00200037', 6);\n    }\n    if (!imageOrientationPatient) {\n        imageOrientationPatient =\n            extractOrientationFromNMMultiframeDataset(dataSet);\n    }\n    return imageOrientationPatient;\n}\nfunction extractPositionFromDataset(dataSet) {\n    let imagePositionPatient = getNumberValues(dataSet, 'x00200032', 3);\n    if (!imagePositionPatient && dataSet.elements.x00209113) {\n        imagePositionPatient = getNumberValues(dataSet.elements.x00209113.items[0].dataSet, 'x00200032', 3);\n    }\n    if (!imagePositionPatient) {\n        imagePositionPatient = extractPositionFromNMMultiframeDataset(dataSet);\n    }\n    return imagePositionPatient;\n}\nfunction extractSpacingFromDataset(dataSet) {\n    let pixelSpacing = getNumberValues(dataSet, 'x00280030', 2);\n    if (!pixelSpacing && dataSet.elements.x00289110) {\n        pixelSpacing = getNumberValues(dataSet.elements.x00289110.items[0].dataSet, 'x00280030', 2);\n    }\n    return pixelSpacing;\n}\nfunction extractSliceThicknessFromDataset(dataSet) {\n    let sliceThickness;\n    if (dataSet.elements.x00180050) {\n        sliceThickness = dataSet.floatString('x00180050');\n    }\n    else if (dataSet.elements.x00289110 &&\n        dataSet.elements.x00289110.items.length &&\n        dataSet.elements.x00289110.items[0].dataSet.elements.x00180050) {\n        sliceThickness =\n            dataSet.elements.x00289110.items[0].dataSet.floatString('x00180050');\n    }\n    return sliceThickness;\n}\nexport { getImageTypeSubItemFromDataset, extractOrientationFromDataset, extractPositionFromDataset, extractSpacingFromDataset, extractSliceThicknessFromDataset, };\n", "function getInstanceModule(imageId, metaDataProvider, types) {\n    const result = {};\n    for (const t of types) {\n        try {\n            const data = metaDataProvider(t, imageId);\n            if (data) {\n                const capitalizedData = {};\n                for (const key in data) {\n                    if (key in data) {\n                        const capitalizedKey = capitalizeTag(key);\n                        capitalizedData[capitalizedKey] = data[key];\n                    }\n                }\n                Object.assign(result, capitalizedData);\n            }\n        }\n        catch (error) {\n            console.error(`Error retrieving ${t} data:`, error);\n        }\n    }\n    return result;\n}\nconst capitalizeTag = (tag) => tag.charAt(0).toUpperCase() + tag.slice(1);\nconst instanceModuleNames = [\n    'multiframeModule',\n    'generalSeriesModule',\n    'patientStudyModule',\n    'imagePlaneModule',\n    'nmMultiframeGeometryModule',\n    'imagePixelModule',\n    'modalityLutModule',\n    'voiLutModule',\n    'sopCommonModule',\n    'petIsotopeModule',\n    'overlayPlaneModule',\n    'transferSyntax',\n    'petSeriesModule',\n    'petImageModule',\n];\nexport { getInstanceModule, instanceModuleNames };\n", "function getUSEnhancedRegions(metadata) {\n    const sequence = metadata.elements['x00186011'];\n    if (!sequence || !sequence.items) {\n        return [];\n    }\n    const regions = sequence.items.map((item) => {\n        const physicalDeltaX = item.dataSet.double('x0018602c');\n        const physicalDeltaY = item.dataSet.double('x0018602e');\n        const physicalUnitsXDirection = item.dataSet.uint16('x00186024');\n        const physicalUnitsYDirection = item.dataSet.uint16('x00186026');\n        const regionLocationMinY0 = item.dataSet.uint16('x0018601a');\n        const regionLocationMaxY1 = item.dataSet.uint16('x0018601e');\n        const regionLocationMinX0 = item.dataSet.uint16('x00186018');\n        const regionLocationMaxX1 = item.dataSet.uint16('x0018601c');\n        const referencePixelX0 = item.dataSet.int32('x00186020') || null;\n        const referencePixelY0 = item.dataSet.int32('x00186022') || null;\n        const referencePhysicalPixelValueY = item.dataSet.uint16('x0018602a');\n        const referencePhysicalPixelValueX = item.dataSet.uint16('x00186028');\n        const regionSpatialFormat = item.dataSet.uint16('x00186012');\n        const regionDataType = item.dataSet.uint16('x00186014');\n        const regionFlags = item.dataSet.uint16('x00186016');\n        const transducerFrequency = item.dataSet.uint16('x00186030');\n        return {\n            regionLocationMinY0,\n            regionLocationMaxY1,\n            regionLocationMinX0,\n            regionLocationMaxX1,\n            referencePixelX0,\n            referencePixelY0,\n            physicalDeltaX,\n            physicalDeltaY,\n            physicalUnitsXDirection,\n            physicalUnitsYDirection,\n            referencePhysicalPixelValueY,\n            referencePhysicalPixelValueX,\n            regionSpatialFormat,\n            regionDataType,\n            regionFlags,\n            transducerFrequency,\n        };\n    });\n    return regions;\n}\nexport { getUSEnhancedRegions };\n", "let files = [];\nfunction add(file) {\n    const fileIndex = files.push(file);\n    return `dicomfile:${fileIndex - 1}`;\n}\nfunction get(index) {\n    return files[index];\n}\nfunction remove(index) {\n    files[index] = undefined;\n}\nfunction purge() {\n    files = [];\n}\nexport default {\n    add,\n    get,\n    remove,\n    purge,\n};\n", "import * as dicomParser from 'dicom-parser';\nfunction framesAreFragmented(dataSet) {\n    const numberOfFrames = dataSet.intString('x00280008');\n    const pixelDataElement = dataSet.elements.x7fe00010;\n    return numberOfFrames !== pixelDataElement.fragments.length;\n}\nexport default function getEncapsulatedImageFrame(dataSet, frameIndex) {\n    if (dataSet.elements.x7fe00010 &&\n        dataSet.elements.x7fe00010.basicOffsetTable.length) {\n        return dicomParser.readEncapsulatedImageFrame(dataSet, dataSet.elements.x7fe00010, frameIndex);\n    }\n    if (framesAreFragmented(dataSet)) {\n        const basicOffsetTable = dicomParser.createJPEGBasicOffsetTable(dataSet, dataSet.elements.x7fe00010);\n        return dicomParser.readEncapsulatedImageFrame(dataSet, dataSet.elements.x7fe00010, frameIndex, basicOffsetTable);\n    }\n    const fragments = dataSet.elements.x7fe00010.fragments;\n    const byteStream = new dicomParser.ByteStream(dataSet.byteArrayParser, dataSet.byteArray, dataSet.elements.x7fe00010.dataOffset);\n    const basicOffsetTable = dicomParser.readSequenceItem(byteStream);\n    if (basicOffsetTable.tag !== 'xfffee000') {\n        throw 'dicomParser.readEncapsulatedPixelData: missing basic offset table xfffee000';\n    }\n    byteStream.seek(basicOffsetTable.length);\n    const fragmentZeroPosition = byteStream.position;\n    if (frameIndex + 1 > fragments.length) {\n        throw 'dicomParser.readEncapsulatedPixelData: frame exceeds number of fragments';\n    }\n    const fragmentHeaderSize = 8;\n    const byteOffset = fragmentZeroPosition + fragments[frameIndex].offset + fragmentHeaderSize;\n    const length = fragments[frameIndex].length;\n    return new Uint8Array(byteStream.byteArray.buffer.slice(byteStream.byteArray.byteOffset + byteOffset, byteStream.byteArray.byteOffset + byteOffset + length));\n}\n", "function isBitSet(byte, bitPos) {\n    return byte & (1 << bitPos);\n}\nfunction unpackBinaryFrame(byteArray, frameOffset, pixelsPerFrame) {\n    const pixelData = new Uint8Array(pixelsPerFrame);\n    for (let i = 0; i < pixelsPerFrame; i++) {\n        const bytePos = Math.floor(i / 8);\n        const byte = byteArray[bytePos + frameOffset];\n        const bitPos = i % 8;\n        pixelData[i] = isBitSet(byte, bitPos) ? 1 : 0;\n    }\n    return pixelData;\n}\nexport default unpackBinaryFrame;\n", "import unpackBinaryFrame from './unpackBinaryFrame';\nfunction getUncompressedImageFrame(dataSet, frameIndex) {\n    const pixelDataElement = dataSet.elements.x7fe00010 || dataSet.elements.x7fe00008;\n    const bitsAllocated = dataSet.uint16('x00280100');\n    const rows = dataSet.uint16('x00280010');\n    const columns = dataSet.uint16('x00280011');\n    let samplesPerPixel = dataSet.uint16('x00280002');\n    const photometricInterpretation = dataSet.string('x00280004');\n    if (photometricInterpretation === 'YBR_FULL_422') {\n        samplesPerPixel = 2;\n        console.warn(`Using SamplesPerPixel of 2 for YBR_FULL_422 photometric interpretation.\n      See http://dicom.nema.org/medical/dicom/current/output/chtml/part03/sect_C.7.6.3.html for more information.`);\n    }\n    const pixelDataOffset = pixelDataElement.dataOffset;\n    const pixelsPerFrame = rows * columns * samplesPerPixel;\n    let frameOffset;\n    if (bitsAllocated === 8) {\n        frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame;\n        if (frameOffset >= dataSet.byteArray.length) {\n            throw new Error('frame exceeds size of pixelData');\n        }\n        return new Uint8Array(dataSet.byteArray.buffer.slice(frameOffset, frameOffset + pixelsPerFrame));\n    }\n    else if (bitsAllocated === 16) {\n        frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame * 2;\n        if (frameOffset >= dataSet.byteArray.length) {\n            throw new Error('frame exceeds size of pixelData');\n        }\n        return new Uint8Array(dataSet.byteArray.buffer.slice(frameOffset, frameOffset + pixelsPerFrame * 2));\n    }\n    else if (bitsAllocated === 1) {\n        frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame * 0.125;\n        if (frameOffset >= dataSet.byteArray.length) {\n            throw new Error('frame exceeds size of pixelData');\n        }\n        return unpackBinaryFrame(dataSet.byteArray, frameOffset, pixelsPerFrame);\n    }\n    else if (bitsAllocated === 32) {\n        frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame * 4;\n        if (frameOffset >= dataSet.byteArray.length) {\n            throw new Error('frame exceeds size of pixelData');\n        }\n        return new Uint8Array(dataSet.byteArray.buffer.slice(frameOffset, frameOffset + pixelsPerFrame * 4));\n    }\n    throw new Error('unsupported pixel format');\n}\nexport default getUncompressedImageFrame;\n", "import parseImageId from './parseImageId';\nimport fileManager from './fileManager';\nfunction loadFileRequest(uri) {\n    const parsedImageId = parseImageId(uri);\n    const fileIndex = parseInt(parsedImageId.url, 10);\n    const file = fileManager.get(fileIndex);\n    return new Promise((resolve, reject) => {\n        const fileReader = new FileReader();\n        fileReader.onload = (e) => {\n            const dicomPart10AsArrayBuffer = e.target.result;\n            resolve(dicomPart10AsArrayBuffer);\n        };\n        fileReader.onerror = reject;\n        fileReader.readAsArrayBuffer(file);\n    });\n}\nexport default loadFileRequest;\n", "import getEncapsulatedImageFrame from './getEncapsulatedImageFrame';\nimport getUncompressedImageFrame from './getUncompressedImageFrame';\nfunction getPixelData(dataSet, frameIndex = 0) {\n    const pixelDataElement = dataSet.elements.x7fe00010 || dataSet.elements.x7fe00008;\n    if (!pixelDataElement) {\n        return null;\n    }\n    if (pixelDataElement.encapsulatedPixelData) {\n        return getEncapsulatedImageFrame(dataSet, frameIndex);\n    }\n    return getUncompressedImageFrame(dataSet, frameIndex);\n}\nexport default getPixelData;\n", "function getMinMax(storedPixelData) {\n    let min = storedPixelData[0];\n    let max = storedPixelData[0];\n    let storedPixel;\n    const numPixels = storedPixelData.length;\n    for (let index = 1; index < numPixels; index++) {\n        storedPixel = storedPixelData[index];\n        min = Math.min(min, storedPixel);\n        max = Math.max(max, storedPixel);\n    }\n    return {\n        min,\n        max,\n    };\n}\nexport default getMinMax;\n", "import { convertRGBColorByPixel, convertRGBColorByPlane, convertYBRFullByPixel, convertYBRFull422ByPixel, convertYBRFullByPlane, convertPALETTECOLOR, } from './colorSpaceConverters/index';\nfunction convertRGB(imageFrame, colorBuffer, useRGBA) {\n    if (imageFrame.planarConfiguration === 0) {\n        convertRGBColorByPixel(imageFrame.pixelData, colorBuffer, useRGBA);\n    }\n    else {\n        convertRGBColorByPlane(imageFrame.pixelData, colorBuffer, useRGBA);\n    }\n}\nfunction convertYBRFull(imageFrame, colorBuffer, useRGBA) {\n    if (imageFrame.planarConfiguration === 0) {\n        convertYBRFullByPixel(imageFrame.pixelData, colorBuffer, useRGBA);\n    }\n    else {\n        convertYBRFullByPlane(imageFrame.pixelData, colorBuffer, useRGBA);\n    }\n}\nexport default function convertColorSpace(imageFrame, colorBuffer, useRGBA) {\n    if (imageFrame.photometricInterpretation === 'RGB') {\n        convertRGB(imageFrame, colorBuffer, useRGBA);\n    }\n    else if (imageFrame.photometricInterpretation === 'YBR_RCT') {\n        convertRGB(imageFrame, colorBuffer, useRGBA);\n    }\n    else if (imageFrame.photometricInterpretation === 'YBR_ICT') {\n        convertRGB(imageFrame, colorBuffer, useRGBA);\n    }\n    else if (imageFrame.photometricInterpretation === 'PALETTE COLOR') {\n        convertPALETTECOLOR(imageFrame, colorBuffer, useRGBA);\n    }\n    else if (imageFrame.photometricInterpretation === 'YBR_FULL_422') {\n        convertYBRFull422ByPixel(imageFrame.pixelData, colorBuffer, useRGBA);\n    }\n    else if (imageFrame.photometricInterpretation === 'YBR_FULL') {\n        convertYBRFull(imageFrame, colorBuffer, useRGBA);\n    }\n    else {\n        throw new Error(`No color space conversion for photometric interpretation ${imageFrame.photometricInterpretation}`);\n    }\n}\n", "export default function isColorConversionRequired(imageFrame) {\n    if (imageFrame === undefined) {\n        return false;\n    }\n    const { rows, columns, photometricInterpretation, pixelDataLength, planarConfiguration, } = imageFrame;\n    if (pixelDataLength === 4 * columns * rows) {\n        return false;\n    }\n    if (photometricInterpretation === 'PALETTE COLOR') {\n        return true;\n    }\n    if (photometricInterpretation.endsWith('420')) {\n        return (pixelDataLength ===\n            (3 * Math.ceil(columns / 2) + Math.floor(columns / 2)) * rows);\n    }\n    else if (photometricInterpretation.endsWith('422')) {\n        return (pixelDataLength ===\n            (3 * Math.ceil(columns / 2) + Math.floor(columns / 2)) *\n                Math.ceil(rows / 2) +\n                Math.floor(rows / 2) * columns);\n    }\n    else {\n        return photometricInterpretation !== 'RGB' || planarConfiguration === 1;\n    }\n}\n", "import getMinMax from '../shared/getMinMax';\nfunction arrayBufferToString(buffer) {\n    return binaryToString(String.fromCharCode.apply(null, Array.prototype.slice.apply(new Uint8Array(buffer))));\n}\nfunction binaryToString(binary) {\n    let error;\n    try {\n        return decodeURIComponent(escape(binary));\n    }\n    catch (_error) {\n        error = _error;\n        if (error instanceof URIError) {\n            return binary;\n        }\n        throw error;\n    }\n}\nfunction decodeJPEGBaseline8BitColor(imageFrame, pixelData, canvas) {\n    const start = new Date().getTime();\n    const imgBlob = new Blob([pixelData], { type: 'image/jpeg' });\n    return new Promise((resolve, reject) => {\n        const fileReader = new FileReader();\n        if (fileReader.readAsBinaryString === undefined) {\n            fileReader.readAsArrayBuffer(imgBlob);\n        }\n        else {\n            fileReader.readAsBinaryString(imgBlob);\n        }\n        fileReader.onload = function () {\n            const img = new Image();\n            img.onload = function () {\n                canvas.height = img.height;\n                canvas.width = img.width;\n                imageFrame.rows = img.height;\n                imageFrame.columns = img.width;\n                const context = canvas.getContext('2d');\n                context.drawImage(this, 0, 0);\n                const imageData = context.getImageData(0, 0, img.width, img.height);\n                const end = new Date().getTime();\n                imageFrame.pixelData = new Uint8Array(imageData.data.buffer);\n                imageFrame.imageData = imageData;\n                imageFrame.decodeTimeInMS = end - start;\n                const minMax = getMinMax(imageFrame.pixelData);\n                imageFrame.smallestPixelValue = minMax.min;\n                imageFrame.largestPixelValue = minMax.max;\n                imageFrame.pixelDataLength = imageFrame.pixelData.length;\n                resolve(imageFrame);\n            };\n            img.onerror = function (error) {\n                reject(error);\n            };\n            if (fileReader.readAsBinaryString === undefined) {\n                img.src = `data:image/jpeg;base64,${window.btoa(arrayBufferToString(fileReader.result))}`;\n            }\n            else {\n                img.src = `data:image/jpeg;base64,${window.btoa(fileReader.result)}`;\n            }\n        };\n        fileReader.onerror = (e) => {\n            reject(e);\n        };\n    });\n}\nexport default decodeJPEGBaseline8BitColor;\n", "import decodeJPEGBaseline8BitColor from './decodeJPEGBaseline8BitColor';\nimport { getWebWorkerManager } from '@cornerstonejs/core';\nfunction processDecodeTask(imageFrame, transferSyntax, pixelData, srcOptions, decodeConfig) {\n    const options = { ...srcOptions };\n    delete options.loader;\n    delete options.streamingData;\n    const webWorkerManager = getWebWorkerManager();\n    const priority = options.priority || undefined;\n    const transferList = options.transferPixelData\n        ? [pixelData.buffer]\n        : undefined;\n    return webWorkerManager.executeTask('dicomImageLoader', 'decodeTask', {\n        imageFrame,\n        transferSyntax,\n        pixelData,\n        options,\n        decodeConfig,\n    }, {\n        priority,\n        requestType: options?.requestType,\n    });\n}\nfunction decodeImageFrame(imageFrame, transferSyntax, pixelData, canvas, options = {}, decodeConfig) {\n    switch (transferSyntax) {\n        case '1.2.840.10008.1.2':\n            return processDecodeTask(imageFrame, transferSyntax, pixelData, options, decodeConfig);\n        case '1.2.840.10008.1.2.1':\n            return processDecodeTask(imageFrame, transferSyntax, pixelData, options, decodeConfig);\n        case '1.2.840.10008.1.2.2':\n            return processDecodeTask(imageFrame, transferSyntax, pixelData, options, decodeConfig);\n        case '1.2.840.10008.1.2.1.99':\n            return processDecodeTask(imageFrame, transferSyntax, pixelData, options, decodeConfig);\n        case '1.2.840.10008.1.2.5':\n            return processDecodeTask(imageFrame, transferSyntax, pixelData, options, decodeConfig);\n        case '1.2.840.10008.1.2.4.50':\n            if (imageFrame.bitsAllocated === 8 &&\n                (imageFrame.samplesPerPixel === 3 || imageFrame.samplesPerPixel === 4)) {\n                return decodeJPEGBaseline8BitColor(imageFrame, pixelData, canvas);\n            }\n            return processDecodeTask(imageFrame, transferSyntax, pixelData, options, decodeConfig);\n        case '1.2.840.10008.1.2.4.51':\n            return processDecodeTask(imageFrame, transferSyntax, pixelData, options, decodeConfig);\n        case '1.2.840.10008.1.2.4.57':\n            return processDecodeTask(imageFrame, transferSyntax, pixelData, options, decodeConfig);\n        case '1.2.840.10008.1.2.4.70':\n            return processDecodeTask(imageFrame, transferSyntax, pixelData, options, decodeConfig);\n        case '1.2.840.10008.1.2.4.80':\n            return processDecodeTask(imageFrame, transferSyntax, pixelData, options, decodeConfig);\n        case '1.2.840.10008.1.2.4.81':\n            return processDecodeTask(imageFrame, transferSyntax, pixelData, options, decodeConfig);\n        case '1.2.840.10008.1.2.4.90':\n            return processDecodeTask(imageFrame, transferSyntax, pixelData, options, decodeConfig);\n        case '1.2.840.10008.1.2.4.91':\n            return processDecodeTask(imageFrame, transferSyntax, pixelData, options, decodeConfig);\n        case '3.2.840.10008.1.2.4.96':\n        case '1.2.840.10008.1.2.4.201':\n        case '1.2.840.10008.1.2.4.202':\n        case '1.2.840.10008.1.2.4.203':\n            return processDecodeTask(imageFrame, transferSyntax, pixelData, options, decodeConfig);\n    }\n    return Promise.reject(new Error(`No decoder for transfer syntax ${transferSyntax}`));\n}\nexport default decodeImageFrame;\n", "import { metaData } from '@cornerstonejs/core';\nfunction getImageFrame(imageId) {\n    const imagePixelModule = metaData.get('imagePixelModule', imageId);\n    return {\n        samplesPerPixel: imagePixelModule.samplesPerPixel,\n        photometricInterpretation: imagePixelModule.photometricInterpretation,\n        planarConfiguration: imagePixelModule.planarConfiguration,\n        rows: imagePixelModule.rows,\n        columns: imagePixelModule.columns,\n        bitsAllocated: imagePixelModule.bitsAllocated,\n        bitsStored: imagePixelModule.bitsStored,\n        pixelRepresentation: imagePixelModule.pixelRepresentation,\n        smallestPixelValue: imagePixelModule.smallestPixelValue,\n        largestPixelValue: imagePixelModule.largestPixelValue,\n        redPaletteColorLookupTableDescriptor: imagePixelModule.redPaletteColorLookupTableDescriptor,\n        greenPaletteColorLookupTableDescriptor: imagePixelModule.greenPaletteColorLookupTableDescriptor,\n        bluePaletteColorLookupTableDescriptor: imagePixelModule.bluePaletteColorLookupTableDescriptor,\n        redPaletteColorLookupTableData: imagePixelModule.redPaletteColorLookupTableData,\n        greenPaletteColorLookupTableData: imagePixelModule.greenPaletteColorLookupTableData,\n        bluePaletteColorLookupTableData: imagePixelModule.bluePaletteColorLookupTableData,\n        pixelData: undefined,\n        imageId,\n    };\n}\nexport default getImageFrame;\n", "export default function getScalingParameters(metaData, imageId) {\n    const modalityLutModule = metaData.get('modalityLutModule', imageId) || {};\n    const generalSeriesModule = (metaData.get('generalSeriesModule', imageId) ||\n        {});\n    const { modality } = generalSeriesModule;\n    const scalingParameters = {\n        rescaleSlope: modalityLutModule.rescaleSlope,\n        rescaleIntercept: modalityLutModule.rescaleIntercept,\n        modality,\n    };\n    const scalingModules = metaData.get('scalingModule', imageId) || {};\n    return {\n        ...scalingParameters,\n        ...(modality === 'PT' && { suvbw: scalingModules.suvbw }),\n        ...(modality === 'RTDOSE' && {\n            doseGridScaling: scalingModules.DoseGridScaling,\n            doseSummation: scalingModules.DoseSummation,\n            doseType: scalingModules.DoseType,\n            doseUnit: scalingModules.DoseUnit,\n        }),\n    };\n}\n", "export default function (photoMetricInterpretation) {\n    return (photoMetricInterpretation === 'RGB' ||\n        photoMetricInterpretation === 'PALETTE COLOR' ||\n        photoMetricInterpretation === 'YBR_FULL' ||\n        photoMetricInterpretation === 'YBR_FULL_422' ||\n        photoMetricInterpretation === 'YBR_PARTIAL_422' ||\n        photoMetricInterpretation === 'YBR_PARTIAL_420' ||\n        photoMetricInterpretation === 'YBR_RCT' ||\n        photoMetricInterpretation === 'YBR_ICT');\n}\n", "function removeAFromRGBA(pixelData, targetBuffer) {\n    const numPixels = pixelData.length / 4;\n    let rgbIndex = 0;\n    let bufferIndex = 0;\n    for (let i = 0; i < numPixels; i++) {\n        targetBuffer[bufferIndex++] = pixelData[rgbIndex++];\n        targetBuffer[bufferIndex++] = pixelData[rgbIndex++];\n        targetBuffer[bufferIndex++] = pixelData[rgbIndex++];\n        rgbIndex++;\n    }\n    return targetBuffer;\n}\nexport default removeAFromRGBA;\n", "function isModalityLUTForDisplay(sopClassUid) {\n    return (sopClassUid !== '1.2.840.10008.5.1.4.1.1.12.1' &&\n        sopClassUid !== '1.2.840.10008.5.1.4.1.1.12.2.1');\n}\nexport default isModalityLUTForDisplay;\n", "export default function getPixelDataTypeFromMinMax(min, max) {\n    let pixelDataType;\n    if (Number.isInteger(min) && Number.isInteger(max)) {\n        if (min >= 0) {\n            if (max <= 255) {\n                pixelDataType = Uint8Array;\n            }\n            else if (max <= 65535) {\n                pixelDataType = Uint16Array;\n            }\n            else if (max <= 4294967295) {\n                pixelDataType = Uint32Array;\n            }\n        }\n        else {\n            if (min >= -128 && max <= 127) {\n                pixelDataType = Int8Array;\n            }\n            else if (min >= -32768 && max <= 32767) {\n                pixelDataType = Int16Array;\n            }\n        }\n    }\n    return pixelDataType || Float32Array;\n}\nexport function validatePixelDataType(min, max, type) {\n    const pixelDataType = getPixelDataTypeFromMinMax(min, max);\n    return pixelDataType === type;\n}\n", "import getPixelDataTypeFromMinMax from '../shared/getPixelDataTypeFromMinMax';\nfunction setPixelDataType(imageFrame) {\n    const minValue = imageFrame.smallestPixelValue;\n    const maxValue = imageFrame.largestPixelValue;\n    const TypedArray = getPixelDataTypeFromMinMax(minValue, maxValue);\n    if (TypedArray) {\n        const typedArray = new TypedArray(imageFrame.pixelData);\n        imageFrame.pixelData = typedArray;\n    }\n    else {\n        throw new Error('Could not apply a typed array to the pixel data');\n    }\n}\nexport default setPixelDataType;\n", "import getMinMax from '../shared/getMinMax';\nimport { canRenderFloatTextures, Enums, metaData, utilities, } from '@cornerstonejs/core';\nimport convertColorSpace from './convertColorSpace';\nimport isColorConversionRequired from './isColorConversionRequired';\nimport decodeImageFrame from './decodeImageFrame';\nimport getImageFrame from './getImageFrame';\nimport getScalingParameters from './getScalingParameters';\nimport { getOptions } from './internal/options';\nimport isColorImageFn from '../shared/isColorImage';\nimport removeAFromRGBA from './removeAFromRGBA';\nimport isModalityLUTForDisplay from './isModalityLutForDisplay';\nimport setPixelDataType from './setPixelDataType';\nlet lastImageIdDrawn = '';\nfunction createImage(imageId, pixelData, transferSyntax, options = {}) {\n    const useRGBA = options.useRGBA;\n    options.preScale = {\n        enabled: options.preScale && options.preScale.enabled !== undefined\n            ? options.preScale.enabled\n            : true,\n    };\n    if (!pixelData?.length) {\n        return Promise.reject(new Error('The pixel data is missing'));\n    }\n    const { MetadataModules } = Enums;\n    const canvas = document.createElement('canvas');\n    const imageFrame = getImageFrame(imageId);\n    imageFrame.decodeLevel = options.decodeLevel;\n    options.allowFloatRendering = canRenderFloatTextures();\n    if (options.preScale.enabled) {\n        const scalingParameters = getScalingParameters(metaData, imageId);\n        if (scalingParameters) {\n            options.preScale = {\n                ...options.preScale,\n                scalingParameters: scalingParameters,\n            };\n        }\n    }\n    const { decodeConfig } = getOptions();\n    Object.keys(imageFrame).forEach((key) => {\n        if (typeof imageFrame[key] === 'function' ||\n            imageFrame[key] instanceof Promise) {\n            delete imageFrame[key];\n        }\n    });\n    const decodePromise = decodeImageFrame(imageFrame, transferSyntax, pixelData, canvas, options, decodeConfig);\n    const isColorImage = isColorImageFn(imageFrame.photometricInterpretation);\n    return new Promise((resolve, reject) => {\n        decodePromise.then(function (imageFrame) {\n            let alreadyTyped = false;\n            if (options.targetBuffer &&\n                options.targetBuffer.type &&\n                !isColorImage) {\n                const { arrayBuffer, type, offset: rawOffset = 0, length: rawLength, } = options.targetBuffer;\n                const imageFrameLength = imageFrame.pixelDataLength;\n                const offset = rawOffset;\n                const length = rawLength !== null && rawLength !== undefined\n                    ? rawLength\n                    : imageFrameLength - offset;\n                const typedArrayConstructors = {\n                    Uint8Array,\n                    Uint16Array,\n                    Int16Array,\n                    Float32Array,\n                    Uint32Array,\n                };\n                if (length !== imageFrame.pixelDataLength) {\n                    throw new Error(`target array for image does not have the same length (${length}) as the decoded image length (${imageFrame.pixelDataLength}).`);\n                }\n                const TypedArrayConstructor = typedArrayConstructors[type];\n                const typedArray = arrayBuffer\n                    ? new TypedArrayConstructor(arrayBuffer, offset, length)\n                    : new TypedArrayConstructor(imageFrame.pixelData);\n                if (length !== imageFrame.pixelDataLength) {\n                    throw new Error('target array for image does not have the same length as the decoded image length.');\n                }\n                imageFrame.pixelData = typedArray;\n                alreadyTyped = true;\n            }\n            if (!alreadyTyped) {\n                setPixelDataType(imageFrame);\n            }\n            const imagePlaneModule = metaData.get(MetadataModules.IMAGE_PLANE, imageId) || {};\n            const voiLutModule = metaData.get(MetadataModules.VOI_LUT, imageId) || {};\n            const modalityLutModule = metaData.get(MetadataModules.MODALITY_LUT, imageId) || {};\n            const sopCommonModule = metaData.get(MetadataModules.SOP_COMMON, imageId) || {};\n            const calibrationModule = metaData.get(MetadataModules.CALIBRATION, imageId) || {};\n            const { rows, columns } = imageFrame;\n            if (isColorImage) {\n                if (isColorConversionRequired(imageFrame)) {\n                    canvas.height = imageFrame.rows;\n                    canvas.width = imageFrame.columns;\n                    const context = canvas.getContext('2d');\n                    let imageData = context.createImageData(imageFrame.columns, imageFrame.rows);\n                    if (!useRGBA) {\n                        imageData = {\n                            ...imageData,\n                            data: new Uint8ClampedArray(3 * imageFrame.columns * imageFrame.rows),\n                        };\n                    }\n                    convertColorSpace(imageFrame, imageData.data, useRGBA);\n                    imageFrame.imageData = imageData;\n                    imageFrame.pixelData = imageData.data;\n                    imageFrame.pixelDataLength = imageData.data.length;\n                }\n                else if (!useRGBA &&\n                    imageFrame.pixelDataLength === 4 * rows * columns) {\n                    const colorBuffer = new Uint8Array((imageFrame.pixelData.length / 4) * 3);\n                    imageFrame.pixelData = removeAFromRGBA(imageFrame.pixelData, colorBuffer);\n                    imageFrame.pixelDataLength = imageFrame.pixelData.length;\n                }\n                const minMax = getMinMax(imageFrame.pixelData);\n                imageFrame.smallestPixelValue = minMax.min;\n                imageFrame.largestPixelValue = minMax.max;\n            }\n            let numberOfComponents = imageFrame.samplesPerPixel;\n            if (imageFrame.photometricInterpretation === 'PALETTE COLOR') {\n                numberOfComponents = useRGBA ? 4 : 3;\n            }\n            const voxelManager = utilities.VoxelManager.createImageVoxelManager({\n                scalarData: imageFrame.pixelData,\n                width: imageFrame.columns,\n                height: imageFrame.rows,\n                numberOfComponents: numberOfComponents,\n            });\n            const image = {\n                imageId,\n                dataType: imageFrame.pixelData.constructor\n                    .name,\n                color: isColorImage,\n                calibration: calibrationModule,\n                columnPixelSpacing: imagePlaneModule.columnPixelSpacing,\n                columns: imageFrame.columns,\n                height: imageFrame.rows,\n                preScale: imageFrame.preScale,\n                intercept: modalityLutModule.rescaleIntercept\n                    ? modalityLutModule.rescaleIntercept\n                    : 0,\n                slope: modalityLutModule.rescaleSlope\n                    ? modalityLutModule.rescaleSlope\n                    : 1,\n                invert: imageFrame.photometricInterpretation === 'MONOCHROME1',\n                minPixelValue: imageFrame.smallestPixelValue,\n                maxPixelValue: imageFrame.largestPixelValue,\n                rowPixelSpacing: imagePlaneModule.rowPixelSpacing,\n                rows: imageFrame.rows,\n                sizeInBytes: imageFrame.pixelData.byteLength,\n                width: imageFrame.columns,\n                windowCenter: voiLutModule.windowCenter\n                    ? voiLutModule.windowCenter[0]\n                    : undefined,\n                windowWidth: voiLutModule.windowWidth\n                    ? voiLutModule.windowWidth[0]\n                    : undefined,\n                voiLUTFunction: voiLutModule.voiLUTFunction\n                    ? voiLutModule.voiLUTFunction\n                    : undefined,\n                decodeTimeInMS: imageFrame.decodeTimeInMS,\n                floatPixelData: undefined,\n                imageFrame,\n                voxelManager,\n                rgba: isColorImage && useRGBA,\n                getPixelData: () => imageFrame.pixelData,\n                getCanvas: undefined,\n                numberOfComponents: numberOfComponents,\n            };\n            if (image.color) {\n                image.getCanvas = function () {\n                    if (lastImageIdDrawn === imageId) {\n                        return canvas;\n                    }\n                    const width = image.columns;\n                    const height = image.rows;\n                    canvas.height = height;\n                    canvas.width = width;\n                    const ctx = canvas.getContext('2d');\n                    const imageData = ctx.createImageData(width, height);\n                    const arr = imageFrame.pixelData;\n                    if (arr.length === width * height * 4) {\n                        for (let i = 0; i < arr.length; i++) {\n                            imageData.data[i] = arr[i];\n                        }\n                    }\n                    else if (arr.length === width * height * 3) {\n                        let j = 0;\n                        for (let i = 0; i < arr.length; i += 3) {\n                            imageData.data[j++] = arr[i];\n                            imageData.data[j++] = arr[i + 1];\n                            imageData.data[j++] = arr[i + 2];\n                            imageData.data[j++] = 255;\n                        }\n                    }\n                    imageFrame.pixelData = imageData.data;\n                    imageFrame.pixelDataLength = imageData.data.length;\n                    imageFrame.imageData = imageData;\n                    ctx.putImageData(imageFrame.imageData, 0, 0);\n                    lastImageIdDrawn = imageId;\n                    return canvas;\n                };\n            }\n            if (modalityLutModule.modalityLUTSequence &&\n                modalityLutModule.modalityLUTSequence.length > 0 &&\n                isModalityLUTForDisplay(sopCommonModule.sopClassUID)) {\n                image.modalityLUT = modalityLutModule.modalityLUTSequence[0];\n            }\n            if (voiLutModule.voiLUTSequence &&\n                voiLutModule.voiLUTSequence.length > 0) {\n                image.voiLUT = voiLutModule.voiLUTSequence[0];\n            }\n            if (image.color) {\n                image.windowWidth = 256;\n                image.windowCenter = 128;\n            }\n            if (image.windowCenter === undefined ||\n                image.windowWidth === undefined) {\n                const windowLevel = utilities.windowLevel.toWindowLevel(image.imageFrame.smallestPixelValue, image.imageFrame.largestPixelValue);\n                image.windowWidth = windowLevel.windowWidth;\n                image.windowCenter = windowLevel.windowCenter;\n            }\n            resolve(image);\n        }, reject);\n    });\n}\nexport default createImage;\n", "import { Enums } from '@cornerstonejs/core';\nimport createImage from '../createImage';\nimport { xhrRequest } from '../internal/index';\nimport dataSetCacheManager from './dataSetCacheManager';\nimport getPixelData from './getPixelData';\nimport loadFileRequest from './loadFileRequest';\nimport parseImageId from './parseImageId';\nconst { ImageQualityStatus } = Enums;\nfunction addDecache(imageLoadObject, imageId) {\n    imageLoadObject.decache = function () {\n        const parsedImageId = parseImageId(imageId);\n        dataSetCacheManager.unload(parsedImageId.url);\n    };\n}\nfunction loadImageFromPromise(dataSetPromise, imageId, frame = 0, sharedCacheKey, options, callbacks) {\n    const start = new Date().getTime();\n    const imageLoadObject = {\n        cancelFn: undefined,\n        promise: undefined,\n    };\n    imageLoadObject.promise = new Promise((resolve, reject) => {\n        dataSetPromise.then((dataSet) => {\n            const pixelData = getPixelData(dataSet, frame);\n            const transferSyntax = dataSet.string('x00020010');\n            const loadEnd = new Date().getTime();\n            const imagePromise = createImage(imageId, pixelData, transferSyntax, options);\n            addDecache(imageLoadObject, imageId);\n            imagePromise.then((image) => {\n                image = image;\n                image.data = dataSet;\n                image.sharedCacheKey = sharedCacheKey;\n                const end = new Date().getTime();\n                image.loadTimeInMS = loadEnd - start;\n                image.totalTimeInMS = end - start;\n                image.imageQualityStatus = ImageQualityStatus.FULL_RESOLUTION;\n                if (callbacks !== undefined &&\n                    callbacks.imageDoneCallback !== undefined) {\n                    callbacks.imageDoneCallback(image);\n                }\n                resolve(image);\n            }, function (error) {\n                reject({\n                    error,\n                    dataSet,\n                });\n            });\n        }, function (error) {\n            reject({\n                error,\n            });\n        });\n    });\n    return imageLoadObject;\n}\nfunction loadImageFromDataSet(dataSet, imageId, frame = 0, sharedCacheKey, options) {\n    const start = new Date().getTime();\n    const promise = new Promise((resolve, reject) => {\n        const loadEnd = new Date().getTime();\n        let imagePromise;\n        try {\n            const pixelData = getPixelData(dataSet, frame);\n            const transferSyntax = dataSet.string('x00020010');\n            imagePromise = createImage(imageId, pixelData, transferSyntax, options);\n        }\n        catch (error) {\n            reject({\n                error,\n                dataSet,\n            });\n            return;\n        }\n        imagePromise.then((image) => {\n            image = image;\n            image.data = dataSet;\n            const end = new Date().getTime();\n            image.loadTimeInMS = loadEnd - start;\n            image.totalTimeInMS = end - start;\n            image.imageQualityStatus = ImageQualityStatus.FULL_RESOLUTION;\n            resolve(image);\n        }, reject);\n    });\n    return {\n        promise: promise,\n        cancelFn: undefined,\n    };\n}\nfunction getLoaderForScheme(scheme) {\n    if (scheme === 'dicomweb' || scheme === 'wadouri') {\n        return xhrRequest;\n    }\n    else if (scheme === 'dicomfile') {\n        return loadFileRequest;\n    }\n}\nfunction loadImage(imageId, options = {}) {\n    const parsedImageId = parseImageId(imageId);\n    options = Object.assign({}, options);\n    delete options.loader;\n    const schemeLoader = getLoaderForScheme(parsedImageId.scheme);\n    if (dataSetCacheManager.isLoaded(parsedImageId.url)) {\n        const dataSet = dataSetCacheManager.get(parsedImageId.url, schemeLoader, imageId);\n        return loadImageFromDataSet(dataSet, imageId, parsedImageId.pixelDataFrame, parsedImageId.url, options);\n    }\n    const dataSetPromise = dataSetCacheManager.load(parsedImageId.url, schemeLoader, imageId);\n    return loadImageFromPromise(dataSetPromise, imageId, parsedImageId.frame, parsedImageId.url, options);\n}\nexport { loadImageFromPromise, getLoaderForScheme, loadImage };\n", "import { metaData, registerImageLoader } from '@cornerstonejs/core';\nimport { loadImage } from './loadImage';\nimport { metaDataProvider } from './metaData/index';\nexport default function () {\n    registerImageLoader('dicomweb', loadImage);\n    registerImageLoader('wadouri', loadImage);\n    registerImageLoader('dicomfile', loadImage);\n    metaData.addProvider(metaDataProvider);\n}\n", "import { getImagePixelModule, getLUTs, getModalityLUTOutputPixelRepresentation, getNumberValues, metaDataProvider, metadataForDataset, } from './metaData/index';\nimport dataSetCacheManager from './dataSetCacheManager';\nimport fileManager from './fileManager';\nimport getEncapsulatedImageFrame from './getEncapsulatedImageFrame';\nimport getUncompressedImageFrame from './getUncompressedImageFrame';\nimport loadFileRequest from './loadFileRequest';\nimport getPixelData from './getPixelData';\nimport { loadImageFromPromise, getLoaderForScheme, loadImage, } from './loadImage';\nimport parseImageId from './parseImageId';\nimport unpackBinaryFrame from './unpackBinaryFrame';\nimport register from './register';\nconst metaData = {\n    getImagePixelModule,\n    getLUTs,\n    getModalityLUTOutputPixelRepresentation,\n    getNumberValues,\n    metaDataProvider,\n    metadataForDataset,\n};\nexport default {\n    metaData,\n    dataSetCacheManager,\n    fileManager,\n    getEncapsulatedImageFrame,\n    getUncompressedImageFrame,\n    loadFileRequest,\n    loadImageFromPromise,\n    getLoaderForScheme,\n    getPixelData,\n    loadImage,\n    parseImageId,\n    unpackBinaryFrame,\n    register,\n};\nexport { metaData, dataSetCacheManager, fileManager, getEncapsulatedImageFrame, getUncompressedImageFrame, loadFileRequest, loadImageFromPromise, getLoaderForScheme, getPixelData, loadImage, parseImageId, unpackBinaryFrame, register, };\n", "function getValue(element, index, defaultValue) {\n    index = index || 0;\n    if (!element) {\n        return defaultValue;\n    }\n    if (!element.Value) {\n        return defaultValue;\n    }\n    if (Array.isArray(element.Value) && element.Value.length <= index) {\n        return defaultValue;\n    }\n    return element.Value[index];\n}\nexport default getValue;\n", "import getValue from './getValue';\nfunction getNumberString(element, index, defaultValue) {\n    const value = getValue(element, index, defaultValue);\n    if (value === undefined) {\n        return;\n    }\n    return parseFloat(String(value));\n}\nexport default getNumberString;\n", "import getValue from './getValue';\nfunction getNumberValue(element, index) {\n    const value = getValue(element, index);\n    if (value === undefined) {\n        return;\n    }\n    return parseFloat(value);\n}\nexport default getNumberValue;\n", "function getNumberValues(element, minimumLength) {\n    if (!element) {\n        return;\n    }\n    if (!element.Value) {\n        return;\n    }\n    if (!Array.isArray(element.Value)) {\n        return;\n    }\n    if (minimumLength && element.Value.length < minimumLength) {\n        return;\n    }\n    const values = [];\n    for (let i = 0; i < element.Value.length; i++) {\n        values.push(parseFloat(element.Value[i]));\n    }\n    return values;\n}\nexport default getNumberValues;\n", "import * as dicomParser from 'dicom-parser';\nimport { Enums, utilities } from '@cornerstonejs/core';\nimport getNumberValues from './getNumberValues';\nimport getNumberValue from './getNumberValue';\nimport getOverlayPlaneModule from './getOverlayPlaneModule';\nimport metaDataManager, { retrieveMultiframeMetadataImageId, } from '../metaDataManager';\nimport getValue from './getValue';\nimport { getMultiframeInformation, getFrameInformation, } from '../combineFrameInstance';\nimport { extractOrientationFromMetadata, extractPositionFromMetadata, } from './extractPositioningFromMetadata';\nimport { getImageTypeSubItemFromMetadata } from './NMHelpers';\nimport isNMReconstructable from '../../isNMReconstructable';\nimport { getInstanceModule, instanceModuleNames, } from '../../getInstanceModule';\nimport { getUSEnhancedRegions } from './USHelpers';\nfunction metaDataProvider(type, imageId) {\n    const { MetadataModules } = Enums;\n    if (type === MetadataModules.MULTIFRAME) {\n        const { metadata, frame } = retrieveMultiframeMetadataImageId(imageId);\n        if (!metadata) {\n            return;\n        }\n        const { PerFrameFunctionalGroupsSequence, SharedFunctionalGroupsSequence, NumberOfFrames, } = getMultiframeInformation(metadata);\n        if (PerFrameFunctionalGroupsSequence || NumberOfFrames > 1) {\n            const { shared, perFrame } = getFrameInformation(PerFrameFunctionalGroupsSequence, SharedFunctionalGroupsSequence, frame);\n            return {\n                NumberOfFrames,\n                PerFrameFunctionalInformation: perFrame,\n                SharedFunctionalInformation: shared,\n            };\n        }\n        return {\n            NumberOfFrames,\n        };\n    }\n    const metaData = metaDataManager.get(imageId);\n    if (!metaData) {\n        return;\n    }\n    if (type === MetadataModules.GENERAL_STUDY) {\n        return {\n            studyDescription: getValue(metaData['00081030']),\n            studyDate: dicomParser.parseDA(getValue(metaData['00080020'])),\n            studyTime: dicomParser.parseTM(getValue(metaData['00080030'], 0, '')),\n            accessionNumber: getValue(metaData['00080050']),\n        };\n    }\n    if (type === MetadataModules.GENERAL_SERIES) {\n        return {\n            modality: getValue(metaData['00080060']),\n            seriesInstanceUID: getValue(metaData['0020000E']),\n            seriesDescription: getValue(metaData['0008103E']),\n            seriesNumber: getNumberValue(metaData['00200011']),\n            studyInstanceUID: getValue(metaData['0020000D']),\n            seriesDate: dicomParser.parseDA(getValue(metaData['00080021'])),\n            seriesTime: dicomParser.parseTM(getValue(metaData['00080031'], 0, '')),\n            acquisitionDate: dicomParser.parseDA(getValue(metaData['00080022'])),\n            acquisitionTime: dicomParser.parseTM(getValue(metaData['00080032'], 0, '')),\n        };\n    }\n    if (type === MetadataModules.GENERAL_IMAGE) {\n        return {\n            sopInstanceUID: getValue(metaData['00080018']),\n            instanceNumber: getNumberValue(metaData['00200013']),\n            lossyImageCompression: getValue(metaData['00282110']),\n            lossyImageCompressionRatio: getNumberValue(metaData['00282112']),\n            lossyImageCompressionMethod: getValue(metaData['00282114']),\n        };\n    }\n    if (type === MetadataModules.PATIENT) {\n        return {\n            patientID: getValue(metaData['00100020']),\n            patientName: getValue(metaData['00100010']),\n        };\n    }\n    if (type === MetadataModules.PATIENT_STUDY) {\n        return {\n            patientAge: getNumberValue(metaData['00101010']),\n            patientSize: getNumberValue(metaData['00101020']),\n            patientSex: getValue(metaData['00100040']),\n            patientWeight: getNumberValue(metaData['00101030']),\n        };\n    }\n    if (type === MetadataModules.NM_MULTIFRAME_GEOMETRY) {\n        const modality = getValue(metaData['00080060']);\n        const imageSubType = getImageTypeSubItemFromMetadata(metaData, 2);\n        return {\n            modality,\n            imageType: getValue(metaData['00080008']),\n            imageSubType,\n            imageOrientationPatient: extractOrientationFromMetadata(metaData),\n            imagePositionPatient: extractPositionFromMetadata(metaData),\n            sliceThickness: getNumberValue(metaData['00180050']),\n            spacingBetweenSlices: getNumberValue(metaData['00180088']),\n            pixelSpacing: getNumberValues(metaData['00280030'], 2),\n            numberOfFrames: getNumberValue(metaData['00280008']),\n            isNMReconstructable: isNMReconstructable(imageSubType) && modality.includes('NM'),\n        };\n    }\n    if (type === MetadataModules.IMAGE_PLANE) {\n        let imageOrientationPatient = extractOrientationFromMetadata(metaData);\n        let imagePositionPatient = extractPositionFromMetadata(metaData);\n        const pixelSpacing = getNumberValues(metaData['00280030'], 2);\n        let columnPixelSpacing = null;\n        let rowPixelSpacing = null;\n        let rowCosines = null;\n        let columnCosines = null;\n        let usingDefaultValues = false;\n        if (pixelSpacing) {\n            rowPixelSpacing = pixelSpacing[0];\n            columnPixelSpacing = pixelSpacing[1];\n        }\n        else {\n            usingDefaultValues = true;\n            rowPixelSpacing = 1;\n            columnPixelSpacing = 1;\n        }\n        if (imageOrientationPatient) {\n            rowCosines = [\n                parseFloat(imageOrientationPatient[0]),\n                parseFloat(imageOrientationPatient[1]),\n                parseFloat(imageOrientationPatient[2]),\n            ];\n            columnCosines = [\n                parseFloat(imageOrientationPatient[3]),\n                parseFloat(imageOrientationPatient[4]),\n                parseFloat(imageOrientationPatient[5]),\n            ];\n        }\n        else {\n            rowCosines = [1, 0, 0];\n            columnCosines = [0, 1, 0];\n            usingDefaultValues = true;\n            imageOrientationPatient = [...rowCosines, ...columnCosines];\n        }\n        if (!imagePositionPatient) {\n            imagePositionPatient = [0, 0, 0];\n            usingDefaultValues = true;\n        }\n        return {\n            frameOfReferenceUID: getValue(metaData['00200052']),\n            rows: getNumberValue(metaData['00280010']),\n            columns: getNumberValue(metaData['00280011']),\n            imageOrientationPatient,\n            rowCosines,\n            columnCosines,\n            imagePositionPatient,\n            sliceThickness: getNumberValue(metaData['00180050']),\n            sliceLocation: getNumberValue(metaData['00201041']),\n            pixelSpacing,\n            rowPixelSpacing,\n            columnPixelSpacing,\n            usingDefaultValues,\n        };\n    }\n    if (type === MetadataModules.ULTRASOUND_ENHANCED_REGION) {\n        return getUSEnhancedRegions(metaData);\n    }\n    if (type === MetadataModules.CALIBRATION) {\n        const modality = getValue(metaData['00080060']);\n        if (modality === 'US') {\n            const enhancedRegion = getUSEnhancedRegions(metaData);\n            return {\n                sequenceOfUltrasoundRegions: enhancedRegion,\n            };\n        }\n    }\n    if (type === MetadataModules.IMAGE_URL) {\n        return getImageUrlModule(imageId, metaData);\n    }\n    if (type === MetadataModules.CINE) {\n        return getCineModule(imageId, metaData);\n    }\n    if (type === MetadataModules.IMAGE_PIXEL) {\n        return {\n            samplesPerPixel: getNumberValue(metaData['00280002']),\n            photometricInterpretation: getValue(metaData['00280004']),\n            rows: getNumberValue(metaData['00280010']),\n            columns: getNumberValue(metaData['00280011']),\n            bitsAllocated: getNumberValue(metaData['00280100']),\n            bitsStored: getNumberValue(metaData['00280101']),\n            highBit: getValue(metaData['00280102']),\n            pixelRepresentation: getNumberValue(metaData['00280103']),\n            planarConfiguration: getNumberValue(metaData['00280006']),\n            pixelAspectRatio: getValue(metaData['00280034']),\n            smallestPixelValue: getNumberValue(metaData['00280106']),\n            largestPixelValue: getNumberValue(metaData['00280107']),\n            redPaletteColorLookupTableDescriptor: getNumberValues(metaData['00281101']),\n            greenPaletteColorLookupTableDescriptor: getNumberValues(metaData['00281102']),\n            bluePaletteColorLookupTableDescriptor: getNumberValues(metaData['00281103']),\n            redPaletteColorLookupTableData: getNumberValues(metaData['00281201']),\n            greenPaletteColorLookupTableData: getNumberValues(metaData['00281202']),\n            bluePaletteColorLookupTableData: getNumberValues(metaData['00281203']),\n        };\n    }\n    if (type === MetadataModules.VOI_LUT) {\n        return {\n            windowCenter: getNumberValues(metaData['00281050'], 1),\n            windowWidth: getNumberValues(metaData['00281051'], 1),\n            voiLUTFunction: getValue(metaData['00281056']),\n        };\n    }\n    if (type === MetadataModules.MODALITY_LUT) {\n        return {\n            rescaleIntercept: getNumberValue(metaData['00281052']),\n            rescaleSlope: getNumberValue(metaData['00281053']),\n            rescaleType: getValue(metaData['00281054']),\n        };\n    }\n    if (type === MetadataModules.SOP_COMMON) {\n        return {\n            sopClassUID: getValue(metaData['00080016']),\n            sopInstanceUID: getValue(metaData['00080018']),\n        };\n    }\n    if (type === MetadataModules.PET_ISOTOPE) {\n        const radiopharmaceuticalInfo = getValue(metaData['00540016']);\n        if (radiopharmaceuticalInfo === undefined) {\n            return;\n        }\n        return {\n            radiopharmaceuticalInfo: {\n                radiopharmaceuticalStartTime: dicomParser.parseTM(getValue(radiopharmaceuticalInfo['00181072'], 0, '')),\n                radiopharmaceuticalStartDateTime: getValue(radiopharmaceuticalInfo['00181078'], 0, ''),\n                radionuclideTotalDose: getNumberValue(radiopharmaceuticalInfo['00181074']),\n                radionuclideHalfLife: getNumberValue(radiopharmaceuticalInfo['00181075']),\n            },\n        };\n    }\n    if (type === MetadataModules.OVERLAY_PLANE) {\n        return getOverlayPlaneModule(metaData);\n    }\n    if (type === 'transferSyntax') {\n        return getTransferSyntax(imageId, metaData);\n    }\n    if (type === MetadataModules.PET_SERIES) {\n        return {\n            correctedImage: getValue(metaData['00280051']),\n            units: getValue(metaData['00541001']),\n            decayCorrection: getValue(metaData['00541102']),\n        };\n    }\n    if (type === MetadataModules.PET_IMAGE) {\n        return {\n            frameReferenceTime: getNumberValue(metaData['00541300']),\n            actualFrameDuration: getNumberValue(metaData['00181242']),\n        };\n    }\n    if (type === 'instance') {\n        return getInstanceModule(imageId, metaDataProvider, instanceModuleNames);\n    }\n}\nexport function getImageUrlModule(imageId, metaData) {\n    const { transferSyntaxUID } = getTransferSyntax(imageId, metaData);\n    const isVideo = utilities.isVideoTransferSyntax(transferSyntaxUID);\n    const imageUrl = imageId.substring(7);\n    const thumbnail = imageUrl.replace('/frames/', '/thumbnail/');\n    let rendered = imageUrl.replace('/frames/', '/rendered/');\n    if (isVideo) {\n        rendered = rendered.replace('/rendered/1', '/rendered');\n    }\n    return {\n        isVideo,\n        rendered,\n        thumbnail,\n    };\n}\nexport function getCineModule(imageId, metaData) {\n    const cineRate = getValue(metaData['00180040']);\n    return {\n        cineRate,\n        numberOfFrames: getNumberValue(metaData['00280008']),\n    };\n}\nexport function getTransferSyntax(imageId, metaData) {\n    return {\n        transferSyntaxUID: getValue(metaData['00020010']) ||\n            getValue(metaData['00083002']),\n    };\n}\nexport default metaDataProvider;\n", "import getValue from './getValue';\nimport getNumberValue from './getNumberValue';\nexport default function getOverlayPlaneModule(metaData) {\n    const overlays = [];\n    for (let overlayGroup = 0x00; overlayGroup <= 0x1e; overlayGroup += 0x02) {\n        let groupStr = `x60${overlayGroup.toString(16)}`;\n        if (groupStr.length === 4) {\n            groupStr = `x600${overlayGroup.toString(16)}`;\n        }\n        const data = getValue(metaData[`${groupStr}3000`]);\n        if (!data) {\n            continue;\n        }\n        const pixelData = [];\n        for (let i = 0; i < data.length; i++) {\n            for (let k = 0; k < 8; k++) {\n                const byte_as_int = metaData.Value[data.dataOffset + i];\n                pixelData[i * 8 + k] = (byte_as_int >> k) & 0b1;\n            }\n        }\n        overlays.push({\n            rows: getNumberValue(metaData[`${groupStr}0010`]),\n            columns: getNumberValue(metaData[`${groupStr}0011`]),\n            type: getValue(metaData[`${groupStr}0040`]),\n            x: getNumberValue(metaData[`${groupStr}0050`], 1) - 1,\n            y: getNumberValue(metaData[`${groupStr}0050`], 0) - 1,\n            pixelData,\n            description: getValue(metaData[`${groupStr}0022`]),\n            label: getValue(metaData[`${groupStr}1500`]),\n            roiArea: getValue(metaData[`${groupStr}1301`]),\n            roiMean: getValue(metaData[`${groupStr}1302`]),\n            roiStandardDeviation: getValue(metaData[`${groupStr}1303`]),\n        });\n    }\n    return {\n        overlays,\n    };\n}\n", "export default function imageIdToURI(imageId) {\n    const colonIndex = imageId.indexOf(':');\n    return imageId.substring(colonIndex + 1);\n}\n", "export default function getTagValue(tag, justElement = true) {\n    if (tag && tag.Value) {\n        if (tag.Value[0] && justElement) {\n            return tag.Value[0];\n        }\n        return tag.Value;\n    }\n    return tag;\n}\n", "import getTagValue from './getTagValue';\nfunction getFrameInformation(PerFrameFunctionalGroupsSequence, SharedFunctionalGroupsSequence, frameNumber) {\n    const shared = (SharedFunctionalGroupsSequence\n        ? Object.values(SharedFunctionalGroupsSequence[0])\n        : [])\n        .map((it) => it['Value']?.[0])\n        .filter((it) => it !== undefined && typeof it === 'object');\n    const perFrame = (PerFrameFunctionalGroupsSequence\n        ? Object.values(PerFrameFunctionalGroupsSequence[frameNumber - 1])\n        : [])\n        .map((it) => it['Value']?.[0])\n        .filter((it) => it !== undefined && typeof it === 'object');\n    return {\n        shared,\n        perFrame,\n    };\n}\nfunction getMultiframeInformation(metaData) {\n    let { 52009230: PerFrameFunctionalGroupsSequence, 52009229: SharedFunctionalGroupsSequence, '00280008': NumberOfFrames, ...rest } = metaData;\n    PerFrameFunctionalGroupsSequence = getTagValue(PerFrameFunctionalGroupsSequence, false);\n    SharedFunctionalGroupsSequence = getTagValue(SharedFunctionalGroupsSequence, false);\n    NumberOfFrames = getTagValue(NumberOfFrames);\n    return {\n        PerFrameFunctionalGroupsSequence,\n        SharedFunctionalGroupsSequence,\n        NumberOfFrames,\n        rest,\n    };\n}\nfunction combineFrameInstance(frameNumber, instance) {\n    const { PerFrameFunctionalGroupsSequence, SharedFunctionalGroupsSequence, NumberOfFrames, rest, } = getMultiframeInformation(instance);\n    if (PerFrameFunctionalGroupsSequence || NumberOfFrames > 1) {\n        const { shared, perFrame } = getFrameInformation(PerFrameFunctionalGroupsSequence, SharedFunctionalGroupsSequence, frameNumber);\n        const newInstance = Object.assign(instance, { frameNumber });\n        [...shared, ...perFrame].forEach((item) => {\n            Object.entries(item).forEach(([key, value]) => {\n                newInstance[key] = value;\n            });\n        });\n        return Object.assign(rest, { '00280008': NumberOfFrames }, newInstance);\n    }\n    return instance;\n}\nexport { combineFrameInstance, getMultiframeInformation, getFrameInformation };\n", "import imageIdToURI from '../imageIdToURI';\nimport { combineFrameInstance } from './combineFrameInstance';\nlet metadataByImageURI = [];\nlet multiframeMetadataByImageURI = {};\nimport getValue from './metaData/getValue';\nfunction _retrieveMultiframeMetadataImageURI(imageURI) {\n    const lastSlashIdx = imageURI.indexOf('/frames/') + 8;\n    const imageIdFrameless = imageURI.slice(0, lastSlashIdx);\n    const frame = parseInt(imageURI.slice(lastSlashIdx), 10);\n    const metadata = metadataByImageURI[`${imageIdFrameless}1`];\n    return {\n        metadata,\n        frame,\n    };\n}\nfunction retrieveMultiframeMetadataImageId(imageId) {\n    const imageURI = imageIdToURI(imageId);\n    return _retrieveMultiframeMetadataImageURI(imageURI);\n}\nfunction isMultiframe(metadata) {\n    if (metadata['52009230'] !== undefined ||\n        metadata['52009229'] !== undefined) {\n        return true;\n    }\n    const numberOfFrames = getValue(metadata['00280008']);\n    return numberOfFrames && numberOfFrames > 1;\n}\nfunction add(imageId, metadata) {\n    const imageURI = imageIdToURI(imageId);\n    Object.defineProperty(metadata, 'isMultiframe', {\n        value: isMultiframe(metadata),\n        enumerable: false,\n    });\n    metadataByImageURI[imageURI] = metadata;\n}\nfunction get(imageId) {\n    const imageURI = imageIdToURI(imageId);\n    const metadata = metadataByImageURI[imageURI];\n    if (metadata && !metadata?.isMultiframe) {\n        return metadata;\n    }\n    const cachedMetadata = multiframeMetadataByImageURI[imageURI];\n    if (cachedMetadata) {\n        return cachedMetadata;\n    }\n    const retrievedMetadata = _retrieveMultiframeMetadataImageURI(imageURI);\n    if (!retrievedMetadata || !retrievedMetadata.metadata) {\n        return;\n    }\n    const { metadata: firstFrameMetadata, frame } = retrievedMetadata;\n    if (firstFrameMetadata) {\n        const combined = combineFrameInstance(frame, firstFrameMetadata);\n        multiframeMetadataByImageURI[imageURI] = combined;\n        return combined;\n    }\n}\nfunction remove(imageId) {\n    const imageURI = imageIdToURI(imageId);\n    metadataByImageURI[imageURI] = undefined;\n    multiframeMetadataByImageURI[imageURI] = undefined;\n}\nfunction purge() {\n    metadataByImageURI = [];\n    multiframeMetadataByImageURI = {};\n}\nexport { metadataByImageURI, isMultiframe, retrieveMultiframeMetadataImageId };\nexport default {\n    add,\n    get,\n    remove,\n    purge,\n};\n", "import getTagValue from '../getTagValue';\nimport getValue from './getValue';\nimport isNMReconstructable from '../../isNMReconstructable';\nimport getNumberValues from './getNumberValues';\nfunction isNMModality(metaData) {\n    const modality = getValue(metaData['00080060']);\n    return modality.includes('NM');\n}\nfunction getImageTypeSubItemFromMetadata(metaData, index) {\n    const imageType = getTagValue(metaData['00080008'], false);\n    if (imageType) {\n        return imageType[index];\n    }\n    return undefined;\n}\nfunction extractOrientationFromNMMultiframeMetadata(metaData) {\n    let imageOrientationPatient;\n    const imageSubType = getImageTypeSubItemFromMetadata(metaData, 2);\n    if (imageSubType && isNMReconstructable(imageSubType)) {\n        const detectorInformationSequence = getTagValue(metaData['00540022']);\n        if (detectorInformationSequence) {\n            imageOrientationPatient = getNumberValues(detectorInformationSequence['00200037'], 6);\n        }\n    }\n    return imageOrientationPatient;\n}\nfunction extractPositionFromNMMultiframeMetadata(metaData) {\n    let imagePositionPatient;\n    const imageSubType = getImageTypeSubItemFromMetadata(metaData, 2);\n    if (imageSubType && isNMReconstructable(imageSubType)) {\n        const detectorInformationSequence = getTagValue(metaData['00540022']);\n        if (detectorInformationSequence) {\n            imagePositionPatient = getNumberValues(detectorInformationSequence['00200032'], 3);\n        }\n    }\n    return imagePositionPatient;\n}\nexport { extractOrientationFromNMMultiframeMetadata, extractPositionFromNMMultiframeMetadata, isNMModality, getImageTypeSubItemFromMetadata, };\n", "import getNumberValues from './getNumberValues';\nimport { extractOrientationFromNMMultiframeMetadata, extractPositionFromNMMultiframeMetadata, isNMModality, } from './NMHelpers';\nfunction extractOrientationFromMetadata(metaData) {\n    let imageOrientationPatient = getNumberValues(metaData['00200037'], 6);\n    if (!imageOrientationPatient && isNMModality(metaData)) {\n        imageOrientationPatient =\n            extractOrientationFromNMMultiframeMetadata(metaData);\n    }\n    return imageOrientationPatient;\n}\nfunction extractPositionFromMetadata(metaData) {\n    let imagePositionPatient = getNumberValues(metaData['00200032'], 3);\n    if (!imagePositionPatient && isNMModality(metaData)) {\n        imagePositionPatient = extractPositionFromNMMultiframeMetadata(metaData);\n    }\n    return imagePositionPatient;\n}\nexport { extractOrientationFromMetadata, extractPositionFromMetadata };\n", "import getNumberValues from './getNumberValues';\nfunction getFirstNumberValue(sequence, key) {\n    const values = getNumberValues(sequence[key]);\n    return values ? values[0] : null;\n}\nexport { getFirstNumberValue };\n", "function getSequenceItems(element) {\n    if (!element?.Value?.length) {\n        return [];\n    }\n    if (!Array.isArray(element.Value)) {\n        if (typeof element.Value === 'object') {\n            console.warn('Warning: Value should be an array, but an object was found. Encapsulating the object in an array.');\n            return [element.Value];\n        }\n        return [];\n    }\n    return element.Value;\n}\nexport default getSequenceItems;\n", "import { getFirstNumberValue } from './getFirstNumberValue';\nimport getSequenceItems from './getSequenceItems';\nfunction getUSEnhancedRegions(metadata) {\n    const sequenceOfUltrasoundRegions = getSequenceItems(metadata['00186011']);\n    if (!sequenceOfUltrasoundRegions || !sequenceOfUltrasoundRegions.length) {\n        return null;\n    }\n    const regions = sequenceOfUltrasoundRegions.map((sequence) => {\n        const physicalDeltaX = getFirstNumberValue(sequence, '0018602C');\n        const physicalDeltaY = getFirstNumberValue(sequence, '0018602E');\n        const physicalUnitsXDirection = getFirstNumberValue(sequence, '00186024');\n        const physicalUnitsYDirection = getFirstNumberValue(sequence, '00186026');\n        const regionLocationMinY0 = getFirstNumberValue(sequence, '0018601A');\n        const regionLocationMaxY1 = getFirstNumberValue(sequence, '0018601E');\n        const regionLocationMinX0 = getFirstNumberValue(sequence, '00186018');\n        const regionLocationMaxX1 = getFirstNumberValue(sequence, '0018601C');\n        const referencePixelX0 = getFirstNumberValue(sequence, '00186020');\n        const referencePixelY0 = getFirstNumberValue(sequence, '00186022');\n        const referencePhysicalPixelValueY = getFirstNumberValue(sequence, '0018602A');\n        const referencePhysicalPixelValueX = getFirstNumberValue(sequence, '00186028');\n        const regionSpatialFormat = getFirstNumberValue(sequence, '00186012');\n        const regionDataType = getFirstNumberValue(sequence, '00186014');\n        const regionFlags = getFirstNumberValue(sequence, '00186016');\n        const transducerFrequency = getFirstNumberValue(sequence, '00186030');\n        return {\n            regionLocationMinY0,\n            regionLocationMaxY1,\n            regionLocationMinX0,\n            regionLocationMaxX1,\n            referencePixelX0,\n            referencePixelY0,\n            physicalDeltaX,\n            physicalDeltaY,\n            physicalUnitsXDirection,\n            physicalUnitsYDirection,\n            referencePhysicalPixelValueY,\n            referencePhysicalPixelValueX,\n            regionSpatialFormat,\n            regionDataType,\n            regionFlags,\n            transducerFrequency,\n        };\n    });\n    return regions;\n}\nexport { getUSEnhancedRegions };\n", "import { getOptions } from './options';\nimport metaDataManager from '../wadors/metaDataManager';\nimport extractMultipart from '../wadors/extractMultipart';\nimport { getImageQualityStatus } from '../wadors/getImageQualityStatus';\nexport default function rangeRequest(url, imageId, defaultHeaders = {}, options = {}) {\n    const globalOptions = getOptions();\n    const { retrieveOptions = {}, streamingData } = options;\n    const chunkSize = streamingData.chunkSize ||\n        getValue(imageId, retrieveOptions, 'chunkSize') ||\n        65536;\n    const errorInterceptor = (err) => {\n        if (typeof globalOptions.errorInterceptor === 'function') {\n            const error = new Error('request failed');\n            globalOptions.errorInterceptor(error);\n        }\n        else {\n            console.warn('rangeRequest:Caught', err);\n        }\n    };\n    const promise = new Promise(async (resolve, reject) => {\n        const headers = Object.assign({}, defaultHeaders);\n        Object.keys(headers).forEach(function (key) {\n            if (headers[key] === null || headers[key] === undefined) {\n                delete headers[key];\n            }\n        });\n        try {\n            if (!streamingData.encodedData) {\n                streamingData.chunkSize = chunkSize;\n                streamingData.rangesFetched = 0;\n            }\n            const byteRange = getByteRange(streamingData, retrieveOptions);\n            const { encodedData, responseHeaders } = await fetchRangeAndAppend(url, headers, byteRange, streamingData);\n            const contentType = responseHeaders.get('content-type');\n            const { totalBytes } = streamingData;\n            const doneAllBytes = totalBytes === encodedData.byteLength;\n            const extract = extractMultipart(contentType, encodedData, {\n                isPartial: true,\n            });\n            const imageQualityStatus = getImageQualityStatus(retrieveOptions, doneAllBytes || extract.extractDone);\n            resolve({\n                ...extract,\n                imageQualityStatus,\n                percentComplete: extract.extractDone\n                    ? 100\n                    : (chunkSize * 100) / totalBytes,\n            });\n        }\n        catch (err) {\n            errorInterceptor(err);\n            console.error(err);\n            reject(err);\n        }\n    });\n    return promise;\n}\nasync function fetchRangeAndAppend(url, headers, range, streamingData) {\n    if (range) {\n        headers = Object.assign(headers, {\n            Range: `bytes=${range[0]}-${range[1]}`,\n        });\n    }\n    let { encodedData } = streamingData;\n    if (range[1] && encodedData?.byteLength > range[1]) {\n        return streamingData;\n    }\n    const response = await fetch(url, {\n        headers,\n        signal: undefined,\n    });\n    const responseArrayBuffer = await response.arrayBuffer();\n    const responseTypedArray = new Uint8Array(responseArrayBuffer);\n    const { status } = response;\n    let newByteArray;\n    if (encodedData) {\n        newByteArray = new Uint8Array(encodedData.length + responseTypedArray.length);\n        newByteArray.set(encodedData, 0);\n        newByteArray.set(responseTypedArray, encodedData.length);\n        streamingData.rangesFetched = 1;\n    }\n    else {\n        newByteArray = new Uint8Array(responseTypedArray.length);\n        newByteArray.set(responseTypedArray, 0);\n        streamingData.rangesFetched++;\n    }\n    streamingData.encodedData = encodedData = newByteArray;\n    streamingData.responseHeaders = response.headers;\n    const contentRange = response.headers.get('Content-Range');\n    if (contentRange) {\n        streamingData.totalBytes = Number(contentRange.split('/')[1]);\n    }\n    else if (status !== 206 || !range) {\n        streamingData.totalBytes = encodedData?.byteLength;\n    }\n    else if (range[1] === '' || encodedData?.length < range[1]) {\n        streamingData.totalBytes = encodedData.byteLength;\n    }\n    else {\n        streamingData.totalBytes = Number.MAX_SAFE_INTEGER;\n    }\n    return streamingData;\n}\nfunction getValue(imageId, src, attr) {\n    const value = src[attr];\n    if (typeof value !== 'function') {\n        return value;\n    }\n    const metaData = metaDataManager.get(imageId);\n    return value(metaData, imageId);\n}\nfunction getByteRange(streamingData, retrieveOptions) {\n    const { totalBytes, encodedData, chunkSize = 65536 } = streamingData;\n    const { rangeIndex = 0 } = retrieveOptions;\n    if (rangeIndex === -1 && (!totalBytes || !encodedData)) {\n        return [0, ''];\n    }\n    if (rangeIndex === -1 || encodedData?.byteLength > totalBytes - chunkSize) {\n        return [encodedData?.byteLength || 0, ''];\n    }\n    return [encodedData?.byteLength || 0, chunkSize * (rangeIndex + 1) - 1];\n}\n", "import { xhrRequest } from '../internal/index';\nimport streamRequest from '../internal/streamRequest';\nimport rangeRequest from '../internal/rangeRequest';\nimport extractMultipart from './extractMultipart';\nimport { getImageQualityStatus } from './getImageQualityStatus';\nfunction getPixelData(uri, imageId, mediaType = 'application/octet-stream', options) {\n    const { streamingData, retrieveOptions = {} } = options || {};\n    const headers = {\n        Accept: mediaType,\n    };\n    let url = retrieveOptions.urlArguments\n        ? `${uri}${uri.indexOf('?') === -1 ? '?' : '&'}${retrieveOptions.urlArguments}`\n        : uri;\n    if (retrieveOptions.framesPath) {\n        url = url.replace('/frames/', retrieveOptions.framesPath);\n    }\n    if (streamingData?.url !== url) {\n        options.streamingData = { url };\n    }\n    if (retrieveOptions.rangeIndex !== undefined) {\n        return rangeRequest(url, imageId, headers, options);\n    }\n    if (retrieveOptions.streaming) {\n        return streamRequest(url, imageId, headers, options);\n    }\n    const loadPromise = xhrRequest(url, imageId, headers);\n    const { xhr } = loadPromise;\n    return loadPromise.then(function (imageFrameAsArrayBuffer) {\n        const contentType = xhr.getResponseHeader('Content-Type') || 'application/octet-stream';\n        const extracted = extractMultipart(contentType, new Uint8Array(imageFrameAsArrayBuffer));\n        extracted.imageQualityStatus = getImageQualityStatus(retrieveOptions, true);\n        return extracted;\n    });\n}\nexport default getPixelData;\n", "import { Enums, imageRetrievalPoolManager, utilities, } from '@cornerstonejs/core';\nimport { Enums as csCoreEnums } from '@cornerstonejs/core';\nimport createImage from '../createImage';\nimport getPixelData from './getPixelData';\nconst { ProgressiveIterator } = utilities;\nconst { ImageQualityStatus } = Enums;\nconst streamableTransferSyntaxes = new Set([\n    '3.2.840.10008.1.2.4.96',\n    '1.2.840.10008.1.2.4.202',\n    '1.2.840.10008.1.2.4.203',\n]);\nexport function getTransferSyntaxForContentType(contentType) {\n    const defaultTransferSyntax = '1.2.840.10008.1.2';\n    if (!contentType) {\n        return defaultTransferSyntax;\n    }\n    const parameters = contentType.split(';');\n    const params = {};\n    parameters.forEach((parameter) => {\n        const parameterValues = parameter.split('=');\n        if (parameterValues.length !== 2) {\n            return;\n        }\n        const value = parameterValues[1].trim().replace(/\"/g, '');\n        params[parameterValues[0].trim()] = value;\n    });\n    const defaultTransferSyntaxByType = {\n        'image/jpeg': '1.2.840.10008.1.2.4.50',\n        'image/x-dicom-rle': '1.2.840.10008.1.2.5',\n        'image/x-jls': '1.2.840.10008.1.2.4.80',\n        'image/jls': '1.2.840.10008.1.2.4.80',\n        'image/jll': '1.2.840.10008.1.2.4.70',\n        'image/jp2': '1.2.840.10008.1.2.4.90',\n        'image/jpx': '1.2.840.10008.1.2.4.92',\n        'image/jphc': '3.2.840.10008.1.2.4.96',\n        'image/jxl': '1.2.840.10008.1.2.4.140',\n    };\n    if (params['transfer-syntax']) {\n        return params['transfer-syntax'];\n    }\n    else if (contentType &&\n        !Object.keys(params).length &&\n        defaultTransferSyntaxByType[contentType]) {\n        return defaultTransferSyntaxByType[contentType];\n    }\n    else if (params.type && defaultTransferSyntaxByType[params.type]) {\n        return defaultTransferSyntaxByType[params.type];\n    }\n    else if (defaultTransferSyntaxByType[contentType]) {\n        return defaultTransferSyntaxByType[contentType];\n    }\n    return defaultTransferSyntax;\n}\nfunction getImageRetrievalPool() {\n    return imageRetrievalPoolManager;\n}\nconst mediaType = 'multipart/related; type=application/octet-stream; transfer-syntax=*';\nfunction loadImage(imageId, options = {}) {\n    const imageRetrievalPool = getImageRetrievalPool();\n    const start = new Date().getTime();\n    const uncompressedIterator = new ProgressiveIterator('decompress');\n    async function sendXHR(imageURI, imageId, mediaType) {\n        uncompressedIterator.generate(async (it) => {\n            const compressedIt = ProgressiveIterator.as(getPixelData(imageURI, imageId, mediaType, options));\n            let lastDecodeLevel = 10;\n            for await (const result of compressedIt) {\n                const { pixelData, imageQualityStatus = ImageQualityStatus.FULL_RESOLUTION, percentComplete, done = true, extractDone = true, } = result;\n                const transferSyntax = getTransferSyntaxForContentType(result.contentType);\n                if (!extractDone && !streamableTransferSyntaxes.has(transferSyntax)) {\n                    continue;\n                }\n                const decodeLevel = result.decodeLevel ??\n                    (imageQualityStatus === ImageQualityStatus.FULL_RESOLUTION\n                        ? 0\n                        : decodeLevelFromComplete(percentComplete, options.retrieveOptions?.decodeLevel));\n                if (!done && lastDecodeLevel <= decodeLevel) {\n                    continue;\n                }\n                try {\n                    const useOptions = {\n                        ...options,\n                        decodeLevel,\n                    };\n                    const image = (await createImage(imageId, pixelData, transferSyntax, useOptions));\n                    const end = new Date().getTime();\n                    image.loadTimeInMS = end - start;\n                    image.transferSyntaxUID = transferSyntax;\n                    image.imageQualityStatus = imageQualityStatus;\n                    it.add(image, done);\n                    lastDecodeLevel = decodeLevel;\n                }\n                catch (e) {\n                    if (extractDone) {\n                        console.warn(\"Couldn't decode\", e);\n                        throw e;\n                    }\n                }\n            }\n        });\n    }\n    const requestType = options.requestType || csCoreEnums.RequestType.Interaction;\n    const additionalDetails = options.additionalDetails || { imageId };\n    const priority = options.priority === undefined ? 5 : options.priority;\n    const uri = imageId.substring(7);\n    imageRetrievalPool.addRequest(sendXHR.bind(this, uri, imageId, mediaType), requestType, additionalDetails, priority);\n    return {\n        promise: uncompressedIterator.getDonePromise(),\n        cancelFn: undefined,\n    };\n}\nfunction decodeLevelFromComplete(percent, retrieveDecodeLevel = 4) {\n    const testSize = percent / 100 - 0.02;\n    if (testSize > 1 / 4) {\n        return Math.min(retrieveDecodeLevel, 0);\n    }\n    if (testSize > 1 / 16) {\n        return Math.min(retrieveDecodeLevel, 1);\n    }\n    if (testSize > 1 / 64) {\n        return Math.min(retrieveDecodeLevel, 2);\n    }\n    return Math.min(retrieveDecodeLevel, 3);\n}\nexport default loadImage;\n", "import { metaData, registerImageLoader } from '@cornerstonejs/core';\nimport loadImage from './loadImage';\nimport { metaDataProvider } from './metaData';\nexport default function () {\n    registerImageLoader('wadors', loadImage);\n    metaData.addProvider(metaDataProvider);\n}\n", "import getNumberString from './metaData/getNumberString';\nimport getNumberValue from './metaData/getNumberValue';\nimport getNumberValues from './metaData/getNumberValues';\nimport getValue from './metaData/getValue';\nimport metaDataProvider from './metaData/metaDataProvider';\nimport findIndexOfString from './findIndexOfString';\nimport getPixelData from './getPixelData';\nimport metaDataManager from './metaDataManager';\nimport loadImage from './loadImage';\nimport register from './register';\nconst metaData = {\n    getNumberString,\n    getNumberValue,\n    getNumberValues,\n    getValue,\n    metaDataProvider,\n};\nexport default {\n    metaData,\n    findIndexOfString,\n    getPixelData,\n    loadImage,\n    metaDataManager,\n    register,\n};\nexport { metaData, findIndexOfString, getPixelData, loadImage, metaDataManager, register, };\n", "import wadouriRegister from './wadouri/register';\nimport wadorsRegister from './wadors/register';\nfunction registerLoaders() {\n    wadorsRegister();\n    wadouriRegister();\n}\nexport default registerLoaders;\n", "import { setOptions } from './imageLoader/internal/index';\nimport registerLoaders from './imageLoader/registerLoaders';\nimport { getWebWorkerManager } from '@cornerstonejs/core';\nconst workerFn = () => {\n    const instance = new Worker(new URL('./decodeImageFrameWorker.js', import.meta.url), { type: 'module' });\n    return instance;\n};\nfunction init(options = {}) {\n    setOptions(options);\n    registerLoaders();\n    const workerManager = getWebWorkerManager();\n    const maxWorkers = options?.maxWebWorkers || getReasonableWorkerCount();\n    workerManager.registerWorker('dicomImageLoader', workerFn, {\n        maxWorkerInstances: maxWorkers,\n    });\n}\nfunction getReasonableWorkerCount() {\n    if (typeof navigator !== 'undefined' && navigator.hardwareConcurrency) {\n        return Math.max(1, Math.floor(navigator.hardwareConcurrency / 2));\n    }\n    return 1;\n}\nexport default init;\n", "function isJPEGBaseline8BitColor(imageFrame, transferSyntax) {\n    transferSyntax = transferSyntax || imageFrame.transferSyntax;\n    if (imageFrame.bitsAllocated === 8 &&\n        transferSyntax === '1.2.840.10008.1.2.4.50' &&\n        (imageFrame.samplesPerPixel === 3 || imageFrame.samplesPerPixel === 4)) {\n        return true;\n    }\n}\nexport default isJPEGBaseline8BitColor;\n", "import transferSyntaxes from './transferSyntaxes';\nexport { transferSyntaxes };\n", "const transferSyntaxes = {\n    IMPLICIT_VR_LITTLE_ENDIAN: '1.2.840.10008.1.2',\n    EXPLICIT_VR_LITTLE_ENDIAN: '1.2.840.10008.1.2.1',\n    DEFLATED_EXPLICIT_VR_LITTLE_ENDIAN: '1.2.840.10008.1.2.1.99',\n    EXPLICIT_VR_BIG_ENDIAN: '1.2.840.10008.1.2.2',\n    JPEG_BASELINE_PROCESS_1: '1.2.840.10008.1.2.4.50',\n    JPEG_EXTENDED_PROCESS_2_4: '1.2.840.10008.1.2.4.51',\n    JPEG_EXTENDED_PROCESSES_3_5: '1.2.840.10008.1.2.4.52',\n    JPEG_SPECTRAL_SELECTION_NONHIERARCHICAL_PROCESSES_6_8: '1.2.840.10008.1.2.4.53',\n    JPEG_SPECTRAL_SELECTION_NONHIERARCHICAL_PROCESSES_7_9: '1.2.840.10008.1.2.4.54',\n    JPEG_FULL_PROGRESSION_NONHIERARCHICAL_PROCESSES_10_12: '1.2.840.10008.1.2.4.55',\n    JPEG_FULL_PROGRESSION_NONHIERARCHICAL_PROCESSES_11_13: '1.2.840.10008.1.2.4.56',\n    JPEG_LOSSLESS_NONHIERARCHICAL_PROCESS_14: '1.2.840.10008.1.2.4.57',\n    JPEG_LOSSLESS_NONHIERARCHICAL_PROCESS_15: '1.2.840.10008.1.2.4.58',\n    JPEG_EXTENDED_HIERARCHICAL_PROCESSES_16_18: '1.2.840.10008.1.2.4.59',\n    JPEG_EXTENDED_HIERARCHICAL_PROCESSES_17_19: '1.2.840.10008.1.2.4.60',\n    JPEG_SPECTRAL_SELECTION_HIERARCHICAL_PROCESSES_20_22: '1.2.840.10008.1.2.4.61',\n    JPEG_SPECTRAL_SELECTION_HIERARCHICAL_PROCESSES_21_23: '1.2.840.10008.1.2.4.62',\n    JPEG_FULL_PROGRESSION_HIERARCHICAL_PROCESSES_24_26: '1.2.840.10008.1.2.4.63',\n    JPEG_FULL_PROGRESSION_HIERARCHICAL_PROCESSES_25_27: '1.2.840.10008.1.2.4.64',\n    JPEG_LOSSLESS_NONHIERARCHICAL_PROCESS_28: '1.2.840.10008.1.2.4.65',\n    JPEG_LOSSLESS_NONHIERARCHICAL_PROCESS_29: '1.2.840.10008.1.2.4.66',\n    JPEG_LOSSLESS_NONHIERARCHICAL_FIRST_ORDER_PREDICTION_PROCESS_14: '1.2.840.10008.1.2.4.70',\n    JPEG_LS_LOSSLESS_IMAGE_COMPRESSION: '1.2.840.10008.1.2.4.80',\n    JPEG_LS_LOSSY_NEAR_LOSSLESS_IMAGE_COMPRESSION: '1.2.840.10008.1.2.4.81',\n    JPEG_2000_IMAGE_COMPRESSION_LOSSLESS_ONLY: '1.2.840.10008.1.2.4.90',\n    JPEG_2000_IMAGE_COMPRESSION: '1.2.840.10008.1.2.4.91',\n    JPEG_2000_PART_2_MULTICOMPONENT_IMAGE_COMPRESSION_LOSSLESS_ONLY: '1.2.840.10008.1.2.4.92',\n    JPEG_2000_PART_2_MULTICOMPONENT_IMAGE_COMPRESSION: '1.2.840.10008.1.2.4.93',\n    JPIP_REFERENCED: '1.2.840.10008.1.2.4.94',\n    JPIP_REFERENCED_DEFLATE: '1.2.840.10008.1.2.4.95',\n    MPEG2_MAIN_PROFILE_MAIN_LEVEL: '1.2.840.10008.1.2.4.100',\n    MPEG4_AVC_H264_HIGH_PROFILE_LEVEL_4_1: '1.2.840.10008.1.2.4.101',\n    MPEG4_AVC_H264_BD_COMPATIBLE_HIGH_PROFILE_LEVEL_4_1: '1.2.840.10008.1.2.4.102',\n    MPEG4_AVC_H264_HIGH_PROFILE_FOR_2D_VIDEO: '1.2.840.10008.1.2.4.103',\n    MPEG4_AVC_H264_HIGH_PROFILE_FOR_3D_VIDEO: '1.2.840.10008.1.2.4.104',\n    JPIP_LOSSLESS: '1.2.840.10008.1.2.4.96',\n    JPIP_PART2_MULTICOMPONENT_IMAGE_COMPRESSION: '1.2.840.10008.1.2.4.97',\n    RFC_2557_MIME_ENCAPSULATION: '1.2.840.10008.1.2.6.1',\n    JPEG_XR_IMAGE_COMPRESSION: '1.2.840.10008.1.2.6.2',\n    JPEG_2000_IMAGE_COMPRESSION_LOSSLESS_ONLY_RETIRED: '1.2.840.10008.1.2.4.90R',\n    JPEG_2000_IMAGE_COMPRESSION_RETIRED: '1.2.840.10008.1.2.4.91R',\n    JPEG_2000_PART_2_MULTICOMPONENT_IMAGE_COMPRESSION_LOSSLESS_ONLY_RETIRED: '1.2.840.10008.1.2.4.92R',\n    JPEG_2000_PART_2_MULTICOMPONENT_IMAGE_COMPRESSION_RETIRED: '1.2.840.10008.1.2.4.93R',\n};\nexport default transferSyntaxes;\n", "export default function bilinear(src, dest) {\n    const { rows: srcRows, columns: srcColumns, data: srcData } = src;\n    const { rows, columns, data } = dest;\n    const xSrc1Off = [];\n    const xSrc2Off = [];\n    const xFrac = [];\n    for (let x = 0; x < columns; x++) {\n        const xSrc = (x * (srcColumns - 1)) / (columns - 1);\n        xSrc1Off[x] = Math.floor(xSrc);\n        xSrc2Off[x] = Math.min(xSrc1Off[x] + 1, srcColumns - 1);\n        xFrac[x] = xSrc - xSrc1Off[x];\n    }\n    for (let y = 0; y < rows; y++) {\n        const ySrc = (y * (srcRows - 1)) / (rows - 1);\n        const ySrc1Off = Math.floor(ySrc) * srcColumns;\n        const ySrc2Off = Math.min(ySrc1Off + srcColumns, (srcRows - 1) * srcColumns);\n        const yFrac = ySrc - Math.floor(ySrc);\n        const yFracInv = 1 - yFrac;\n        const yOff = y * columns;\n        for (let x = 0; x < columns; x++) {\n            const p00 = srcData[ySrc1Off + xSrc1Off[x]];\n            const p10 = srcData[ySrc1Off + xSrc2Off[x]];\n            const p01 = srcData[ySrc2Off + xSrc1Off[x]];\n            const p11 = srcData[ySrc2Off + xSrc2Off[x]];\n            const xFracInv = 1 - xFrac[x];\n            data[yOff + x] =\n                (p00 * xFracInv + p10 * xFrac[x]) * yFracInv +\n                    (p01 * xFracInv + p11 * xFrac[x]) * yFrac;\n        }\n    }\n    return data;\n}\n", "export default function replicate(src, dest) {\n    const { rows: srcRows, columns: srcColumns, pixelData: srcData, samplesPerPixel = 1, } = src;\n    const { rows, columns, pixelData } = dest;\n    const xSrc1Off = [];\n    for (let x = 0; x < columns; x++) {\n        const xSrc = (x * (srcColumns - 1)) / (columns - 1);\n        xSrc1Off[x] = Math.floor(xSrc) * samplesPerPixel;\n    }\n    for (let y = 0; y < rows; y++) {\n        const ySrc = (y * (srcRows - 1)) / (rows - 1);\n        const ySrc1Off = Math.floor(ySrc) * srcColumns * samplesPerPixel;\n        const yOff = y * columns;\n        for (let x = 0; x < columns; x++) {\n            for (let sample = 0; sample < samplesPerPixel; sample++) {\n                pixelData[yOff + x + sample] = srcData[ySrc1Off + xSrc1Off[x] + sample];\n            }\n        }\n    }\n    return pixelData;\n}\n", "async function decodeLittleEndian(imageFrame, pixelData) {\n    let arrayBuffer = pixelData.buffer;\n    let offset = pixelData.byteOffset;\n    const length = pixelData.length;\n    if (imageFrame.bitsAllocated === 16) {\n        if (offset % 2) {\n            arrayBuffer = arrayBuffer.slice(offset);\n            offset = 0;\n        }\n        if (imageFrame.pixelRepresentation === 0) {\n            imageFrame.pixelData = new Uint16Array(arrayBuffer, offset, length / 2);\n        }\n        else {\n            imageFrame.pixelData = new Int16Array(arrayBuffer, offset, length / 2);\n        }\n    }\n    else if (imageFrame.bitsAllocated === 8 || imageFrame.bitsAllocated === 1) {\n        imageFrame.pixelData = pixelData;\n    }\n    else if (imageFrame.bitsAllocated === 32) {\n        if (offset % 2) {\n            arrayBuffer = arrayBuffer.slice(offset);\n            offset = 0;\n        }\n        if (imageFrame.floatPixelData || imageFrame.doubleFloatPixelData) {\n            throw new Error('Float pixel data is not supported for parsing into ImageFrame');\n        }\n        if (imageFrame.pixelRepresentation === 0) {\n            imageFrame.pixelData = new Uint32Array(arrayBuffer, offset, length / 4);\n        }\n        else if (imageFrame.pixelRepresentation === 1) {\n            imageFrame.pixelData = new Int32Array(arrayBuffer, offset, length / 4);\n        }\n        else {\n            imageFrame.pixelData = new Float32Array(arrayBuffer, offset, length / 4);\n        }\n    }\n    return imageFrame;\n}\nexport default decodeLittleEndian;\n", "function swap16(val) {\n    return ((val & 0xff) << 8) | ((val >> 8) & 0xff);\n}\nasync function decodeBigEndian(imageFrame, pixelData) {\n    if (imageFrame.bitsAllocated === 16) {\n        let arrayBuffer = pixelData.buffer;\n        let offset = pixelData.byteOffset;\n        const length = pixelData.length;\n        if (offset % 2) {\n            arrayBuffer = arrayBuffer.slice(offset);\n            offset = 0;\n        }\n        if (imageFrame.pixelRepresentation === 0) {\n            imageFrame.pixelData = new Uint16Array(arrayBuffer, offset, length / 2);\n        }\n        else {\n            imageFrame.pixelData = new Int16Array(arrayBuffer, offset, length / 2);\n        }\n        for (let i = 0; i < imageFrame.pixelData.length; i++) {\n            imageFrame.pixelData[i] = swap16(imageFrame.pixelData[i]);\n        }\n    }\n    else if (imageFrame.bitsAllocated === 8) {\n        imageFrame.pixelData = pixelData;\n    }\n    return imageFrame;\n}\nexport default decodeBigEndian;\n", "async function decodeRLE(imageFrame, pixelData) {\n    if (imageFrame.bitsAllocated === 8) {\n        if (imageFrame.planarConfiguration) {\n            return decode8Planar(imageFrame, pixelData);\n        }\n        return decode8(imageFrame, pixelData);\n    }\n    else if (imageFrame.bitsAllocated === 16) {\n        return decode16(imageFrame, pixelData);\n    }\n    throw new Error('unsupported pixel format for RLE');\n}\nfunction decode8(imageFrame, pixelData) {\n    const frameData = pixelData;\n    const frameSize = imageFrame.rows * imageFrame.columns;\n    const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);\n    const header = new DataView(frameData.buffer, frameData.byteOffset);\n    const data = new Int8Array(frameData.buffer, frameData.byteOffset);\n    const out = new Int8Array(outFrame);\n    let outIndex = 0;\n    const numSegments = header.getInt32(0, true);\n    for (let s = 0; s < numSegments; ++s) {\n        outIndex = s;\n        let inIndex = header.getInt32((s + 1) * 4, true);\n        let maxIndex = header.getInt32((s + 2) * 4, true);\n        if (maxIndex === 0) {\n            maxIndex = frameData.length;\n        }\n        const endOfSegment = frameSize * numSegments;\n        while (inIndex < maxIndex) {\n            const n = data[inIndex++];\n            if (n >= 0 && n <= 127) {\n                for (let i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {\n                    out[outIndex] = data[inIndex++];\n                    outIndex += imageFrame.samplesPerPixel;\n                }\n            }\n            else if (n <= -1 && n >= -127) {\n                const value = data[inIndex++];\n                for (let j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {\n                    out[outIndex] = value;\n                    outIndex += imageFrame.samplesPerPixel;\n                }\n            }\n        }\n    }\n    imageFrame.pixelData = new Uint8Array(outFrame);\n    return imageFrame;\n}\nfunction decode8Planar(imageFrame, pixelData) {\n    const frameData = pixelData;\n    const frameSize = imageFrame.rows * imageFrame.columns;\n    const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);\n    const header = new DataView(frameData.buffer, frameData.byteOffset);\n    const data = new Int8Array(frameData.buffer, frameData.byteOffset);\n    const out = new Int8Array(outFrame);\n    let outIndex = 0;\n    const numSegments = header.getInt32(0, true);\n    for (let s = 0; s < numSegments; ++s) {\n        outIndex = s * frameSize;\n        let inIndex = header.getInt32((s + 1) * 4, true);\n        let maxIndex = header.getInt32((s + 2) * 4, true);\n        if (maxIndex === 0) {\n            maxIndex = frameData.length;\n        }\n        const endOfSegment = frameSize * numSegments;\n        while (inIndex < maxIndex) {\n            const n = data[inIndex++];\n            if (n >= 0 && n <= 127) {\n                for (let i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {\n                    out[outIndex] = data[inIndex++];\n                    outIndex++;\n                }\n            }\n            else if (n <= -1 && n >= -127) {\n                const value = data[inIndex++];\n                for (let j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {\n                    out[outIndex] = value;\n                    outIndex++;\n                }\n            }\n        }\n    }\n    imageFrame.pixelData = new Uint8Array(outFrame);\n    return imageFrame;\n}\nfunction decode16(imageFrame, pixelData) {\n    const frameData = pixelData;\n    const frameSize = imageFrame.rows * imageFrame.columns;\n    const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel * 2);\n    const header = new DataView(frameData.buffer, frameData.byteOffset);\n    const data = new Int8Array(frameData.buffer, frameData.byteOffset);\n    const out = new Int8Array(outFrame);\n    const numSegments = header.getInt32(0, true);\n    for (let s = 0; s < numSegments; ++s) {\n        let outIndex = 0;\n        const highByte = s === 0 ? 1 : 0;\n        let inIndex = header.getInt32((s + 1) * 4, true);\n        let maxIndex = header.getInt32((s + 2) * 4, true);\n        if (maxIndex === 0) {\n            maxIndex = frameData.length;\n        }\n        while (inIndex < maxIndex) {\n            const n = data[inIndex++];\n            if (n >= 0 && n <= 127) {\n                for (let i = 0; i < n + 1 && outIndex < frameSize; ++i) {\n                    out[outIndex * 2 + highByte] = data[inIndex++];\n                    outIndex++;\n                }\n            }\n            else if (n <= -1 && n >= -127) {\n                const value = data[inIndex++];\n                for (let j = 0; j < -n + 1 && outIndex < frameSize; ++j) {\n                    out[outIndex * 2 + highByte] = value;\n                    outIndex++;\n                }\n            }\n        }\n    }\n    if (imageFrame.pixelRepresentation === 0) {\n        imageFrame.pixelData = new Uint16Array(outFrame);\n    }\n    else {\n        imageFrame.pixelData = new Int16Array(outFrame);\n    }\n    return imageFrame;\n}\nexport default decodeRLE;\n", "import libjpegTurboFactory from '@cornerstonejs/codec-libjpeg-turbo-8bit/decodewasmjs';\nconst libjpegTurboWasm = new URL('@cornerstonejs/codec-libjpeg-turbo-8bit/decodewasm', import.meta.url);\nconst local = {\n    codec: undefined,\n    decoder: undefined,\n};\nfunction initLibjpegTurbo() {\n    if (local.codec) {\n        return Promise.resolve();\n    }\n    const libjpegTurboModule = libjpegTurboFactory({\n        locateFile: (f) => {\n            if (f.endsWith('.wasm')) {\n                return libjpegTurboWasm.toString();\n            }\n            return f;\n        },\n    });\n    return new Promise((resolve, reject) => {\n        libjpegTurboModule.then((instance) => {\n            local.codec = instance;\n            local.decoder = new instance.JPEGDecoder();\n            resolve();\n        }, reject);\n    });\n}\nasync function decodeAsync(compressedImageFrame, imageInfo) {\n    await initLibjpegTurbo();\n    const decoder = local.decoder;\n    const encodedBufferInWASM = decoder.getEncodedBuffer(compressedImageFrame.length);\n    encodedBufferInWASM.set(compressedImageFrame);\n    decoder.decode();\n    const frameInfo = decoder.getFrameInfo();\n    const decodedPixelsInWASM = decoder.getDecodedBuffer();\n    const encodedImageInfo = {\n        columns: frameInfo.width,\n        rows: frameInfo.height,\n        bitsPerPixel: frameInfo.bitsPerSample,\n        signed: imageInfo.signed,\n        bytesPerPixel: imageInfo.bytesPerPixel,\n        componentsPerPixel: frameInfo.componentCount,\n    };\n    const pixelData = getPixelData(frameInfo, decodedPixelsInWASM);\n    const encodeOptions = {\n        frameInfo,\n    };\n    return {\n        ...imageInfo,\n        pixelData,\n        imageInfo: encodedImageInfo,\n        encodeOptions,\n        ...encodeOptions,\n        ...encodedImageInfo,\n    };\n}\nfunction getPixelData(frameInfo, decodedBuffer) {\n    if (frameInfo.isSigned) {\n        return new Int8Array(decodedBuffer.buffer, decodedBuffer.byteOffset, decodedBuffer.byteLength);\n    }\n    return new Uint8Array(decodedBuffer.buffer, decodedBuffer.byteOffset, decodedBuffer.byteLength);\n}\nexport default decodeAsync;\n", "const local = {\n    JpegImage: undefined,\n    decodeConfig: {},\n};\nexport function initialize(decodeConfig) {\n    local.decodeConfig = decodeConfig;\n    if (local.JpegImage) {\n        return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n        import('../../codecs/jpeg')\n            .then((module) => {\n            local.JpegImage = module.default;\n            resolve();\n        })\n            .catch(reject);\n    });\n}\nasync function decodeJPEGBaseline12BitAsync(imageFrame, pixelData) {\n    await initialize();\n    if (typeof local.JpegImage === 'undefined') {\n        throw new Error('No JPEG Baseline decoder loaded');\n    }\n    const jpeg = new local.JpegImage();\n    jpeg.parse(pixelData);\n    jpeg.colorTransform = false;\n    if (imageFrame.bitsAllocated === 8) {\n        imageFrame.pixelData = jpeg.getData(imageFrame.columns, imageFrame.rows);\n        return imageFrame;\n    }\n    else if (imageFrame.bitsAllocated === 16) {\n        imageFrame.pixelData = jpeg.getData16(imageFrame.columns, imageFrame.rows);\n        return imageFrame;\n    }\n}\nexport default decodeJPEGBaseline12BitAsync;\n", "const local = {\n    jpeg: undefined,\n    decodeConfig: {},\n};\nexport function initialize(decodeConfig) {\n    local.decodeConfig = decodeConfig;\n    if (local.jpeg) {\n        return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n        import('jpeg-lossless-decoder-js').then(({ Decoder }) => {\n            const decoder = new Decoder();\n            local.jpeg = decoder;\n            resolve();\n        }, reject);\n    });\n}\nasync function decodeJPEGLossless(imageFrame, pixelData) {\n    await initialize();\n    if (typeof local.jpeg === 'undefined') {\n        throw new Error('No JPEG Lossless decoder loaded');\n    }\n    const byteOutput = imageFrame.bitsAllocated <= 8 ? 1 : 2;\n    const buffer = pixelData.buffer;\n    const decompressedData = local.jpeg.decode(buffer, pixelData.byteOffset, pixelData.length, byteOutput);\n    if (imageFrame.pixelRepresentation === 0) {\n        if (imageFrame.bitsAllocated === 16) {\n            imageFrame.pixelData = new Uint16Array(decompressedData.buffer);\n            return imageFrame;\n        }\n        imageFrame.pixelData = new Uint8Array(decompressedData.buffer);\n        return imageFrame;\n    }\n    imageFrame.pixelData = new Int16Array(decompressedData.buffer);\n    return imageFrame;\n}\nexport default decodeJPEGLossless;\n", "import charlsFactory from '@cornerstonejs/codec-charls/decodewasmjs';\nconst charlsWasm = new URL('@cornerstonejs/codec-charls/decodewasm', import.meta.url);\nconst local = {\n    codec: undefined,\n    decoder: undefined,\n    decodeConfig: {},\n};\nfunction getExceptionMessage(exception) {\n    return typeof exception === 'number'\n        ? local.codec.getExceptionMessage(exception)\n        : exception;\n}\nexport function initialize(decodeConfig) {\n    local.decodeConfig = decodeConfig;\n    if (local.codec) {\n        return Promise.resolve();\n    }\n    const charlsModule = charlsFactory({\n        locateFile: (f) => {\n            if (f.endsWith('.wasm')) {\n                return charlsWasm.toString();\n            }\n            return f;\n        },\n    });\n    return new Promise((resolve, reject) => {\n        charlsModule.then((instance) => {\n            local.codec = instance;\n            local.decoder = new instance.JpegLSDecoder();\n            resolve();\n        }, reject);\n    });\n}\nasync function decodeAsync(compressedImageFrame, imageInfo) {\n    try {\n        await initialize();\n        const decoder = local.decoder;\n        const encodedBufferInWASM = decoder.getEncodedBuffer(compressedImageFrame.length);\n        encodedBufferInWASM.set(compressedImageFrame);\n        decoder.decode();\n        const frameInfo = decoder.getFrameInfo();\n        const interleaveMode = decoder.getInterleaveMode();\n        const nearLossless = decoder.getNearLossless();\n        const decodedPixelsInWASM = decoder.getDecodedBuffer();\n        const encodedImageInfo = {\n            columns: frameInfo.width,\n            rows: frameInfo.height,\n            bitsPerPixel: frameInfo.bitsPerSample,\n            signed: imageInfo.signed,\n            bytesPerPixel: imageInfo.bytesPerPixel,\n            componentsPerPixel: frameInfo.componentCount,\n        };\n        const pixelData = getPixelData(frameInfo, decodedPixelsInWASM, imageInfo.signed);\n        const encodeOptions = {\n            nearLossless,\n            interleaveMode,\n            frameInfo,\n        };\n        return {\n            ...imageInfo,\n            pixelData,\n            imageInfo: encodedImageInfo,\n            encodeOptions,\n            ...encodeOptions,\n            ...encodedImageInfo,\n        };\n    }\n    catch (error) {\n        throw getExceptionMessage(error);\n    }\n}\nfunction getPixelData(frameInfo, decodedBuffer, signed) {\n    if (frameInfo.bitsPerSample > 8) {\n        if (signed) {\n            return new Int16Array(decodedBuffer.buffer, decodedBuffer.byteOffset, decodedBuffer.byteLength / 2);\n        }\n        return new Uint16Array(decodedBuffer.buffer, decodedBuffer.byteOffset, decodedBuffer.byteLength / 2);\n    }\n    if (signed) {\n        return new Int8Array(decodedBuffer.buffer, decodedBuffer.byteOffset, decodedBuffer.byteLength);\n    }\n    return new Uint8Array(decodedBuffer.buffer, decodedBuffer.byteOffset, decodedBuffer.byteLength);\n}\nexport default decodeAsync;\n", "import openJpegFactory from '@cornerstonejs/codec-openjpeg/decodewasmjs';\nconst openjpegWasm = new URL('@cornerstonejs/codec-openjpeg/decodewasm', import.meta.url);\nconst local = {\n    codec: undefined,\n    decoder: undefined,\n    decodeConfig: {},\n};\nexport function initialize(decodeConfig) {\n    local.decodeConfig = decodeConfig;\n    if (local.codec) {\n        return Promise.resolve();\n    }\n    const openJpegModule = openJpegFactory({\n        locateFile: (f) => {\n            if (f.endsWith('.wasm')) {\n                return openjpegWasm.toString();\n            }\n            return f;\n        },\n    });\n    return new Promise((resolve, reject) => {\n        openJpegModule.then((instance) => {\n            local.codec = instance;\n            local.decoder = new instance.J2KDecoder();\n            resolve();\n        }, reject);\n    });\n}\nasync function decodeAsync(compressedImageFrame, imageInfo) {\n    await initialize();\n    const decoder = local.decoder;\n    const encodedBufferInWASM = decoder.getEncodedBuffer(compressedImageFrame.length);\n    encodedBufferInWASM.set(compressedImageFrame);\n    decoder.decode();\n    const frameInfo = decoder.getFrameInfo();\n    const decodedBufferInWASM = decoder.getDecodedBuffer();\n    const imageFrame = new Uint8Array(decodedBufferInWASM.length);\n    imageFrame.set(decodedBufferInWASM);\n    const imageOffset = `x: ${decoder.getImageOffset().x}, y: ${decoder.getImageOffset().y}`;\n    const numDecompositions = decoder.getNumDecompositions();\n    const numLayers = decoder.getNumLayers();\n    const progessionOrder = ['unknown', 'LRCP', 'RLCP', 'RPCL', 'PCRL', 'CPRL'][decoder.getProgressionOrder() + 1];\n    const reversible = decoder.getIsReversible();\n    const blockDimensions = `${decoder.getBlockDimensions().width} x ${decoder.getBlockDimensions().height}`;\n    const tileSize = `${decoder.getTileSize().width} x ${decoder.getTileSize().height}`;\n    const tileOffset = `${decoder.getTileOffset().x}, ${decoder.getTileOffset().y}`;\n    const colorTransform = decoder.getColorSpace();\n    const decodedSize = `${decodedBufferInWASM.length.toLocaleString()} bytes`;\n    const compressionRatio = `${(decodedBufferInWASM.length / encodedBufferInWASM.length).toFixed(2)}:1`;\n    const encodedImageInfo = {\n        columns: frameInfo.width,\n        rows: frameInfo.height,\n        bitsPerPixel: frameInfo.bitsPerSample,\n        signed: frameInfo.isSigned,\n        bytesPerPixel: imageInfo.bytesPerPixel,\n        componentsPerPixel: frameInfo.componentCount,\n    };\n    const pixelData = getPixelData(frameInfo, decodedBufferInWASM);\n    const encodeOptions = {\n        imageOffset,\n        numDecompositions,\n        numLayers,\n        progessionOrder,\n        reversible,\n        blockDimensions,\n        tileSize,\n        tileOffset,\n        colorTransform,\n        decodedSize,\n        compressionRatio,\n    };\n    return {\n        ...imageInfo,\n        pixelData,\n        imageInfo: encodedImageInfo,\n        encodeOptions,\n        ...encodeOptions,\n        ...encodedImageInfo,\n    };\n}\nfunction getPixelData(frameInfo, decodedBuffer) {\n    if (frameInfo.bitsPerSample > 8) {\n        if (frameInfo.isSigned) {\n            return new Int16Array(decodedBuffer.buffer, decodedBuffer.byteOffset, decodedBuffer.byteLength / 2);\n        }\n        return new Uint16Array(decodedBuffer.buffer, decodedBuffer.byteOffset, decodedBuffer.byteLength / 2);\n    }\n    if (frameInfo.isSigned) {\n        return new Int8Array(decodedBuffer.buffer, decodedBuffer.byteOffset, decodedBuffer.byteLength);\n    }\n    return new Uint8Array(decodedBuffer.buffer, decodedBuffer.byteOffset, decodedBuffer.byteLength);\n}\nexport default decodeAsync;\n", "import openJphFactory from '@cornerstonejs/codec-openjph/wasmjs';\nconst openjphWasm = new URL('@cornerstonejs/codec-openjph/wasm', import.meta.url);\nconst local = {\n    codec: undefined,\n    decoder: undefined,\n    decodeConfig: {},\n};\nfunction calculateSizeAtDecompositionLevel(decompositionLevel, frameWidth, frameHeight) {\n    const result = { width: frameWidth, height: frameHeight };\n    while (decompositionLevel > 0) {\n        result.width = Math.ceil(result.width / 2);\n        result.height = Math.ceil(result.height / 2);\n        decompositionLevel--;\n    }\n    return result;\n}\nexport function initialize(decodeConfig) {\n    local.decodeConfig = decodeConfig;\n    if (local.codec) {\n        return Promise.resolve();\n    }\n    const openJphModule = openJphFactory({\n        locateFile: (f) => {\n            if (f.endsWith('.wasm')) {\n                return openjphWasm.toString();\n            }\n            return f;\n        },\n    });\n    return new Promise((resolve, reject) => {\n        openJphModule.then((instance) => {\n            local.codec = instance;\n            local.decoder = new instance.HTJ2KDecoder();\n            resolve();\n        }, reject);\n    });\n}\nasync function decodeAsync(compressedImageFrame, imageInfo) {\n    await initialize();\n    const decoder = new local.codec.HTJ2KDecoder();\n    const encodedBufferInWASM = decoder.getEncodedBuffer(compressedImageFrame.length);\n    encodedBufferInWASM.set(compressedImageFrame);\n    const decodeLevel = imageInfo.decodeLevel || 0;\n    decoder.decodeSubResolution(decodeLevel);\n    const frameInfo = decoder.getFrameInfo();\n    if (imageInfo.decodeLevel > 0) {\n        const { width, height } = calculateSizeAtDecompositionLevel(imageInfo.decodeLevel, frameInfo.width, frameInfo.height);\n        frameInfo.width = width;\n        frameInfo.height = height;\n    }\n    const decodedBufferInWASM = decoder.getDecodedBuffer();\n    const imageFrame = new Uint8Array(decodedBufferInWASM.length);\n    imageFrame.set(decodedBufferInWASM);\n    const imageOffset = `x: ${decoder.getImageOffset().x}, y: ${decoder.getImageOffset().y}`;\n    const numDecompositions = decoder.getNumDecompositions();\n    const numLayers = decoder.getNumLayers();\n    const progessionOrder = ['unknown', 'LRCP', 'RLCP', 'RPCL', 'PCRL', 'CPRL'][decoder.getProgressionOrder() + 1];\n    const reversible = decoder.getIsReversible();\n    const blockDimensions = `${decoder.getBlockDimensions().width} x ${decoder.getBlockDimensions().height}`;\n    const tileSize = `${decoder.getTileSize().width} x ${decoder.getTileSize().height}`;\n    const tileOffset = `${decoder.getTileOffset().x}, ${decoder.getTileOffset().y}`;\n    const decodedSize = `${decodedBufferInWASM.length.toLocaleString()} bytes`;\n    const compressionRatio = `${(decodedBufferInWASM.length / encodedBufferInWASM.length).toFixed(2)}:1`;\n    const encodedImageInfo = {\n        columns: frameInfo.width,\n        rows: frameInfo.height,\n        bitsPerPixel: frameInfo.bitsPerSample,\n        signed: frameInfo.isSigned,\n        bytesPerPixel: imageInfo.bytesPerPixel,\n        componentsPerPixel: frameInfo.componentCount,\n    };\n    let pixelData = getPixelData(frameInfo, decodedBufferInWASM);\n    const { buffer: b, byteOffset, byteLength } = pixelData;\n    const pixelDataArrayBuffer = b.slice(byteOffset, byteOffset + byteLength);\n    pixelData = new pixelData.constructor(pixelDataArrayBuffer);\n    const encodeOptions = {\n        imageOffset,\n        numDecompositions,\n        numLayers,\n        progessionOrder,\n        reversible,\n        blockDimensions,\n        tileSize,\n        tileOffset,\n        decodedSize,\n        compressionRatio,\n    };\n    return {\n        ...imageInfo,\n        pixelData,\n        imageInfo: encodedImageInfo,\n        encodeOptions,\n        ...encodeOptions,\n        ...encodedImageInfo,\n    };\n}\nfunction getPixelData(frameInfo, decodedBuffer) {\n    if (frameInfo.bitsPerSample > 8) {\n        if (frameInfo.isSigned) {\n            return new Int16Array(decodedBuffer.buffer, decodedBuffer.byteOffset, decodedBuffer.byteLength / 2);\n        }\n        return new Uint16Array(decodedBuffer.buffer, decodedBuffer.byteOffset, decodedBuffer.byteLength / 2);\n    }\n    if (frameInfo.isSigned) {\n        return new Int8Array(decodedBuffer.buffer, decodedBuffer.byteOffset, decodedBuffer.byteLength);\n    }\n    return new Uint8Array(decodedBuffer.buffer, decodedBuffer.byteOffset, decodedBuffer.byteLength);\n}\nexport default decodeAsync;\n", "export default function scaleArray(array, scalingParameters) {\n    const arrayLength = array.length;\n    const { rescaleSlope, rescaleIntercept, suvbw, doseGridScaling } = scalingParameters;\n    if (scalingParameters.modality === 'PT' &&\n        typeof suvbw === 'number' &&\n        !isNaN(suvbw)) {\n        for (let i = 0; i < arrayLength; i++) {\n            array[i] = suvbw * (array[i] * rescaleSlope + rescaleIntercept);\n        }\n    }\n    else if (scalingParameters.modality === 'RTDOSE' &&\n        typeof doseGridScaling === 'number' &&\n        !isNaN(doseGridScaling)) {\n        for (let i = 0; i < arrayLength; i++) {\n            array[i] = array[i] * doseGridScaling;\n        }\n    }\n    else {\n        for (let i = 0; i < arrayLength; i++) {\n            array[i] = array[i] * rescaleSlope + rescaleIntercept;\n        }\n    }\n    return true;\n}\n", "import bilinear from './shared/scaling/bilinear';\nimport replicate from './shared/scaling/replicate';\nimport { expose } from 'comlink';\nimport decodeLittleEndian from './shared/decoders/decodeLittleEndian';\nimport decodeBigEndian from './shared/decoders/decodeBigEndian';\nimport decodeRLE from './shared/decoders/decodeRLE';\nimport decodeJPEGBaseline8Bit from './shared/decoders/decodeJPEGBaseline8Bit';\nimport decodeJPEGBaseline12Bit from './shared/decoders/decodeJPEGBaseline12Bit-js';\nimport decodeJPEGLossless from './shared/decoders/decodeJPEGLossless';\nimport decodeJPEGLS from './shared/decoders/decodeJPEGLS';\nimport decodeJPEG2000 from './shared/decoders/decodeJPEG2000';\nimport decodeHTJ2K from './shared/decoders/decodeHTJ2K';\nimport applyModalityLUT from './shared/scaling/scaleArray';\nimport getMinMax from './shared/getMinMax';\nimport getPixelDataTypeFromMinMax, { validatePixelDataType, } from './shared/getPixelDataTypeFromMinMax';\nimport isColorImage from './shared/isColorImage';\nconst imageUtils = {\n    bilinear,\n    replicate,\n};\nconst typedArrayConstructors = {\n    Uint8Array,\n    Uint16Array,\n    Int16Array,\n    Float32Array,\n    Uint32Array,\n};\nfunction postProcessDecodedPixels(imageFrame, options, start, decodeConfig) {\n    const shouldShift = imageFrame.pixelRepresentation !== undefined &&\n        imageFrame.pixelRepresentation === 1;\n    const shift = shouldShift && imageFrame.bitsStored !== undefined\n        ? 32 - imageFrame.bitsStored\n        : undefined;\n    if (shouldShift && shift !== undefined) {\n        for (let i = 0; i < imageFrame.pixelData.length; i++) {\n            imageFrame.pixelData[i] = (imageFrame.pixelData[i] << shift) >> shift;\n        }\n    }\n    let pixelDataArray = imageFrame.pixelData;\n    imageFrame.pixelDataLength = imageFrame.pixelData.length;\n    const { min: minBeforeScale, max: maxBeforeScale } = getMinMax(imageFrame.pixelData);\n    const canRenderFloat = typeof options.allowFloatRendering !== 'undefined'\n        ? options.allowFloatRendering\n        : true;\n    let invalidType = isColorImage(imageFrame.photometricInterpretation) &&\n        options.targetBuffer?.offset === undefined;\n    const willScale = options.preScale?.enabled;\n    const hasFloatRescale = willScale &&\n        Object.values(options.preScale.scalingParameters).some((v) => typeof v === 'number' && !Number.isInteger(v));\n    const disableScale = !options.preScale.enabled || (!canRenderFloat && hasFloatRescale);\n    const type = options.targetBuffer?.type;\n    if (type && options.preScale.enabled && !disableScale) {\n        const scalingParameters = options.preScale.scalingParameters;\n        const scaledValues = _calculateScaledMinMax(minBeforeScale, maxBeforeScale, scalingParameters);\n        invalidType = !validatePixelDataType(scaledValues.min, scaledValues.max, typedArrayConstructors[type]);\n    }\n    if (type && !invalidType) {\n        pixelDataArray = _handleTargetBuffer(options, imageFrame, typedArrayConstructors, pixelDataArray);\n    }\n    else if (options.preScale.enabled && !disableScale) {\n        pixelDataArray = _handlePreScaleSetup(options, minBeforeScale, maxBeforeScale, imageFrame);\n    }\n    else {\n        pixelDataArray = _getDefaultPixelDataArray(minBeforeScale, maxBeforeScale, imageFrame);\n    }\n    let minAfterScale = minBeforeScale;\n    let maxAfterScale = maxBeforeScale;\n    if (options.preScale.enabled && !disableScale) {\n        const scalingParameters = options.preScale.scalingParameters;\n        _validateScalingParameters(scalingParameters);\n        const isRequiredScaling = _isRequiredScaling(scalingParameters);\n        if (isRequiredScaling) {\n            applyModalityLUT(pixelDataArray, scalingParameters);\n            imageFrame.preScale = {\n                ...options.preScale,\n                scaled: true,\n            };\n            const scaledValues = _calculateScaledMinMax(minBeforeScale, maxBeforeScale, scalingParameters);\n            minAfterScale = scaledValues.min;\n            maxAfterScale = scaledValues.max;\n        }\n    }\n    else if (disableScale) {\n        imageFrame.preScale = {\n            enabled: true,\n            scaled: false,\n        };\n        minAfterScale = minBeforeScale;\n        maxAfterScale = maxBeforeScale;\n    }\n    imageFrame.pixelData = pixelDataArray;\n    imageFrame.smallestPixelValue = minAfterScale;\n    imageFrame.largestPixelValue = maxAfterScale;\n    const end = new Date().getTime();\n    imageFrame.decodeTimeInMS = end - start;\n    return imageFrame;\n}\nfunction _isRequiredScaling(scalingParameters) {\n    const { rescaleSlope, rescaleIntercept, modality, doseGridScaling, suvbw } = scalingParameters;\n    const hasRescaleValues = typeof rescaleSlope === 'number' && typeof rescaleIntercept === 'number';\n    const isRTDOSEWithScaling = modality === 'RTDOSE' && typeof doseGridScaling === 'number';\n    const isPTWithSUV = modality === 'PT' && typeof suvbw === 'number';\n    return hasRescaleValues || isRTDOSEWithScaling || isPTWithSUV;\n}\nfunction _handleTargetBuffer(options, imageFrame, typedArrayConstructors, pixelDataArray) {\n    const { arrayBuffer, type, offset: rawOffset = 0, length: rawLength, rows, } = options.targetBuffer;\n    const TypedArrayConstructor = typedArrayConstructors[type];\n    if (!TypedArrayConstructor) {\n        throw new Error(`target array ${type} is not supported, or doesn't exist.`);\n    }\n    if (rows && rows != imageFrame.rows) {\n        scaleImageFrame(imageFrame, options.targetBuffer, TypedArrayConstructor);\n    }\n    const imageFrameLength = imageFrame.pixelDataLength;\n    const offset = rawOffset;\n    const length = rawLength !== null && rawLength !== undefined\n        ? rawLength\n        : imageFrameLength - offset;\n    const imageFramePixelData = imageFrame.pixelData;\n    if (length !== imageFramePixelData.length) {\n        throw new Error(`target array for image does not have the same length (${length}) as the decoded image length (${imageFramePixelData.length}).`);\n    }\n    const typedArray = arrayBuffer\n        ? new TypedArrayConstructor(arrayBuffer, offset, length)\n        : new TypedArrayConstructor(length);\n    typedArray.set(imageFramePixelData, 0);\n    pixelDataArray = typedArray;\n    return pixelDataArray;\n}\nfunction _handlePreScaleSetup(options, minBeforeScale, maxBeforeScale, imageFrame) {\n    const scalingParameters = options.preScale.scalingParameters;\n    _validateScalingParameters(scalingParameters);\n    const scaledValues = _calculateScaledMinMax(minBeforeScale, maxBeforeScale, scalingParameters);\n    return _getDefaultPixelDataArray(scaledValues.min, scaledValues.max, imageFrame);\n}\nfunction _getDefaultPixelDataArray(min, max, imageFrame) {\n    const TypedArrayConstructor = getPixelDataTypeFromMinMax(min, max);\n    const typedArray = new TypedArrayConstructor(imageFrame.pixelData.length);\n    typedArray.set(imageFrame.pixelData, 0);\n    return typedArray;\n}\nfunction _calculateScaledMinMax(minValue, maxValue, scalingParameters) {\n    const { rescaleSlope, rescaleIntercept, modality, doseGridScaling, suvbw } = scalingParameters;\n    if (modality === 'PT' && typeof suvbw === 'number' && !isNaN(suvbw)) {\n        return {\n            min: suvbw * (minValue * rescaleSlope + rescaleIntercept),\n            max: suvbw * (maxValue * rescaleSlope + rescaleIntercept),\n        };\n    }\n    else if (modality === 'RTDOSE' &&\n        typeof doseGridScaling === 'number' &&\n        !isNaN(doseGridScaling)) {\n        return {\n            min: minValue * doseGridScaling,\n            max: maxValue * doseGridScaling,\n        };\n    }\n    else if (typeof rescaleSlope === 'number' &&\n        typeof rescaleIntercept === 'number') {\n        return {\n            min: rescaleSlope * minValue + rescaleIntercept,\n            max: rescaleSlope * maxValue + rescaleIntercept,\n        };\n    }\n    else {\n        return {\n            min: minValue,\n            max: maxValue,\n        };\n    }\n}\nfunction _validateScalingParameters(scalingParameters) {\n    if (!scalingParameters) {\n        throw new Error('options.preScale.scalingParameters must be defined if preScale.enabled is true, and scalingParameters cannot be derived from the metadata providers.');\n    }\n}\nfunction createDestinationImage(imageFrame, targetBuffer, TypedArrayConstructor) {\n    const { samplesPerPixel } = imageFrame;\n    const { rows, columns } = targetBuffer;\n    const typedLength = rows * columns * samplesPerPixel;\n    const pixelData = new TypedArrayConstructor(typedLength);\n    const bytesPerPixel = pixelData.byteLength / typedLength;\n    return {\n        pixelData,\n        rows,\n        columns,\n        frameInfo: {\n            ...imageFrame.frameInfo,\n            rows,\n            columns,\n        },\n        imageInfo: {\n            ...imageFrame.imageInfo,\n            rows,\n            columns,\n            bytesPerPixel,\n        },\n    };\n}\nfunction scaleImageFrame(imageFrame, targetBuffer, TypedArrayConstructor) {\n    const dest = createDestinationImage(imageFrame, targetBuffer, TypedArrayConstructor);\n    const { scalingType = 'replicate' } = targetBuffer;\n    imageUtils[scalingType](imageFrame, dest);\n    Object.assign(imageFrame, dest);\n    imageFrame.pixelDataLength = imageFrame.pixelData.length;\n    return imageFrame;\n}\nexport async function decodeImageFrame(imageFrame, transferSyntax, pixelData, decodeConfig, options, callbackFn) {\n    const start = new Date().getTime();\n    let decodePromise = null;\n    let opts;\n    switch (transferSyntax) {\n        case '1.2.840.10008.1.2':\n        case '1.2.840.10008.1.2.1':\n            decodePromise = decodeLittleEndian(imageFrame, pixelData);\n            break;\n        case '1.2.840.10008.1.2.2':\n            decodePromise = decodeBigEndian(imageFrame, pixelData);\n            break;\n        case '1.2.840.10008.1.2.1.99':\n            decodePromise = decodeLittleEndian(imageFrame, pixelData);\n            break;\n        case '1.2.840.10008.1.2.5':\n            decodePromise = decodeRLE(imageFrame, pixelData);\n            break;\n        case '1.2.840.10008.1.2.4.50':\n            opts = {\n                ...imageFrame,\n            };\n            decodePromise = decodeJPEGBaseline8Bit(pixelData, opts);\n            break;\n        case '1.2.840.10008.1.2.4.51':\n            decodePromise = decodeJPEGBaseline12Bit(imageFrame, pixelData);\n            break;\n        case '1.2.840.10008.1.2.4.57':\n            decodePromise = decodeJPEGLossless(imageFrame, pixelData);\n            break;\n        case '1.2.840.10008.1.2.4.70':\n            decodePromise = decodeJPEGLossless(imageFrame, pixelData);\n            break;\n        case '1.2.840.10008.1.2.4.80':\n            opts = {\n                signed: imageFrame.pixelRepresentation === 1,\n                bytesPerPixel: imageFrame.bitsAllocated <= 8 ? 1 : 2,\n                ...imageFrame,\n            };\n            decodePromise = decodeJPEGLS(pixelData, opts);\n            break;\n        case '1.2.840.10008.1.2.4.81':\n            opts = {\n                signed: imageFrame.pixelRepresentation === 1,\n                bytesPerPixel: imageFrame.bitsAllocated <= 8 ? 1 : 2,\n                ...imageFrame,\n            };\n            decodePromise = decodeJPEGLS(pixelData, opts);\n            break;\n        case '1.2.840.10008.1.2.4.90':\n            opts = {\n                ...imageFrame,\n            };\n            decodePromise = decodeJPEG2000(pixelData, opts);\n            break;\n        case '1.2.840.10008.1.2.4.91':\n            opts = {\n                ...imageFrame,\n            };\n            decodePromise = decodeJPEG2000(pixelData, opts);\n            break;\n        case '3.2.840.10008.1.2.4.96':\n        case '1.2.840.10008.1.2.4.201':\n        case '1.2.840.10008.1.2.4.202':\n        case '1.2.840.10008.1.2.4.203':\n            opts = {\n                ...imageFrame,\n            };\n            decodePromise = decodeHTJ2K(pixelData, opts);\n            break;\n        default:\n            throw new Error(`no decoder for transfer syntax ${transferSyntax}`);\n    }\n    if (!decodePromise) {\n        throw new Error('decodePromise not defined');\n    }\n    const decodedFrame = await decodePromise;\n    const postProcessed = postProcessDecodedPixels(decodedFrame, options, start, decodeConfig);\n    callbackFn?.(postProcessed);\n    return postProcessed;\n}\nconst obj = {\n    decodeTask({ imageFrame, transferSyntax, decodeConfig, options, pixelData, callbackFn, }) {\n        return decodeImageFrame(imageFrame, transferSyntax, pixelData, decodeConfig, options, callbackFn);\n    },\n};\nexpose(obj);\n", "import { convertRGBColorByPixel, convertRGBColorByPlane, convertYBRFullByPixel, convertYBRFullByPlane, convertPALETTECOLOR, } from './imageLoader/colorSpaceConverters/index';\nimport { default as wadouri } from './imageLoader/wadouri/index';\nimport { default as wadors } from './imageLoader/wadors/index';\nimport { default as init } from './init';\nimport { default as convertColorSpace } from './imageLoader/convertColorSpace';\nimport { default as createImage } from './imageLoader/createImage';\nimport { default as decodeJPEGBaseline8BitColor } from './imageLoader/decodeJPEGBaseline8BitColor';\nimport { default as getImageFrame } from './imageLoader/getImageFrame';\nimport { default as getMinMax } from './shared/getMinMax';\nimport { default as isColorImage } from './shared/isColorImage';\nimport { default as isJPEGBaseline8BitColor } from './imageLoader/isJPEGBaseline8BitColor';\nimport { default as getPixelData } from './imageLoader/wadors/getPixelData';\nimport { internal } from './imageLoader/internal/index';\nimport * as constants from './constants';\nimport { decodeImageFrame } from './decodeImageFrameWorker';\nconst cornerstoneDICOMImageLoader = {\n    constants,\n    convertRGBColorByPixel,\n    convertRGBColorByPlane,\n    convertYBRFullByPixel,\n    convertYBRFullByPlane,\n    convertPALETTECOLOR,\n    wadouri,\n    wadors,\n    init,\n    convertColorSpace,\n    createImage,\n    decodeJPEGBaseline8BitColor,\n    getImageFrame,\n    getPixelData,\n    getMinMax,\n    isColorImage,\n    isJPEGBaseline8BitColor,\n    internal,\n    decodeImageFrame,\n};\nexport { constants, convertRGBColorByPixel, convertRGBColorByPlane, convertYBRFullByPixel, convertYBRFullByPlane, convertPALETTECOLOR, wadouri, wadors, init, convertColorSpace, createImage, decodeJPEGBaseline8BitColor, getImageFrame, getPixelData, getMinMax, isColorImage, isJPEGBaseline8BitColor, internal, decodeImageFrame, };\nexport default cornerstoneDICOMImageLoader;\n"],
  "mappings": "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",
  "names": ["root", "factory", "exports", "module", "require", "define", "amd", "this", "__WEBPACK_EXTERNAL_MODULE__0__", "stringVrs", "AE", "AS", "AT", "CS", "DA", "DS", "DT", "FL", "FD", "IS", "LO", "LT", "OB", "OD", "OF", "OW", "PN", "SH", "SL", "SQ", "SS", "ST", "TM", "UI", "UL", "UN", "UR", "US", "UT", "isStringVr", "vr", "isPrivateTag", "tag", "lastGroupDigit", "parseInt", "isNaN", "parsePN", "personName", "stringValues", "split", "familyName", "givenName", "middleName", "prefix", "suffix", "parseTM", "time", "validate", "length", "hh", "substring", "mm", "ss", "fractionalStr", "ffffff", "Math", "pow", "hours", "minutes", "seconds", "fractionalSeconds", "isValidDate", "d", "m", "y", "parseDA", "date", "yyyy", "dd", "year", "month", "day", "explicitElementToString", "dataSet", "element", "textResult", "multiElementToString", "numItems", "func", "result", "i", "call", "toString", "util", "string", "num", "uint32", "toUpperCase", "uint16", "int16", "int32", "explicitDataSetToJS", "options", "omitPrivateAttibutes", "maxElementLength", "elements", "items", "sequenceItems", "push", "asString", "dataOffset", "isEndOfImageMarker", "position", "byteArray", "findLastImageFrameFragmentIndex", "pixelDataElement", "startFragment", "fragmentIndex", "fragments", "fragment", "createJPEGBasicOffsetTable", "encapsulatedPixelData", "hadUndefinedLength", "basicOffsetTable", "startFragmentIndex", "offset", "endFragmentIndex", "readTag", "byteStream", "groupNumber", "readUint16", "elementNumber", "substr", "findEndOfEncapsulatedElement", "warnings", "numFragments", "readUint32", "baseOffset", "seek", "findAndSetUNElementLength", "maxPosition", "readFixedString", "byte", "String", "fromCharCode", "getByteArrayParser", "defaultParser", "parser", "DataSet", "a", "byteArrayParser", "index", "readInt16", "readInt32", "readFloat", "readDouble", "numMatching", "match", "Value", "fixedString", "trim", "replace", "value", "parseFloat", "bytes", "e", "t", "r", "findItemDelimitationItemAndSetElementLength", "isSequence", "nextTag", "readDicomElementImplicit", "untilTag", "vrCallback", "readSequenceItemsImplicit", "readSequenceItem", "readSequenceItemImplicit", "item", "parseDicomDataSet", "readSequenceItemExplicit", "readDicomElementExplicit", "readSequenceItemsExplicit", "getDataLengthSizeInBytesForVR", "parseDicomDataSetExplicit", "parseDicomDataSetImplicit", "alloc", "Buffer", "Uint8Array", "byteArrayForParsingFloat", "Float32Array", "buffer", "Float64Array", "sharedCopy", "byteOffset", "slice", "ByteStream", "numBytes", "byteArrayView", "readPart10Header", "TransferSyntaxUID", "littleEndianByteStream", "littleEndianByteArrayParser", "isPart10", "getSize", "readPrefix", "x00020010", "metaHeaderDataSet", "readTheHeader", "BEI", "parseDicom", "Error", "readTransferSyntax", "transferSyntaxElement", "readDataSet", "transferSyntax", "explicit", "dataSetByteStream", "isNode", "Object", "prototype", "process", "bigEndianByteArrayParser", "inflater", "fullByteArrayCallback", "zlib", "deflatedBuffer", "inflatedBuffer", "inflateRawSync", "fullByteArrayBuffer", "copy", "pako", "deflated", "inflated", "inflateRaw", "fullByteArray", "set", "exception", "instanceDataSet", "propertyName", "hasOwnProperty", "concat", "calculateBufferSize", "bufferSize", "readEncapsulatedPixelDataFromFragments", "fragmentZeroPosition", "pixelData", "pixelDataIndex", "fragmentOffset", "j", "findFragmentIndexWithOffset", "calculateNumberOfFragmentsForFrame", "frameIndex", "nextFrameOffset", "readEncapsulatedImageFrame", "deprecatedNoticeLogged", "readEncapsulatedPixelData", "frame", "console", "log", "dicomParser", "version", "LEI", "LEE", "installedModules", "__webpack_require__", "modules", "c", "name", "getter", "o", "defineProperty", "enumerable", "get", "Symbol", "toStringTag", "mode", "__esModule", "ns", "create", "key", "bind", "n", "object", "property", "p", "s", "moduleId", "l", "libjpegturbowasm_decode", "err", "module", "exports", "typeConverters", "fieldTypes", "options", "obj", "handle", "buffer", "ret", "_setThrew", "CharLSWASM", "err", "module", "exports", "typeConverters", "fieldTypes", "options", "obj", "handle", "argTypes", "buffer", "ret", "OpenJPEGWASM", "err", "module", "exports", "typeConverters", "fieldTypes", "options", "obj", "handle", "buffer", "ret", "Module", "err", "module", "exports", "getValue", "typeConverters", "fieldTypes", "options", "obj", "handle", "argTypes", "HEAP", "buffer", "ret", "dicomParser", "dicomParser", "options", "xhr", "options", "ImageQualityStatus", "options", "metaDataProvider", "get", "purge", "dicomParser", "basicOffsetTable", "options", "metaData", "options", "imageFrame", "typedArrayConstructors", "ImageQualityStatus", "options", "getNumberValues", "getNumberValues_default", "dicomParser", "getOverlayPlaneModule", "metaData", "getFrameInformation", "getMultiframeInformation", "metaData", "add", "get", "remove", "purge", "add", "get", "remove", "purge", "metaData", "getNumberValues_default", "metaData", "getNumberValues_default", "getNumberValues_default", "getUSEnhancedRegions", "metaDataProvider", "getMultiframeInformation", "getFrameInformation", "metaData", "getNumberValues_default", "getUSEnhancedRegions", "getOverlayPlaneModule", "metaDataProvider_default", "options", "getValue", "metaData", "getPixelData", "mediaType", "options", "getPixelData_default", "ProgressiveIterator", "ImageQualityStatus", "loadImage", "options", "imageId", "mediaType", "getPixelData_default", "register_default", "metaDataProvider_default", "metaData", "getNumberValues_default", "metaDataProvider_default", "getPixelData_default", "register_default", "register_default", "options", "libjpegTurboFactory", "getPixelData", "local", "local", "initialize", "import_decodewasmjs", "local", "initialize", "charlsFactory", "decodeAsync", "getPixelData", "import_decodewasmjs", "local", "initialize", "openJpegFactory", "decodeAsync", "getPixelData", "local", "initialize", "openJphFactory", "decodeAsync", "getPixelData", "options", "typedArrayConstructors", "decodeImageFrame", "getPixelData_default", "decodeImageFrame"]
}
